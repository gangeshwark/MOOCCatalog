{
  "courses": [
    {
      "instructors": [
        {
          "bio": "David Evans is a Professor of Computer Science at the University of Virginia where he teaches computer science and leads <a href=\"http://www.jeffersonswheel.org/\" target=\"_blank\">research in computer security</a>. He is the author of an <a href=\"http://www.computingbook.org/\" target=\"_blank\">introductory computer science textbook</a> and has won Virginia's highest award for university faculty. He has PhD, SM, and SB degrees from MIT.",
          "image": "https://lh6.ggpht.com/1x-8cXA7JU8bNOy4xf1TyroDZlbI1aWDpeq2fjUcjEhEhfGyF5RBoS4yRjop22RBOfWNmtoyf67trTmcQg-6=s0#w=137&h=137",
          "name": "Dave Evans"
        }
      ],
      "subtitle": "Build a Search Engine & a Social Network",
      "key": "cs101",
      "image": "https://lh5.ggpht.com/ITepKi-2pz4Q6lrLfv6QDNViEGIfxyupzgQwx1YgS4L8m3MFITBKWDpaZb_VoAP-zV3bEEoIbFY7mauj8HM=s0#w=1724&h=1060",
      "expected_learning": "You\u2019ll learn the programming language Python, and you\u2019ll explore foundational concepts in computer science. Most importantly, you\u2019ll start thinking like a software engineer by solving interesting problems (how to build a web crawler or a social network) using computer programming. \n\nThis course is a first step into the world of computer science, and whether you want to become a software engineer, or collaborate with software engineers, this course is for you. You\u2019ll be prepared for intermediate-level computer science classes when you\u2019ve mastered the concepts covered in this course.\n\n###Build a Search Engine\nThroughout this course, you\u2019ll build a search engine by learning about and producing key search engine components including a crawler, an index and a page rank algorithm. As you build these pieces, you\u2019ll be learning about and practicing computer science skills that will ready you for intermediate level computer science courses. \n\n###Build a Social Network\nAt the end of the course we will give you a set of relationships (i.e. strings of phrases like \u201cDave likes Andy, Kathleen and Kristy\u201d) and you will use your new computer science skills to organize these relationships into a social network. With your new social network, you can explore relationships and gain insight into how you fit into your own social networks.",
      "featured": false,
      "teaser_video": {"youtube_url": "https://www.youtube.com/watch?v=Pm_WAWZNbdA"},
      "title": "Intro to Computer Science",
      "required_knowledge": "There is no prior computer programming knowledge needed for this course. Beginners are welcome!",
      "syllabus": "###Lesson 1: How to Get Started\n\n- Interview with Sergey Brin\n- Getting Started with Python\n- Processors\n- Grace Hopper\n- Variables\n- Strings and Numbers\n- Indexing Strings\n- String Theory\n\n###Lesson 2: How to Repeat\n\n- Introducing Procedures\n- Sum Procedure with a Return Statement\n- Equality Comparisons\n- If Statements\n- Or Function\n- Biggest Procedure\n- While Loops\n- Print Numbers\n\n###Lesson 2.5: How to Solve Problems\n\n- What are the Inputs\n- Algorithm Pseudocode\n- Optimizing\n\n###Lesson 3: How to Manage Data\n\n- Nested Lists\n- A List of Strings\n- Aliasing\n- List Operations\n- List Addition and Length\n- How Computers Store Data\n- For Loops\n- Popping Elements\n- Crawl Web\n\n### Lesson 4: Responding to Queries\n\n- Data Structures\n- Lookup\n- Building the Web Index\n- Latency\n- Bandwidth\n- Buckets of Bits\n- Protocols\n\n### Lesson 5: How Programs Run\n\n- Measuring Speed\n- Spin Loop\n- Index Size vs. Time\n- Making Lookup Faster\n- Hash Function\n- Testing Hash Functions\n- Implementing Hash Tables\n- Dictionaries\n- Modifying the Search Engine\n\n### Lesson 6: How to Have Infinite Power\n\n- Infinite Power\n- Counter\n- Recursive Definitions\n- Recursive Procedures\n- Palindromes\n- Recursive v. Iterative\n- Divide and Be Conquered \n- Ranking Web Pages\n\n### Lesson 7: Past, Present, and the Future of Computing\n\n- Past of Computing\n- Computer History Museum \n- First Hard Drive\n- Search Before Computers\n- Present of Computing\n- Slac and Big Data\n- Open Source\n- Future of Computing\n- Text Analysis\n- Energy Aware Computing\n- Computer Security\n- Quantum Computing",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/cs101?utm_medium=referral&utm_campaign=api",
      "project_name": "Create and Analyze a Social Network",
      "full_course_available": true,
      "faq": "### When does the course begin?\n \nThis class is self paced. You can begin whenever you like and then follow your own pace. It\u2019s a good idea to set goals for yourself to make sure you stick with the course.\n\n### How long will the course be available?\n\nThis class will always be available! \n\n### How do I know if this course is for me?\n\n Take a look at the \u201cClass Summary,\u201d \u201cWhat Should I Know,\u201d and \u201cWhat Will I Learn\u201d sections above. If you want to know more, just enroll in the course and start exploring.\n\n### Can I skip individual videos? What about entire lessons?\n\n Yes! The point is for you to learn what YOU need (or want) to learn. If you already know something, feel free to skip ahead. If you ever find that you\u2019re confused, you can always go back and watch something that you skipped.\n\n### What are the rules on collaboration?\n\n Collaboration is a great way to learn. You should do it! The key is to use collaboration as a way to enhance learning, not as a way of sharing answers without understanding them. \n\n### Why are there so many questions?\n\n Udacity classes are a little different from traditional courses. We intersperse our video segments with interactive questions. There are many reasons for including these questions: to get you thinking, to check your understanding, for fun, etc... But really, they are there to help you learn. They are NOT there to evaluate your intelligence, so try not to let them stress you out.\n\n### What should I do while I\u2019m watching the videos?\n\n Learn actively! You will retain more of what you learn if you take notes, draw diagrams, make notecards, and actively try to make sense of the material.",
      "affiliates": [],
      "tracks": [
        "Data Science",
        "Web Development",
        "Software Engineering"
      ],
      "banner_image": "https://lh5.ggpht.com/UCA7Y75zHA5jwS9o5dmeAn8TlBiTZZbFQZ3ktLaVnfgSHNELh1rquY1dbzOB6BaYyXP0UMNNazdauW_g1w=s0#w=4680&h=968",
      "short_summary": "Learn key computer science concepts in this introductory Python course. You'll learn by doing, and will build your own search engine and social network.",
      "starter": true,
      "level": "beginner",
      "expected_duration_unit": "months",
      "summary": "In this introduction to computer programming course, you\u2019ll learn and practice key computer science concepts by building your own versions of popular web applications. You\u2019ll learn Python, a powerful, easy-to-learn, and widely used programming language, and you\u2019ll explore computer science basics, as you build your own search engine and social network.",
      "expected_duration": 3
    },
    {
      "instructors": [
        {
          "bio": "A passionate educator and programmer, Cameron lives and breathes web development as he creates programming courses at Udacity. Before coming here, Cameron was a combination Director of Content and web developer at Seattle startup LearnBIG. He taught four years of high school physics and chemistry in Nashville, TN, during which time he pioneered teaching physics with the video game <em>Portal 2</em>. Cameron graduated with a degree in physics and astronomy from Vanderbilt University and earned his master's in teaching from Belmont University.",
          "image": "https://lh6.ggpht.com/k08baq8ESoDPzyVh0dfvmEqYMawGbd-gJU0_TA0M1EDptu1PNgq1Uss7eXVV8bvLzJhfZArvql-bBJYeB_zb=s0#w=200&h=200",
          "name": "Cameron Pittman"
        },
        {
          "bio": "Jessica fell in love with teaching as a wee child when she forced her younger siblings to play \"school\" and learn about subjects she had mastered during the school year. She spent her early career in hardware, where she trained teachers to use microcontrollers and robotics in the classroom. She earned her BS in Electrical Engineering Technology from the University of Central Florida and ME in Engineering Management from the University of Wisconsin-Madison. In her spare time, Jessica enjoys reading, skiing, and traveling the world.",
          "image": "https://lh3.ggpht.com/20ptLSWskAtxwXpc0GiQI0TTYbgQhGnewe8LgL8WRkyCDGS1_4PUfGxA4wz-UlFr3DiwYmh4GuTMn7YB2f8=s0#w=2000&h=2000",
          "name": "Jessica Uelmen"
        }
      ],
      "subtitle": "Not Your Typical Intro to Web Dev",
      "key": "ud304",
      "image": "https://lh6.ggpht.com/KHjK8i_BBLXVYAverR73RvYt06rPk7JnKQWcUIyzMYUnVSPL_zC_asTuM-e69zkibagGRnC5u-bB04nPTQ=s0#w=1278&h=786",
      "expected_learning": "Front-end Web Developers must have a fundamental understanding of HTML and CSS, which we\u2019ll accomplish in this course by converting digital design mockups into static web pages. To build the web pages you will use HTML, CSS and Bootstrap, the popular Twitter CSS framework.\n\nAfter completing this course you will be able to build a responsive portfolio site with your own CSS framework. You'll also have the functionality in place to add future projects to your portfolio. Most importantly, you will have an understanding of the DOM and how HTML, CSS, and JavaScript relate to each other.\n\nThis course's project is part of our <a href=\"https://www.udacity.com/course/nd001\" target=\"_blank\">Front-End Web Developer</a> Nanodegree.",
      "featured": true,
      "teaser_video": {"youtube_url": ""},
      "title": "Intro to HTML and CSS",
      "required_knowledge": "You should have ability and skills to download and use a text editor for editing your web pages, we recommend <a href=\"http://www.sublimetext.com/\" target=\"_blank\">Sublime Text</a> or <a href=\"https://atom.io/\" target=\"_blank\">Atom</a>. You can use another text editor if you want, but it should have the ability to highlight code syntax for your own convenience.\n\nYou should be able to download and install <a href=\"https://www.google.com/intl/en/chrome/browser/\" target=\"_blank\">Google Chrome</a>, which is the browser we\u2019ll be exploring developer tools with in this course.",
      "syllabus": "### Lesson 1 -  <a href=\"https://udacity.com/course/viewer#!/c-ud304/l-2617868617\">From Design to Code</a>\n\nDiligently employ a code/test/refine strategy as you precisely and deliberately translate initial design documents into static web pages. You'll also investigate the Document Object Model (DOM) and its implications for web development.\n\n### Lesson 2 - <a href=\"https://udacity.com/course/viewer#!/c-ud304/l-2810388540\">Your Own Framework</a>\n\nTake pride in creating and personalising your own multi-platform, responsive CSS framework for publishing your professional portfolio projects to the web.\n\n### Lesson 3 - <a href=\"https://udacity.com/course/viewer#!/c-ud304/l-2794148535\">Learning and Using Bootstrap</a>\n\nStrategically investigate an existing professional CSS framework as you use it to build a website using responsive design principles while maintaining code readability.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/ud304?utm_medium=referral&utm_campaign=api",
      "project_name": "Portfolio Mock Up to HTML",
      "full_course_available": true,
      "faq": "",
      "affiliates": [],
      "tracks": ["Web Development"],
      "banner_image": "https://lh5.ggpht.com/hsbaPB2ONN_pDAljOlO6i5gWjneQcRnVnn5j4vmYqoqkASy2gcfKnUSogEmFcXAVwZFx1ZL2Pen-toR1zQNS=s0#w=4680&h=968",
      "short_summary": "Learn how to convert digital design mockups into static web pages and how to build a responsive portfolio site to showcase your work.",
      "starter": false,
      "level": "beginner",
      "expected_duration_unit": "weeks",
      "summary": "HTML and CSS are markup languages and the building blocks that make up the web. This course is called \"Not your Typical Intro...\" because it does not follow the usual pattern of other courses and tutorials that you find on the Internet. Usually HTML and CSS are taught with a focus on language syntax. But knowing syntax alone does not enable you to create a webpage from a design. You need to know where to start and how to approach the task, in other words - you need to learn how to think like a front-end developer. \n\nIn this course you will learn how to convert digital design mockups into static web pages. We will teach you how to approach page layout, how to break down a design mockup into page elements, and how to implement that in HTML and CSS.\n\nYou will also learn about responsive design techniques, which are increasingly important in a world where mobile devices and TV screens are used more and more often to look for information and entertainment.",
      "expected_duration": 3
    },
    {
      "instructors": [
        {
          "bio": "A passionate educator and programmer, Cameron lives and breathes web development as he creates programming courses at Udacity. Before coming here, Cameron was a combination Director of Content and web developer at Seattle startup LearnBIG. He taught four years of high school physics and chemistry in Nashville, TN, during which time he pioneered teaching physics with the video game <em>Portal 2</em>. Cameron graduated with a degree in physics and astronomy from Vanderbilt University and earned his master's in teaching from Belmont University.",
          "image": "https://lh6.ggpht.com/k08baq8ESoDPzyVh0dfvmEqYMawGbd-gJU0_TA0M1EDptu1PNgq1Uss7eXVV8bvLzJhfZArvql-bBJYeB_zb=s0#w=200&h=200",
          "name": "Cameron Pittman"
        },
        {
          "bio": "James Williams first fell in love with teaching while working as an instructor at a computer camp. He runs obstacle course/adventure races in his spare time and is the author of HTML5 Game Programming, which has been translated into Chinese and Korean. He holds degrees in Computer Science (BA, MS) and French (BA).",
          "image": "https://lh3.ggpht.com/XG9jWlrbNqQXp9OJjfasItFVPEVTXV0AMYOsNcydhnLHJw3CKByD4kqHOiJJIv4hBDodwry36kEKkWVkbqg=s0#w=442&h=442",
          "name": "James Williams"
        }
      ],
      "subtitle": "The Programming Language of the Web",
      "key": "ud804",
      "image": "https://lh6.ggpht.com/TY7yDlB-w_lMOQHAtOBZjnn-hYAsggB_9TX8TcX1XeR1kTYF4HEggwsxGKd8Ri3rag1USR0gPQvcZvJN5cw=s0#w=788&h=484",
      "expected_learning": "Today, front-end developers work with web designers to create the interactive experiences that make the web the addictive playground we know and love. As the size and influence of the web have expanded, so has the importance of ensuring a website offers users an unforgettable experience.\n\nPerhaps your end goal is to create a HTML5 game, code the front-end for an app idea you have, or maybe you want to use one of the growing set of libraries that let you compile code written in another language or for another platform down to JavaScript. With JavaScript, you can do all these things and more.\n\n###Project\nYou will create an interactive r\u00e9sum\u00e9 that you can share to the world and show your growing skills at the time.\n\nHaving a good r\u00e9sum\u00e9 is a key component of securing a better job. We'll give you the template styles and code to create a modern and mobile friendly r\u00e9sum\u00e9 (also called a curriculum vitae/CV outside the United States) that you can modify and customize.",
      "featured": false,
      "teaser_video": {"youtube_url": ""},
      "title": "JavaScript Basics",
      "required_knowledge": "We expect that you have *some* experience programming in another language, such as Python, and can describe concepts like loops, functions and objects. Our \n<a href=\"https://www.udacity.com/course/cs101\" target=\"_blank\">Intro to Computer Science</a>\n and <a href=\"https://www.udacity.com/course/ud036\" target=\"_blank\">Programming Fundamentals with Python</a> courses are great places to get started.\n\nWhile we do describe the underlying principles behind basic programming techniques, this course focuses on implementing the principles with JavaScript rather than the principles themselves.\n\nHTML and CSS are not required, however, knowledge of CSS will help you customize your r\u00e9sum\u00e9 project.",
      "syllabus": "### Lesson 1: Getting Up and Running\n\nLearn about the tools we'll be using throughout the course and begin modifying web pages with a little bit of code.\n\n- Introduction of r\u00e9sum\u00e9 project\n- Components of the r\u00e9sum\u00e9\n- Introduction to browser developer tools\n- Running commands on the console\n- Appending elements to the page\n\n### Lesson 2: Data Types\n\nDig deeper into JavaScript as we introduce you to the building blocks of the language as you write more complex code using variables and advanced data structures like JSON, Objects, and Arrays.\n\n- Variables\n- Strings\n- Evaluating values\n- Arrays\n- Objects\n- JSON\n- Validating JSON\n\n### Lesson 3: Flow Control\n\nFinish the r\u00e9sum\u00e9 while you learn how to make your code more modular and reusable by using conditional statements, loops, and functions.\n\n- Conditional statements\n- For and while loops\n- Functions\n- Encapsulation",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/ud804?utm_medium=referral&utm_campaign=api",
      "project_name": "Interactive Resume",
      "full_course_available": true,
      "faq": "",
      "affiliates": [],
      "tracks": ["Web Development"],
      "banner_image": "https://lh4.ggpht.com/VklYwGjNp3Cmv8FbPSJGywEQGAwuOpBdIml1I2ZjgpfdJUKJ6pjPKAr1ZnkRnJlq5FXpxqoF68lOaOpiblSN=s0#w=4680&h=968",
      "short_summary": "Learn JavaScript syntax and coding conventions that web developers use to create interactive and dynamic websites while you create an online r\u00e9sum\u00e9 for your portfolio.",
      "starter": false,
      "level": "beginner",
      "expected_duration_unit": "weeks",
      "summary": "We're here to get you started with JavaScript!\nIn the twenty plus years since its inception, JavaScript has become the lingua franca of the web, that's to say, it's become the main tool to create interactive content on the Internet.\n\nIn this course, you'll explore the JavaScript programming language by creating an interactive version of your r\u00e9sum\u00e9. You\u2019ll learn the JavaScript programming fundamentals you need while building new elements and sections to enhance your r\u00e9sum\u00e9.\n\nThis course is also a part of our <a href=\"https://www.udacity.com/course/nd001\">Front-End Web Developer</a> Nanodegree.",
      "expected_duration": 3
    },
    {
      "instructors": [
        {
          "bio": "Before joining Udacity, Caroline worked as a Software Engineer at Quixey, a startup building a search engine for apps.  While receiving her undergraduate degree from Carnegie Mellon, she was a TA for six different courses, and that same love for teaching later led her to join Udacity. Outside of work, she likes reading fiction, playing board games, and drinking bubble tea.",
          "image": "https://lh4.ggpht.com/BguyLDX-W3dEJFcXQaQZ4xLVvxpjKrwzC6CJyDbAGOm_BtIxgKNk94sq4Wxuhb4621aV6d5XFQYYOc8Jrck=s0#w=1476&h=1476",
          "name": "Caroline Buckey"
        },
        {
          "bio": "Sarah Spikes earned her BS and MS in Computer Science at Stanford, where she spent a lot of time as a Teaching Assistant. She spent two years at Google as a Software Engineer before following her passion for teaching by joining Udacity. In her spare time, Sarah enjoys performing musical theatre, making sorbet and rock climbing.",
          "image": "https://lh5.ggpht.com/Kh0GwczQEDUTBJkjELrfF4pTNHi4HQsWmiI68bY9SlUfAU0xKidGGJjeVAt58aBf6g5T4Z5uqP7mRG2ZXEQ=s0#w=138&h=138",
          "name": "Sarah Spikes"
        }
      ],
      "subtitle": "Version Control for Code",
      "key": "ud775",
      "image": "https://lh5.ggpht.com/y6QqOHLmFIoeSfv2eTSAkqKxFiWVXaWvpIfInxf9nhf_SPBFf5rXElThQTZbsUFram7UEb8eN2gAUe9fLE5H=s0#w=1725&h=1060",
      "expected_learning": "Git is used by many tech companies, and a public GitHub profile serves as a great portfolio for any developer. But more than that, you\u2019ll establish an efficient programming workflow that allows you to:\n\n* Keep track of multiple versions of a file\n* Track bugs by reverting to previous working versions of a file\n* Seamlessly collaborate with other developers on a project\n\nThe use of tools like Git and GitHub is essential for collaborating with other developers in most professional environments.",
      "featured": true,
      "teaser_video": {"youtube_url": ""},
      "title": "How to Use Git and GitHub",
      "required_knowledge": "While this course does not involve programming, students should have some experience with a programming or markup language.\nAdditionally, students should be familiar with navigating the command line. If unfamiliar or if you want a refresher, check out [these instructions](https://www.udacity.com/wiki/ud775/command-line-instructions).",
      "syllabus": "###Lesson 1: Navigating a Commit History\nIn this lesson, you\u2019ll learn about a few different types of version control systems and discover what makes Git a great version control system for programmers.  You\u2019ll also get practice using Git to view the history of an existing project.  You\u2019ll learn to see all the versions that have been saved, checkout a previous version, and compare two different versions.\n###Lesson 2: Creating and Modifying a Repository\nIn this lesson, you\u2019ll learn how to create a repository and save versions of your project.  You\u2019ll learn about the staging area, committing your code, branching, and merging, and how you can use these to make you more efficient and effective.\n###Lesson 3: Using GitHub to Collaborate\nIn this lesson, you\u2019ll get practice using GitHub or other remote repositories to share your changes with others and collaborate on multi-developer projects.  You\u2019ll learn how to make and review a pull request on GitHub.  Finally, you\u2019ll get practice by collaborating with other Udacity students to write a create-your-own-adventure story.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/ud775?utm_medium=referral&utm_campaign=api",
      "project_name": "Contribute to a Live Project",
      "full_course_available": true,
      "faq": "",
      "affiliates": [],
      "tracks": [
        "Web Development",
        "Software Engineering"
      ],
      "banner_image": "https://lh3.ggpht.com/6ATWYiVnh23EJmmyQSs-IkIIiWbIfBhnzEdkjNgXlwJsuQdcKJLgY5A4Mq9zhx0uFUoLuj0SCSUP5C4xMw0=s0#w=4680&h=968",
      "short_summary": "Learn to use version control, an important tool for any developer.  The course will focus on Git, a specific version control system, and GitHub, a collaboration platform.",
      "starter": false,
      "level": "beginner",
      "expected_duration_unit": "weeks",
      "summary": "Effective use of version control is an important and useful skill for any developer working on long-lived (or even medium-lived) projects, especially if more than one developer is involved. This course, *built with input from GitHub*, will introduce the basics of using version control by focusing on a particular version control system called Git and a collaboration platform called GitHub.",
      "expected_duration": 3
    },
    {
      "instructors": [
        {
          "bio": "Cay grew up in Northern Germany and attended the Christian-Albrechts-Universit\u00e4t in Kiel, a harbor town on the Baltic sea. He received a M.S. in computer science from Syracuse University, and a Ph.D. in mathematics from the University of Michigan in Ann Arbor. For four years, he was VP and CTO of an Internet startup that went from 3 people in a tiny office to a public company. He now teaches computer science at San Jose State University. In his copious spare time, he writes books and articles on programming languages and computer science education.\n\nPlease note that the Coaching, project feedback, and Verified Certificate are provided by and through Udacity. These services are specifically not provided by or affiliated with Cay Horstmann, San Jose State University, or any publisher of Dr. Horstmann's other textbooks.",
          "image": "https://lh5.ggpht.com/b-pMaSLEZOPel9P2s4AIoALSjk5NqFZXXltNtCVC7LYcptKvUkFnL8p7uEKqSmJVTkTYe5Ibq6xnnX_1dmc=s0#w=270&h=270",
          "name": "Cay Horstmann"
        }
      ],
      "subtitle": "Building Programs with Classes & Objects",
      "key": "cs046",
      "image": "https://lh4.ggpht.com/9ytiUdz0QYHwuMJFTXcNXZn4FctGW6Zszm7Aj5s7mXHHXsapIKYPL08vPWeghAjF2QmuhPiYCU2Q3kNeW7w=s0#w=1725&h=1060",
      "expected_learning": "Java is one of the most popular programming languages used by software developers today. It is the core language used in developing Android apps, and is also commonly used in back-end web development. If you\u2019re new to programming and want to enter either of these fields, this course is a great place to get started.\n\nEven if you don\u2019t have a career trajectory in mind, Java programming is a great option for first-time coders due to its popularity and ease of use. This course will provide you with a solid foundation in computer science and Object Oriented Programming concepts, as well as set you on the path for success as a software engineer.",
      "featured": false,
      "teaser_video": {"youtube_url": "https://www.youtube.com/watch?v=Wsp5Rrenoq4"},
      "title": "Intro to Java Programming",
      "required_knowledge": "No prior programming experience and knowledge is assumed or needed. Beginners welcome!",
      "syllabus": "### Lesson 1: Introduction to Computers, Programming Languages, Algorithms, and the Java Programming Environment\n\n### Lesson 2: Introduction to Classes and Objects\n\n### Lesson 3: Graphics\n\n### Lesson 4: Fundamental Data Types\n\n### Lesson 5: Decisions\n\n### Lesson 6: Iterations\n\n### Lesson 7: Arrays, ArrayLists and Simple Array Algorithms\n\n### Lesson 8: Methods (Parameter Passing, Instance vs. Static Methods)\n\n### Lesson 9: Inheritance",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/cs046?utm_medium=referral&utm_campaign=api",
      "project_name": "",
      "full_course_available": true,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh3.ggpht.com/MpxH41jmm6mn0XOaVq6daHTknCMoI_ccrmrbjtyvWJ3ukfUQsumG_Wn50WWm-WH4499D25Vg4BR96Oq-F-M=s0#w=130&h=60",
          "name": "San Jose State University"
        }
      ],
      "tracks": [
        "Software Engineering",
        "Android"
      ],
      "banner_image": "https://lh3.ggpht.com/AdAALPYhCsWuIvDl0ZY6zIW23B58wqCiZYuQZPVIAeR86ylThoImtG_DRuk2gvUfMkaRS3sfTzn21wnAmHM=s0#w=4680&h=968",
      "short_summary": "Learn essential computer science and object-oriented programming concepts in this introductory Java course.",
      "starter": false,
      "level": "beginner",
      "expected_duration_unit": "months",
      "summary": "In this introductory course, you'll learn and practice essential computer science concepts using the Java programming language. You'll learn about Object Oriented Programming, a technique that allows you to use code written by other programmers in your own programs. You'll put your new Java programming skills to the test by solving real-world problems faced by software engineers.",
      "expected_duration": 4
    },
    {
      "instructors": [
        {
          "bio": "After obtaining a bachelor\u2019s degree in computer science from the University of Texas at Austin, Kunal worked as a programmer for three years, but then decided to switch gears to education. He taught middle school science, worked with Google on a distance learning initiative, and eventually earned a master\u2019s degree in educational technology from Stanford University before joining Udacity.",
          "image": "https://lh5.ggpht.com/9ybNWBjttm9bN1UYNLc7VzAN2mDZ5OH8ufgw35GlEmdzhDlP1ys8NmIluwYIRq1rljJPxqlg0Fl8YWfWCw=s0#w=150&h=150",
          "name": "Kunal Chawla"
        }
      ],
      "subtitle": "Learn Object-Oriented Programming",
      "key": "ud036",
      "image": "https://lh5.ggpht.com/MNie9OxrtYLt5C_QMgezV9fYYR-07-U9z2AkqwKQhDIOguka15xhxrNafPFK6X538EUS6j0vJ193gEGLOpI=s0#w=1757&h=1080",
      "expected_learning": "You should take this course if you want to build awesome projects, while writing only a few lines of code. Here are some of them:\n\n- **Project Take a Break**: Do you know a friend who works too many hours? We will write a program that schedules breaks throughout the day -- reminding your friend to listen to music, get up and dance to their favorite song, or just walk away from the computer every once in awhile. <a href=\"http://youtu.be/C29aerpwkc8\" target=\"_blank\">http://youtu.be/C29aerpwkc8</a>\n- **Project Profanity Editor**: Imagine it\u2019s late at night and you get an email from your boss, requesting your help with something. You reply,  \u201cI can take a shot at it\u201d but accidentally end up including an awkward word (sh*t). Oops. We will write a python program that detects curse words, and saves clumsy email writers from embarrassing moments. <a href=\"http://youtu.be/Rvj2UI-wVXA\" target=\"_blank\">http://youtu.be/Rvj2UI-wVXA</a>\n- **Movie Website**: We will learn how to make an awesome webpage that lists your favorite movies and shows their trailers. \n<a href=\"https://www.youtube.com/watch?v=X0FoelOIZM0&t=1m24s\" target=\"_blank\">https://www.youtube.com/watch?v=X0FoelOIZM0&t=1m24s</a>\n<br />\n\nWhile building these projects we will learn about a programming technique that is used by software engineers on a daily basis; it is called Object-Oriented Programming. \n\nFinally, we will work together to get better at reading help documents and using other people\u2019s code almost like lego blocks to build our programs. By building these projects, you\u2019ll become more confident in your ability to code and transition from \u201cprogramming looks like magic\u201d to \u201coh, I can do that.\u201d",
      "featured": false,
      "teaser_video": {"youtube_url": "https://www.youtube.com/watch?v=bwq2W6XUvyg"},
      "title": "Programming Foundations with Python",
      "required_knowledge": "We require some familiarity with the following programming ideas in any computer language (C++, Java, Python, English etc.):\n\n- if statements\n- loops\n- functions\n\n\nDon\u2019t worry if you feel you need a refresher on any of these programming ideas. That\u2019s ok. We will provide information that will remind you how to use these ideas when building programs.",
      "syllabus": "### Lesson 0: Introduction (30 min)\nWe will begin with an introduction from the instructor. More specifically, we will talk about the projects we will build and the ideas we will learn in this course. Then we will conduct a short test to ensure you have all the prerequisites necessary for the course. Finally, we will work together to download Python on your computer.\n\n### Lesson 1: Using Functions (3.5 hours)\nWe will use functions (webbrowser.open and os.rename) from the Python Standard Library to build two projects in this lesson. After that we will present a scenario where using functions will not present a very elegant solution; this will illuminate the need for a new programming tool called Classes.\n\n### Lesson 2: Using Classes (5 hours)\nHere we will learn about important object-oriented programming concepts like classes and instances. We will build three cool projects while using classes. These include drawing shapes with Turtle, sending text messages with Twilio and checking curse words with a function called open.\n\nWe will leverage modules from within the Python Standard Library and also learn to download and use an external Python package (twilio).\n\n### Lesson 3: Making Classes (5 hours)\nIn this lesson we will learn to create our first class. While doing this we will build a website that plays trailers of your favorite movies. Here are some of the programming ideas we will learn in this lesson:\n\n- How to create a class\n- How to instantiate an object\n- How to access class attributes and methods \n- What is the self keyword\n- What are constructors (\\__init__)\n- What are DocStrings\n- How to create and access Class Variables\n- How does Inheritance work\n- How to override methods  \n\n### Final Project (6 hours)\nHere, you will use the skills learned in this course to identify a problem statement and idea for a project. You will then identify step-by step directions (in simple English) to design a solution for the previously identified problem. Finally, you will use this design and your newly learned object-oriented programming skills to write code to realize your project.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/ud036?utm_medium=referral&utm_campaign=api",
      "project_name": "Explore Python to Build Your Own Program",
      "full_course_available": true,
      "faq": "",
      "affiliates": [],
      "tracks": [
        "Web Development",
        "Software Engineering"
      ],
      "banner_image": "https://lh3.ggpht.com/pmJ91CZPKtNWq_0KpHhWnmQ1xr2_lmwvm-dfEqnz3hxBwV9qrfO4Q9MSNN19mkCb6CPm9cJPzQe7fd5T5pU=s0#w=4680&h=968",
      "short_summary": "Introductory programming class to learn Object-Oriented Programming, a must-have technique to reuse and share code easily. Learn by making projects that spread happiness!",
      "starter": false,
      "level": "beginner",
      "expected_duration_unit": "weeks",
      "summary": "In this introductory programming class, you\u2019ll learn Object-Oriented Programming, a must-have technique for software engineers that will allow you to reuse and share code easily. You\u2019ll learn by doing, and will build byte-sized (ha!) mini projects in each lesson to learn and practice programming concepts. \n\nWe\u2019ve heard that programming can be intimidating for newcomers, and we\u2019ve created this course to make sure that you have a great learning experience! You\u2019ll learn ***actively*** with our mini projects (see the awesome list below), which you\u2019ll be able to share proudly with your friends. You\u2019ll also learn important programming concepts one by one, with no surprises or leaps of logic along the way. \n\nYou\u2019ll pick up some great tools for your programming toolkit in this course! You will: \n\n- Start coding in the programming language Python;\n- Reuse and share code with Object-Oriented Programming;\n- Create and share amazing, life-hacking projects!   \n\n\nThis introductory course is for you if you want to be a software engineer, or if you want to collaborate with programmers. Mastering Object-Oriented Programming will propel your career in tech forward, and it\u2019s also a great way to learn how software engineers think about solving problems.\n\nThis course is also a part of our <a href=\"https://www.udacity.com/course/nd004\" target=\"_blank\">Full Stack Web Developer</a> Nanodegree.",
      "expected_duration": 6
    },
    {
      "instructors": [
        {
          "bio": "After obtaining a bachelor\u2019s degree in computer science from the University of Texas at Austin, Kunal worked as a programmer for three years, but then decided to switch gears to education. He taught middle school science, worked with Google on a distance learning initiative, and eventually earned a master\u2019s degree in educational technology from Stanford University before joining Udacity.",
          "image": "https://lh5.ggpht.com/9ybNWBjttm9bN1UYNLc7VzAN2mDZ5OH8ufgw35GlEmdzhDlP1ys8NmIluwYIRq1rljJPxqlg0Fl8YWfWCw=s0#w=150&h=150",
          "name": "Kunal Chawla"
        }
      ],
      "subtitle": "Make Your First iPhone App",
      "key": "ud585",
      "image": "https://lh6.ggpht.com/EMXyMl3EwCgLdaLkYkOFsEwnXI7feP6_Mt4rTSa9_nBZQ2lnRKuyVlhSeTWHJfYVi_uGyC2mkEhXymajTrMu=s0#w=1724&h=1060",
      "expected_learning": "This course will set you on your way to becoming an iOS Developer, where you\u2019ll establish a basic understanding of the iOS ecosystem. You\u2019ll also have working knowledge of Swift, Apple\u2019s custom programming language created exclusively for the mobile developer.",
      "featured": true,
      "teaser_video": {"youtube_url": "https://www.youtube.com/watch?v=bOxlCjM5gw8"},
      "title": "Intro to iOS App Development with Swift",
      "required_knowledge": "This course assumes prior programming experience. Specifically, you should have a strong understanding of programming concepts like variables, if statements, loops, functions, and classes. Lesson 1 of [Intro to Computer Science](https://www.udacity.com/course/cs101) and [Programming Foundations with Python](https://www.udacity.com/course/ud036) are good courses to take if you are completely new to programming.\n\nYou will also need access to a Mac computer running OS X 10.9 or later.\n\nWe have designed this course such that you will not need a physical device (i.e. an iPhone or an iPad) to build your app. We will be using a simulator on your mac that will imitate the features of a phone on your computer. Towards the end of the course we will provide instructions on how to download your app on an iPhone (in case you do have access to a physical device.)",
      "syllabus": "###Lesson 1: Introduction (1 hour)\nIn this lesson, you'll get up and running with Xcode, the environment used to program iOS apps. You'll also learn to start reading Swift code by identifying important syntax.\n###Lesson 2: Making v1 of Our App (3 hours)\nIn this lesson, you'll create a simplified version of the final app by adding buttons, images, and text to a precise location on the phone. You'll also learn about MVC (Model-View-Controller) architecture and how it is used in app development. \n\nWe will introduce you to the following iOS classes in this lesson:\n\n - UIButton\n - UILabel\n - NSLayoutConstraint\n - UIView\n - UIViewController\n\nWe will also introduce you to the following framework:\n\n - UIKit\n\n###Lesson 3a: Navigating Between Two Screens in our App (2 hours)\nIn this lesson, you'll learn how to smoothly transition between two screens in our app.  Throughout this lesson, we will discuss something called the View Lifecycle - this includes a conversation around how to load different objects in our app and how to handle low memory-related events. \n\nWe will introduce you to the following iOS classes in this lesson:\n\n - UINavigationController\n \n###Lesson 3b: Playing Audio (4 hours)\nIn this lesson, we'll play a short audio clip from a famous movie, and will tinker with this movie quote to make it play super fast and really slowly. Here, you'll also begin to establish credibility as a professional developer by authoring a public blog post on how to accomplish a specific task in Swift.\n\nWe will introduce you to the following iOS classes in this lesson:\n\n - AVAudioPlayer\n\nWe will also introduce you to the following framework: \n\n - AVFoundation\n\n###Lesson 4a: Recording Audio (2 hours)\nIn this lesson, you'll put finishing touches on the app by learning to record your voice. Here, we will explore a powerful iOS idea called Delegates, which makes it really easy to create apps. \n\nWe will introduce you to the following iOS classes in this lesson:\n\n - AVAudioRecorder\n\n###Lesson 4b: Adding Chipmunk and Darth Vader Effects (3 hours)\n\nIn this lesson, we will learn to alter the pitch of the audio we recorded in lesson 4a. This change will make your voice sound like a Chipmunk or Darth Vader.\nAt the end of this lesson you'll have the know-how to install the app on your phone.\n\nWe will introduce you to the following iOS classes in this lesson:\n\n - AVAudioEngine\n - AVAudioPlayerNode\n - AVAudioUnitTimePitch\n\n\n###Final App Submission (1 hour)\nIn this final lesson, you will ensure that your app works according to a rubric we have designed, and will also have an opportunity to add new features to your app. We will also share with you a Code Review document that contains suggestions from an external reviewer on how to improve your code. We will request that you implement those suggestions to enhance your code and make it ready for the app store. Finally, to complete the course, you will submit your app to a Udacity coach for a thorough evaluation of your work.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/ud585?utm_medium=referral&utm_campaign=api",
      "project_name": "Make your first iPhone app",
      "full_course_available": true,
      "faq": "Before course development started, we asked you what questions you had about Apple's Swift language. Here are the answers to your most burning questions:\n\n### Why is the language called Swift?\nThe language was designed with two goals in mind: to be (1) swift to code, and (2) swift to execute. In terms of speed, Swift compiles Swift code to optimized native code depending on target device. In terms of learning curve, the Swift syntax was designed to be clean and easy to read. \n\n### Should I learn Swift or Objective-C?\nSwift! Apple has made it clear that Swift is the cornerstone of the future of iOS development. Plus, you can still utilize Objective-C files alongside Swift code, so you won\u2019t miss out on any pre-existing libraries and code.\n\n### How easy is Swift to learn?\nSwift was designed to be friendly for new programmers, and as a result it is incredibly easy to learn. <a href=\"https://developer.apple.com/library/ios/documentation/Swift/Conceptual/Swift_Programming_Language/\">According to Apple</a>, Swift is the \u201cfirst industrial-quality systems programming language that is as expressive and enjoyable as a scripting language.\u201d Some have even <a href=\"http://www.zdnet.com/why-apples-swift-might-be-the-new-basic-and-thats-no-small-thing-7000030186/\" target=\"_blank\">called Swift the new BASIC</a>.\n\n### Is it fast?\n<a href=\"http://www.apple.com/swift/\" target=\"_blank\">Apple boasts</a> that Swift is up to 2.6x faster than Objective-C and 8.4x faster than Python 2.7. And why should you care about how quickly code executes? Well, faster running code makes for more efficient and smoother running apps, which makes for a better experience for your user.\n\n### Why did Apple decide to create a new language?\nObjective-C has been Apple\u2019s primary programming language for app writing since OS X was created. In that time, programming languages and practices changed drastically, especially in mobile development. Rather than adopt a new, already existing language, Apple created a new language tailored specifically for development on their own hardware.\n\n### Can I create an app in Swift and submit it to the App Store?\nAbsolutely! In fact, you were able to as soon as Xcode 6 and iOS 8 launched.\n\n### Why was there a need to go from Objective-C to Swift?\nAs mentioned in the answer to question five, after 20 years, Objective-C was starting to show it\u2019s age. Plus, Objective-C is a difficult language for new programmers to learn, so the barrier to entry is pretty high. Swift provides a modern language tailor-made for Apple hardware.\n\n### How Stable is Swift?\nAs with any new language, there is a potential for bugs. While you may encounter some trouble with the Swift language, the majority of issues were addressed before the 1.0 release.\n\nThe thing to most look out for is changes to the Swift language during each update. For example, when updating from 1.0 to 1.1, Apple introduced a new feature: <a href=\"https://developer.apple.com/swift/blog/?id=17\" target=\"_blank\">failable initializers</a>. You can expect that the language will change as more people use it and give feedback to Apple. Stay apprised of changes using the <a href=\"https://developer.apple.com/library/ios/documentation/Swift/Conceptual/Swift_Programming_Language/RevisionHistory.html#//apple_ref/doc/uid/TP40014097-CH40-XID_1655\" target=\"_blank\">revision history for *The Swift Programming Language*</a>.\n\n### What other languages is it similar to?\nSwift is probably most similar in look and feel to Ruby or Python. Though you\u2019ll also probably recognize some C syntax. \n\n### Is it compatible with iOS 6 & 7?\nSwift can be run on iOS 7, but not iOS 6.",
      "affiliates": [],
      "tracks": ["iOS"],
      "banner_image": "https://lh5.ggpht.com/6dnxW1q6Hip7w1eSqZgKYO2nbGAC9EZjDOHIoKnUu15EgFwTwVl6RLJpU24unfD3e3by9PsZcvWVRS1qrddb=s0#w=4680&h=968",
      "short_summary": "Take the first step in becoming an iOS Developer by learning about Swift and writing your first app.",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "months",
      "summary": "In this course we will build an iPhone app that records a conversation between you and a friend, and then makes your voices sound like a Chipmunk or Darth Vader.\n\nThis course will introduce you to iOS app development in Swift, a new programming language from Apple, and serves as your launching point into the [iOS Developer Nanodegree](https://www.udacity.com/course/nd003).",
      "expected_duration": 1
    },
    {
      "instructors": [
        {
          "bio": "Reto Meier has been part of the Android Developer Relations at Google since 2009, and leads Google\u2019s Scalable Developer Advocacy team. He\u2019s passionate about helping developers build the best possible apps on Android, and is the author of the Professional Android Application Development series of Android books from Wrox.",
          "image": "https://lh4.ggpht.com/B81wkmIGXpxkos1aNGmps6MAlIHWPjPZrU1_FvmY7NqBqWUtdZW1_M3be45mncw1Eh8-sXKfooxxoLC8g88=s0#w=816&h=817",
          "name": "Reto Meier"
        },
        {
          "bio": "Katherine Kuan is a Developer Advocate at Google. Before that, she was a software engineer on the Android Apps team for Google Keep, Google Play, and the People app (formerly Contacts). She is enthusiastic about helping others build apps to improve their communities.",
          "image": "https://lh3.ggpht.com/Zzx54B0TsSm8vdFpeLQ2EG5rSbI2y1SuEUiP70deynPFnnIdYInu2n-R934qB2Vg_Nf7f0snWDgqaWcXXgU=s0#w=99&h=99",
          "name": "Katherine Kuan"
        },
        {
          "bio": "Dan Galpin is a Developer Advocate for Android, where his focus has been on Android performance tuning, developer training, and games. He has spent over 10 years working in the mobile space, developing at almost every layer of the phone stack. There are videos that demonstrate that he has performed in musical theater productions, but he would deny it.",
          "image": "https://lh4.ggpht.com/Pzkx8eAr2YiUFTjkRZR-j2ILL09wtq_kcTYBH0eSk1a31W2Z8BnFrue2HiK3_ofdT5rfNnuwH_46cL-lBw=s0#w=127&h=127",
          "name": "Dan Galpin"
        },
        {
          "bio": "Alexander Lucas has been part of Android Developer Relations at Google since 2010. Previously, he did mobile game development with J2ME, and had a brief stint as a web developer with ColdFusion. Alex obsesses over how to write sample code so good, it teaches the developer reading it. His life goal is to save everyone in the world 5 minutes.",
          "image": "https://lh3.ggpht.com/9ipR3nbwEKhpRvVEQJfNURQWQDABD8VquNUAmufL7m07MKYKCBr2wdBc99Uo9sSaugb6-03arSIqt7ClfJk=s0#w=161&h=161",
          "name": "Alexander Lucas"
        }
      ],
      "subtitle": "Android Fundamentals",
      "key": "ud853",
      "image": "https://lh6.ggpht.com/57QPWoDnN4dSulg4tqC_pFHcN5pmUIzyrXyu3TiirP1JRCQ36fzz6IgEPl2HdMZ3GIrc80rRzAkRiPUyOXM=s0#w=1724&h=1060",
      "expected_learning": "With over 1 billion Android devices already activated, Android represents an incredible opportunity for developers.\n\nAs Android continues to grow beyond smartphones, it will become the brains behind invisible, ubiquitous cloud-connected computing. The skills you learn in this course will help you build awesome apps for smartphones and tablets today, and propel you towards exciting opportunities in Android's future.\n\nBy the end of this course, you\u2019ll build a cloud-connected Android app, and understand the tools, principles, and patterns that underlie all Android development. You\u2019ll understand the challenges associated with developing for the mobile environment (and how to overcome them), learn how to build a great user experience for Android devices, and apply this knowledge to your own projects.",
      "featured": true,
      "teaser_video": {"youtube_url": "https://www.youtube.com/watch?v=LfVBFFoy9Y0"},
      "title": "Developing Android Apps",
      "required_knowledge": "**This course is intended for students with at least 3 years of programming experience in Java or another object-oriented programming language** (for example: C++, Objective C or Python). Udacity's <a href=\"http://www.udacity.com/course/cs046\" target=\"_blank\">Intro to Java</a> is a helpful background if you're looking to refresh your Java skills.\n\nYou will be expected to download <a href=\"http://developer.android.com/sdk/installing/studio.html\" target=\"_blank\">Android Studio</a> in order to follow along with the instructors throughout the course. You also should be comfortable working with code on <a href=\"http://www.github.com\" target=\"_blank\">Github</a>. \n\nAccess to an Android device is helpful -- but not required -- to complete the final project.\n\nFinally, while not a formal prerequisite, <a href=\"https://www.udacity.com/course/ud849\" target=\"_blank\">UX Design for Mobile</a> (also taught in collaboration with Google) is a good companion course to this one.",
      "syllabus": "### Lesson 1: Create Project Sunshine with a Simple UI (5-8 hrs) \nStarting by installing Android Studio, you\u2019ll create your first project with a simple list-based user interface and built and deploy it to virtual and actual devices. You\u2019ll also discover what makes mobile - and Android in particular - a unique environment for app development.\n\n* Android Studio, Gradle, and debugging tools\n* User Interface and Layout managers\n* ListViews and Adapters\n\n### Lesson 2: Connect Sunshine to the Cloud (8-10 hrs) \nReplace the mock data with real weather data by connecting Sunshine up to an Internet back-end courtesy of the Open Weather Map API. You\u2019ll learn how to add permissions to your app, initiate network I/O, and how to move time consuming tasks like network data transfers  off the main UI thread.\n\n* Threading and ASyncTask\n* HTTP requests on web APIs\n* Android Permission System\n\n### Lesson 3: Create New Activities and Navigate Apps with Intents (8-10 hrs) \nGive your app structure and create more complex Activities. You\u2019ll learn about Android\u2019s Intent framework, and how to use Intents to navigate between Activities, both within your app and as a way to add 3rd party functionality.\n\n* App navigation with Explicit Intents\n* Implicit Intents to incorporate 3rd-party apps \n* Share Intent and the Android sharing framework\n* Broadcast Intents and Broadcast Receivers\n\n### Lessons 4: Use Content Providers and Loaders to Persist and Recover Data (15-20 hrs) \nLearn how the Android framework manages the activity lifecycle, and how it differs from what you might expect, and dive head-first into the world of persistent storage. Learn how to create databases, use Android\u2019s Content Providers to provide an abstraction layer between your data and your UI implementation, and use Loaders to efficiently load stored data.\n\n* Activity lifecycle and background activity termination\n* SQLite databases and JUnit tests\n* Creating and using a Content Provider as an abstraction layer\n* Using Loaders to asynchronously load data\n* Creating Adapters to bind UI components to Content Providers\n\n### Lesson 5: Implement Rich and Responsive Layouts (8-10 hrs) \nCreate rich, responsive user interfaces that work across a variety of different hardware types and screen sizes. You\u2019ll learn more details on using the Android Layout managers, Fragments, UI widgets, and Android design principles to add visual polish to your user interfaces, and how to create your own controls from scratch.\n\n* Fundamental Android design principles\n* Supporting localization and variable screen sizes \n* Optimizing tablet UIs using Fragments\n* Accessibility Features\n* Custom views\n\n### Lesson 6: Use Services and Notifications to Run in the Background (5-8 hrs) \nDeliver a great user experience, even when your app isn\u2019t visible. Learn how the Android framework manages background apps; and discover how to use Services and Notifications to make your app to be active when it\u2019s not in the foreground. You\u2019ll learn techniques for efficient data transfers using SyncAdapters and Google Cloud Messaging, so your app can stay up-to-date without draining the battery.\n\n* Background services and alarms to schedule background tasks\n* Efficient background data transfers with SyncAdapters \n* Rich notifications to interact with users\n\n### Final Project (10-20 hours)\nBuild your own Android app incorporating the skills you've learned in this course.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/ud853?utm_medium=referral&utm_campaign=api",
      "project_name": "Build Your Own Android App",
      "full_course_available": true,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh3.ggpht.com/Wx1OdscqyJkXh3vYLx6ZTxngP542hK_P2Mew1MvItbCs-GF4a0lyBfFSOfebDt9CX4Fv-omaDshdYX_obLI9=s0#w=130&h=60",
          "name": "Google"
        }
      ],
      "tracks": ["Android"],
      "banner_image": "https://lh3.ggpht.com/GSQMyYy0eEe9jJr1gJCrkPCNCrUKNbOQwxvn1ksFDRyVgfbPYKO0QcE49JBgfRanGeQ0arpV0rIwaJr6CV8=s0#w=4680&h=968",
      "short_summary": "Build a cloud-connected Android app, and learn the tools, principles, and best practices of mobile and Android development that you'll apply to your own projects.",
      "starter": false,
      "level": "advanced",
      "expected_duration_unit": "weeks",
      "summary": "Android Fundamentals blends theory and practice to help you build great apps the right way. In this course, you'll work with instructors, step-by-step, to build an Android app, and learn best practices of mobile development in general and Android development in particular.\n\n####[Download Udacity's Android app](https://play.google.com/store/apps/details?id=com.udacity.android) to keep learning wherever you go!",
      "expected_duration": 10
    },
    {
      "instructors": [
        {
          "bio": "Karl is a Course Developer at Udacity. Before joining Udacity, Karl was a Site Reliability Engineer (SRE) at Google for eight years, building automation and monitoring to keep the world's busiest web services online. Outside of work, his interests include gardening, cooking, board games, and messing around with new programming languages. No whiteboard is safe from his doodles.",
          "image": "https://lh4.ggpht.com/lPP6ZKw18QV_pfdCh9722AgWEXWZ1-ONsQi-sxmceK18IruOWPEc8u0CrvYNE6KFa4w6jJzwmu8pYmo4Sw=s0#w=501&h=501",
          "name": "Karl Krueger"
        }
      ],
      "subtitle": "SQL, DB-API, and More!",
      "key": "ud197",
      "image": "https://lh4.ggpht.com/H9zRncxCIalNMrZLqYqGNikKXGPe7U_f6tS-v1VeHo12Zt8QqpTDqxI1FMsJSLYXWNpz1BhZXTgeQZRw_3s=s0#w=1758&h=1080",
      "expected_learning": "If you look under the hood of a lot of major web sites \u2014 from Wikipedia to Reddit \u2014 you'll find a relational database somewhere.\n\nDatabase systems such as PostgreSQL and MySQL have been part of the web developer's toolkit for many years, and remain some of the most powerful tools available for storing and manipulating structured data.\n\nIf you're planning to continue on in full-stack development, knowing about databases is essential background. Even though many toolkits hide the details of the database from your application code, being able to interact with the database will serve you well in designing, debugging, and maintaining your applications.",
      "featured": false,
      "teaser_video": {"youtube_url": ""},
      "title": "Intro to Relational Databases",
      "required_knowledge": "**You can read and write basic code in Python.** This course uses programming exercises in Python. If you haven't worked with Python before, check out our course <a href=\"https://www.udacity.com/course/ud036\" target=\"_blank\">Programming Foundations with Python</a>.\n\nIf you can understand this code (maybe with the help of the <a href=\"https://docs.python.org/2/library/random.html#random.choice\" target=\"_blank\">**random** module documentation</a>), you know enough Python for this course:\n\n<pre>\nimport random\n\ndef ChooseTwice(items):\n    a = random.choice(items)\n    b = random.choice(items)\n    return a, b\n\nnames = [\"Alice\", \"Bob\", \"Charlie\", \"Debra\"]\n(one, two) = ChooseTwice(names)\nif one == two:\n    print \"%s is happy!\" % one\nelse:\n    print \"%s likes %s!\" % (one, two)\n</pre>\n\n**You can use a command-line interface (terminal).** Some of the exercises in this course involve using a Unix-style command-line interface to enter commands, run Python programs, and navigate directories.\n\nIf you have taken our course on <a href=\"/course/ud775\" target=\"_blank\">Git and Github</a>, the level of command-line use in this course is similar.\n\n**You don't need to be a Web programmer.** This course does include a small Web application and some HTML and JavaScript in examples, but you will not need to make changes in these languages.\n\n**You don't need any previous database experience.** This course is an entry-level introduction to relational databases.\n\n**You need a programming text editor** (such as <a href=\"http://www.sublimetext.com/\" target=\"_blank\">Sublime Text</a>) installed on your computer. You should be able to use it to open and edit files of Python code.",
      "syllabus": "### Lesson 1: Data and Tables\nIn this lesson, you'll learn about how relational databases let you structure data into tables. You'll learn about the importance of unique keys and relationships between tables.\n\n### Lesson 2: <s>Elephants</s> Elements of SQL\nIn this lesson, you'll begin learning SQL, the Structured Query Language used by most relational databases. You'll learn about the **select** and **insert** statements, the basic operations for getting data out of a database and putting data into a database. You'll learn about the operators and syntax available to get the database to scan and join tables for you.\n\n### Lesson 3: Python DB-API\nIn this lesson, you'll learn how to access a relational database from Python code. You'll use a virtual machine (VM) running on your own computer to run a Python web application, and adapt that application to use a database backend. Then you'll learn about some of the most common security pitfalls of database-backed applications, including the famous <a href=\"http://xkcd.com/327/\" target=\"_blank\">Bobby Tables</a>. This lesson also covers the SQL **update** and **delete** statements.\n\n### Lesson 4: Deeper Into SQL\nIn this lesson, you'll learn how to design and create new databases. You'll learn about normalized design, which makes it easier to write effective code using a database. You'll also learn how to use the SQL **join** operators to rapidly connect data from different tables.\n\n### Lesson 5: Final Project\nIn this project, you'll use your Python and SQL knowledge to build a database-backed Python module to run a game tournament. You'll design the database schema and write code to implement an API for the project.",
      "new_release": true,
      "homepage": "https://www.udacity.com/course/ud197?utm_medium=referral&utm_campaign=api",
      "project_name": "",
      "full_course_available": false,
      "faq": "",
      "affiliates": [],
      "tracks": ["Web Development"],
      "banner_image": "https://lh3.ggpht.com/_IU6K-6RwzuS59MFXIFRpiPFUPED8t-bZQbB9fY9BqXEeVMf1giijZISSMbXMossadcebHkJViOCoGaAHw=s0#w=4680&h=968",
      "short_summary": "Relational databases are a powerful tool used throughout the industry. Learn the basics of SQL and how to connect your Python code to a relational database.",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "weeks",
      "summary": "This course is a quick, fun introduction to using a relational database from your code, using examples in Python. You'll learn the basics of SQL (the Structured Query Language) and database design, as well as the Python API for connecting Python code to a database. You'll also learn a bit about protecting your database-backed web apps from common security problems.\n\nAfter taking this course, you'll be able to write code using a database as a backend to store application data reliably and safely.",
      "expected_duration": 4
    },
    {
      "instructors": [
        {
          "bio": "Lorenzo has had a passion for education since his first experience teaching computer science at a summer camp during college.  He has lived in Boston, Boise, Bethlehem, Jerusalem and Mexico City before making California home. Lorenzo enjoys traveling, cooking, and taking on do-it-yourself projects.  He holds a degree in Mathematics with Computer Science from the Massachusetts Institute of Technology with a concentration in Middle Eastern Studies.",
          "image": "https://lh5.ggpht.com/v8pv_UaM7EjTmnMaH6IdYkgKtmeAjokPxlX8A5QxzHbUFZExS79sqMEaUH_R-7yGAo_f9LJFXu78H3sM_g=s0#w=2106&h=2107",
          "name": "Lorenzo Brown"
        }
      ],
      "subtitle": "Build a data-driven web app with Python",
      "key": "ud088",
      "image": "https://lh3.ggpht.com/GKNi4exuLn_ER_qN9SIPx4bFpjBhVBGeSP1aTul1hh_Ge_9oRREpLimJyphdkJqc8sgwRo-GQ0vgSO3KcnY=s0#w=1745&h=1073",
      "expected_learning": "Interacting with a persistent datastore is what transforms static web pages into powerful and effective web applications. Giving users the ability to create, read, update and delete data is the backbone of the most popular services on the Internet today. But, you must do so safely and securely - the smallest mistake could bring your application down or leak your user\u2019s data.\n\nIn this course, you\u2019ll discover how all of the major components of web applications work and best practices in developing secure, data-driven web applications.",
      "featured": false,
      "teaser_video": {"youtube_url": ""},
      "title": "Full Stack Foundations",
      "required_knowledge": "You should be comfortable with Python, including Object-Oriented Programming. If you\u2019d like to brush up on your Python, try the first three lessons of our <a href=\"/course/cs101\" target=\"_blank\">Intro to Computer Science</a> course. For Object-Oriented Programming in Python, see <a href=\"/course/ud036\" target=\"_blank\">Programming Foundations with Python</a>.\n\nYou should also have a firm understanding of SQL and working with a relational database, particularly PostgreSQL. Our <a href=\"/course/ud197\" target=\"_blank\">Intro to Relational Databases</a> course can get you started if you feel you\u2019re not yet prepared.\n\nFinally, you should be able to read and write HTML and CSS without any guidance. If you need a refresher on HTML and CSS, start with our <a href=\"/course/ud304\" target=\"_blank\">Intro to HTML and CSS</a> course.\n\nTo complete the final project for this course, it is ***critical*** you meet these prerequisites as you are given no assets to begin with and will truly build a complete web application from scratch.",
      "syllabus": "<h3>Lesson 1 - Working with the CRUD</h3> \nIn the first lesson, you will learn about CRUD; Create, Read, Update, and Delete. You will learn why this acronym is important in web development and implement CRUD operations on a database. You will also learn to use an ORM (Object-Relational Mapping) as an alternative to SQL.\n<h3>Lesson 2 - Making a Web Server</h3>\n<p>In the second lesson, you will build a web server from scratch using Python and some of the pre-installed libraries it includes. You will learn what GET and POST requests are and how we use them to retrieve and modify information on a web site. We will then use the concepts learned in Lesson 1 to add CRUD functionality to our website.\n<h3>Lesson 3 - Developing with Frameworks</h3>\nIn the third lesson, we will discuss web frameworks like Django and Ruby on Rails. You will see how web frameworks simplify the development process and allow us to create web applications faster. We will use the Flask web framework to develop our own web application. We will also discuss API's (Application Programming Interfaces) and add JSON (JavaScript Object Notation) endpoints to our application to allow data to be sent in a format alternative to HTML. \n<h3>Lesson 4 - Iterative Development</h3>\nIn the last lesson, you will build an entire web application on your own. You will learn about the iterative development process and how developing iteratively allows you to have a working prototype throughout all stages of the development process.",
      "new_release": true,
      "homepage": "https://www.udacity.com/course/ud088?utm_medium=referral&utm_campaign=api",
      "project_name": "",
      "full_course_available": false,
      "faq": "",
      "affiliates": [],
      "tracks": ["Web Development"],
      "banner_image": "https://lh3.ggpht.com/l08Qgk6U2BQd-YaFrVnKFguPXoDm0Ior3FTowmcqMNuvDCubLyQ7jhwRDvqew2zMX0zg_Z0rlCLDK-wBA3k=s0#w=4680&h=968",
      "short_summary": "Learn the fundamentals of back-end web development by creating your own web application from the ground up using the iterative development process.",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "weeks",
      "summary": "In this course you will learn the fundamentals of back-end web development! You will create your own web application that queries a database for items on restaurant menus and then dynamically generates complete menus in the form of web pages and API endpoints.\n\nYou\u2019ll start by learning how to interact with a database from a web application using an Object-Relational Mapping (ORM) layer. From there, you\u2019ll learn how GET and POST requests translate to CRUD operations. You\u2019ll then explore the Flask framework and the various ways in which it can speed up the development of your applications. Finally, you\u2019ll develop your very own web application from the ground up using the iterative development process.",
      "expected_duration": 3
    },
    {
      "instructors": [
        {
          "bio": "Pete is a developer advocate at Google and works to make the lives of web developers easier.  Working on projects like <a href=\"https://developers.google.com/web/fundamentals/\" target=\"_blank\">Web Fundamentals</a> and Google web developer videos, he's focused on ensuring that developers have the tools and skills they need to build great responsive sites and apps with awesome user experiences.",
          "image": "https://lh4.ggpht.com/tZa18z5a2qkt1RvpKTfd6ljbEgaMF6339Bfl8xTlt6ccQbyCuPVc6JBYMnUQEIn28r37WctRp7U_jQALRIg=s0#w=595&h=595",
          "name": "Pete LePage"
        },
        {
          "bio": "A passionate educator and programmer, Cameron lives and breathes web development as he creates programming courses at Udacity. Before coming here, Cameron was a combination Director of Content and web developer at Seattle startup LearnBIG. He taught four years of high school physics and chemistry in Nashville, TN, during which time he pioneered teaching physics with the video game <em>Portal 2</em>. Cameron graduated with a degree in physics and astronomy from Vanderbilt University and earned his master's in teaching from Belmont University.",
          "image": "https://lh6.ggpht.com/k08baq8ESoDPzyVh0dfvmEqYMawGbd-gJU0_TA0M1EDptu1PNgq1Uss7eXVV8bvLzJhfZArvql-bBJYeB_zb=s0#w=200&h=200",
          "name": "Cameron Pittman"
        }
      ],
      "subtitle": "Great Experiences on Any Device",
      "key": "ud893",
      "image": "https://lh6.ggpht.com/nKVxhzkzJcyDvw2QxIO1nH55uk5Y6e34XNGnnRUWS3No2wRZ8fyBfYzfILhJZslqnbvt6yHpbNlnor6S4vA=s0#w=2080&h=1279",
      "expected_learning": "The way people browse the web is changing quickly - fewer and fewer users access the web at a desk in front of a large monitor with a keyboard and mouse. The web is increasingly being enjoyed on phones, tablets, wearables, TVs and everything in between. By designing a site to be responsive, it will look good and work well no matter what device your users have in front of them.\n\n\nThroughout this course, you'll work through a project creating a home town website that works well on phones, tablets and desktop displays.",
      "featured": false,
      "teaser_video": {"youtube_url": "https://www.youtube.com/watch?v=7DJLa4owtIU"},
      "title": "Responsive Web Design Fundamentals",
      "required_knowledge": "You should be comfortable reading and writing HTML and CSS. You should also be able to inspect and modify websites using browser developer tools (we use <a href=\"http://www.google.com/chrome/\" target=\"_blank\">Google Chrome</a>, but you should be able to accomplish all the tasks in this course with any browser's developer tools).\n\n\nIf you are unfamiliar with HTML and CSS, or if feel like you need to brush up on them, start with our <a href=\"https://www.udacity.com/ud304\" target=\"_blank\">Intro to HTML and CSS</a>.\n\n\nYou will not need to write JavaScript for this course.",
      "syllabus": "### Overview\nThis course consists of 5 lessons. The first one is an overview of responsive design and introduces the way you\u2019ll need to shift your thinking as you go from desktop first design, to responsive design.  Lessons 2, 3, 4 and 5 will cover the important theoretical concepts of responsive design, and include plenty of hands-on exercises implementing what you\u2019ve learned.  \n\n### Lesson 1 - Why Responsive?\nWhat is responsive web design and why is it important? What kinds of devices should we be targeting with our design? How can we best leverage the different capabilities of each device to provide great experiences to users? You\u2019ll also make sure that your development environment is ready to go. \n\n<strong>Topics covered:</strong>\n\n* What is responsive design?\n* Why does responsive design work for any device?\n* Remote debugging and emulation in the browser\n\n### Lesson 2 - Starting Small\nThe best way to get started is to start small and build up. In this lesson, we\u2019ll cover the key components that make a site great on a small screen, including setting the viewport, adding content and sizing the content to the viewport.  You\u2019ll start the home town site project, by making sure that it looks good on a small screen.  \n\n<strong>Topics covered:</strong>\n\n* Why start small and build up?\n* What is the viewport?\n* Sizing content the content to the viewport\n  * avoiding static sized items\n* Touch targets, and why they should be large\n\n### Lesson 3 - Building Up\nOnce you\u2019ve got a page optimized for small screens, it\u2019s time to start thinking about how they\u2019ll look on larger screens.  Learn how to use CSS media queries to add breakpoints that change the layout depending on the screen size or other device characteristics.\n\n<strong>Topics covered:</strong>\n\n* CSS media queries\n* What is a breakpoint, and how to choose one\n* Using the CSS flexbox to modify layout\n\n### Lesson 4 - Common Responsive Patterns\nNow that you\u2019ve got the basics of responsive design down, you\u2019ll learn about and practice some of the common layout design patterns used across sites. You'll also iterate on the home town site project, creating breakpoints for tablet and desktop layouts using the patterns from this lesson.\n\n<strong>Topics covered:</strong>\n\n* Mostly fluid pattern\n* Column drop pattern\n* Layout shifter pattern\n* Off canvas pattern\n\n### Lesson 5 - Optimizations\nLearn strategies for minor breakpoints used to adjust the margins or padding on an element, or increase the font size to make it feel more natural in the layout. You\u2019ll also learn about strategies for dealing with tables and optimal text readability. At the end of the lesson, you'll iterate for the last time on the home town site, adding minor breakpoints to really make the experience stand out.\n\n<strong>Topics covered:</strong>\n\n* Minor break points\n* Optimizing text layout\n  * font size\n  * optimal line length\n* Responsive tables, and strategies for dealing with them",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/ud893?utm_medium=referral&utm_campaign=api",
      "project_name": "Hometown Site",
      "full_course_available": true,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh3.ggpht.com/Wx1OdscqyJkXh3vYLx6ZTxngP542hK_P2Mew1MvItbCs-GF4a0lyBfFSOfebDt9CX4Fv-omaDshdYX_obLI9=s0#w=130&h=60",
          "name": "Google"
        }
      ],
      "tracks": ["Web Development"],
      "banner_image": "https://lh5.ggpht.com/J8GsTGwitRUPaZjR8bKP2H5Q3vGt3QOrlMTqeHwAXpYoLZFZuA7IedgQjV84wlYoWqX42M4Xb3SH3eyd_Ec=s0#w=4680&h=968",
      "short_summary": "Learn and practice strategies for developing websites that look great on every device! Made with Google's Pete LePage.",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "weeks",
      "summary": "In this course you'll learn the fundamentals of responsive web design with Google's Pete LePage! You'll create your own responsive web page that works well on any device - phone, tablet, desktop or anything in between.\n\nYou\u2019ll start by exploring what makes a site responsive and how some common responsive design patterns work across different devices.  From there, you\u2019ll learn how to create your own responsive layout using the viewport tag and CSS media queries.  As you proceed, you\u2019ll experiment with major and minor breakpoints, and optimizing text for reading.",
      "expected_duration": 2
    },
    {
      "instructors": [
        {
          "bio": "Sam Dutton is a Developer Advocate for Google. He also publishes the monthly media tech newsletter <a href=\"medianews.me\" target=\"_blank\">medianews.me</a> and maintains <a href=\"simpl.info\" target=\"_blank\">simpl.info</a>, which provides the simplest possible examples of HTML, CSS and JavaScript. Sam grew up in South Australia, went to university in Sydney, and has lived since 1986 in London. He has designed and coded lots of websites, including previous releases of <a href=\"itn.co.uk\" target=\"_blank\">itn.co.uk</a> and <a href=\"deccaclassics.com\" target=\"_blank\">deccaclassics.com</a>.",
          "image": "https://lh6.ggpht.com/obXmjakftWXagA-D9mMd9E4kvSfyh6SaZJQFEy5OUBMHUkLHuu7Jj19OYoQPSYPS6tVkRTs1w1gJtTvBmgA=s0#w=1124&h=1124",
          "name": "Sam Dutton"
        },
        {
          "bio": "A passionate educator and programmer, Cameron lives and breathes web development as he creates programming courses at Udacity. Before coming here, Cameron was a combination Director of Content and web developer at Seattle startup LearnBIG. He taught four years of high school physics and chemistry in Nashville, TN, during which time he pioneered teaching physics with the video game <em>Portal 2</em>. Cameron graduated with a degree in physics and astronomy from Vanderbilt University and earned his master's in teaching from Belmont University.",
          "image": "https://lh6.ggpht.com/k08baq8ESoDPzyVh0dfvmEqYMawGbd-gJU0_TA0M1EDptu1PNgq1Uss7eXVV8bvLzJhfZArvql-bBJYeB_zb=s0#w=200&h=200",
          "name": "Cameron Pittman"
        }
      ],
      "subtitle": "Fewer Bytes, Faster Loads",
      "key": "ud882",
      "image": "https://lh3.ggpht.com/4xS55_emboSNMmbnG2kksWpNe73pt1SjgWYJIXvsr2JGhzpVJw3lJZB1JVeQO7rxYKz2I7HsEimYTZymL3pN=s0#w=2560&h=1440",
      "expected_learning": "Quick load times and responsive content leads to higher conversions. There's much more to images on the web than `<img>`. Attributes like `srcset`, markup techniques using CSS, fonts, and inline images, and the brand new `<picture>` element are now available to help you create the best possible experience for your users. This course will help you ensure that you deliver the highest quality images with the fewest possible bytes.",
      "featured": false,
      "teaser_video": {"youtube_url": "https://www.youtube.com/watch?v=1NiVmiMNp-U"},
      "title": "Responsive Images",
      "required_knowledge": "You should be comfortable working with simple HTML, CSS and JavaScript. Experience with image creation and processing tools will also help.",
      "syllabus": "### Lesson 1 - Getting up and Running\n\nBefore you start working with responsive images, you need to start debugging on your mobile devices. This lesson will help you get started with Developer Tools and mobile debugging.\n\n###Lesson 2 - Units, Formats, Environments\n\nYou can't optimize what you can't measure. In this lesson, you will start with comparing different kinds of images on the web and getting familiar with different units you can use to scale them.\n\nYou will also get a chance to set up your development environment so that responsive images become a painless part of your workflow.\n\nAt the end of the lesson, you will start working on the responsive blog project, where you have a chance to apply responsive image principles in a real-world scenario!\n\n<strong>Topics covered:</strong>\n\n* Sizing Images\n* File Types\n* Automation Tools\n\n### Lesson 3 - Images with Markup\n\nNot all graphics need to be .JPGs or .PNGs. This lesson dives into using markup techniques like CSS and icon fonts to create responsive graphics. While markup techniques are awesome because they are natively responsive, they are often **extremely** lightweight, requiring a fraction of the bytes of traditional images!\n\nAt the end of the lesson, you will replace extraneous images with markup techniques and take advantage of font icons to add social media icons to the responsive blog project!\n\n<strong>Topics covered:</strong>\n\n* CSS Techniques\n* Inlining Images\n* Unicode\n* Icon fonts\n\n### Lesson 4 - Full Responsiveness\n\nHere comes the full monty! In this lesson, you will make your images fully responsive using the new `<picture>` element! Along the way, you will use the `srcset` and `sizes` attributes. You will also learn the importance of `alt` attributes for your visually impaired users.\n\nAt the end of this lesson, you will make the blog project fully responsive, as you implement `<picture>` to display beautiful images across a range of device widths and pixel ratios.\n\n<strong>Topics covered:</strong>\n\n* `<picture>`\n* `sizes` attribute\n* `srcset` attribute\n* `alt` attributes",
      "new_release": true,
      "homepage": "https://www.udacity.com/course/ud882?utm_medium=referral&utm_campaign=api",
      "project_name": "",
      "full_course_available": false,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh3.ggpht.com/Wx1OdscqyJkXh3vYLx6ZTxngP542hK_P2Mew1MvItbCs-GF4a0lyBfFSOfebDt9CX4Fv-omaDshdYX_obLI9=s0#w=130&h=60",
          "name": "Google"
        }
      ],
      "tracks": ["Web Development"],
      "banner_image": "https://lh6.ggpht.com/XXakJTthGX4SGDZq3hccjzxn2tSASDPg0zOynxPS2FmR837Ia-29I0F0-VOel9WWO0jUfcMao-DY8P0wtfpM=s0#w=4680&h=968",
      "short_summary": "Go beyond image tags! Learn how to make images a part of your responsive design workflow.",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "weeks",
      "summary": "Did you know that images account for more than **60%** of the bytes on average needed to load a web page?\n\nIn this course you will learn how to work with images on the modern web, so that your images look great and load quickly on any device.\n\nAlong the way, you will pick up a range of skills and techniques to smoothly integrate responsive images into your development workflow. By then end of the course, you will be developing with images that adapt and respond to different viewport sizes and usage scenarios.",
      "expected_duration": 2
    },
    {
      "instructors": [
        {
          "bio": "After a long and wandering path through technical theatre, motion graphics, and audio engineering, Ben landed at Udacity working as a web developer and front-end course developer. He cohosts <a href=\"http://geekspeak.org\" target=\"_blank\">GeekSpeak</a>, a weekly radio show and podcast about science and technology. He also sings, and plays piano, clarinet, and guitar. When Ben is not teaching, developing, or doing radio, you can find him writing and recording music, wood-working, baking desserts, and traveling the world. He is usually smiling.",
          "image": "https://lh4.ggpht.com/2klGJS0WOyYss-OKYOzk6jaqdsS4kaxLxDIFrQwreTAPnAFIkNB6BT5o3S54XMLUswsAEWpwmUbNBNWE-Tc=s0#w=200&h=200",
          "name": "Ben Jaffe"
        }
      ],
      "subtitle": "Organizing code in a disorganized world",
      "key": "ud989",
      "image": "https://lh5.ggpht.com/sezqV_yZkcFmfZDOsKwakrr0w7i8ixmaX3rRdCwWelR7tWRIlgNkDmS7wEZ6hB-0Tvwt_3KFWIxw-7mfxd4=s0#w=1757&h=1080",
      "expected_learning": "Many developers dive right into projects without thinking of the organization or structure of the code they\u2019re writing. It's easy to hack projects together, but the best developers spend the extra time to think about the organization of their application and adhere to sound organizational practices.\n\nIn order to write clean code that will get you your next job or promotion, you'll need to have a solid understanding of organizational techniques, and you'll need to implement those techniques in your projects. Software developers who write clean and organized code are surprisingly hard to find, so if you can master code organization you\u2019ll be a step above the rest.",
      "featured": false,
      "teaser_video": {"youtube_url": ""},
      "title": "JavaScript Design Patterns",
      "required_knowledge": "This course is for intermediate web developers with some experience with JavaScript, and some prior experience with a JavaScript library, such as jQuery.\n\nStudents should also be proficient in HTML and CSS, and should have experience creating static pages.",
      "syllabus": "###Lesson 1: Changing Expectations\nWe'll first start by building a project the way you already know how: without an overarching organizational paradigm. Specifically, we'll discuss pain points and difficulties that are easy to run into when you don't use an organizational model. Then, we'll discuss a paradigm that will help us in the future, and we\u2019ll see some examples of that paradigm in action.\n\n###Lesson 2: Refactoring\nWe'll spend some time discussing how our new paradigm applies to the project we worked on in Lesson 1. Then we'll rebuild the project with the new organizational paradigm.\n\n###Lesson 3: Using an Organizational Library\nFinally, we'll explore how to use KnockoutJS, an organizational library, to organize our code and to reduce the amount of boilerplate code we write. Our resulting application will be well-organized, easy to understand, and extendable.",
      "new_release": true,
      "homepage": "https://www.udacity.com/course/ud989?utm_medium=referral&utm_campaign=api",
      "project_name": "Neighborhood Map",
      "full_course_available": true,
      "faq": "",
      "affiliates": [],
      "tracks": ["Web Development"],
      "banner_image": "https://lh4.ggpht.com/PxWWjHCqFK6wsIXVgIu4j82q44N6maGXu2TqfhaZ5p5DdP9VaTQl9IfvHGMgzQOieIjKVWvHTOCmxeT17A=s0#w=4680&h=968",
      "short_summary": "Learn the importance of code organization and how to implement it with either vanilla JavaScript or an organizational library or framework.",
      "starter": false,
      "level": "advanced",
      "expected_duration_unit": "weeks",
      "summary": "This course covers methods for organizing your code, both conceptually and literally. You\u2019ll learn the importance of separating concerns when writing JavaScript, gaining hands-on experience along the way. Separating concerns can be done with or without an organizational library or framework. We\u2019ll learn how to separate concerns without one, and then we\u2019ll explore an organizational library together. You\u2019ll also learn strategies for exploring other libraries and frameworks on your own.\n\nBy the end of this course, you\u2019ll understand (from experience) the importance of code organization, and how to implement it with either vanilla JavaScript or an organizational library or framework. Your applications will start looking clean and professional\u2014not just to your users, but also to anyone who looks at the code driving your applications.",
      "expected_duration": 6
    },
    {
      "instructors": [
        {
          "bio": "Michael is a self-taught full-stack web developer and open source advocate. Before joining Udacity, he spent over 10 years developing classified applications for some of the most demanding intelligence organizations in the world. He has an active Top Secret clearance and, unless you have one as well, that's all you're allowed to know. In his spare time he enjoys playing paintball, video games, and spending time with his 3 wonderful children.",
          "image": "https://lh5.ggpht.com/a4DmOafuOdZ45k42uu0JOPuQhmegEGAQugpTiX20IHVLPS7kxTUE3hpZVsjmAL1z-nwumQcY-6oT4b_hk8A=s0#w=2000&h=2000",
          "name": "Michael Wales"
        }
      ],
      "subtitle": "Developing Apps with Confidence",
      "key": "ud549",
      "image": "https://lh5.ggpht.com/vcyKpS2avvfz5qxyESkg23ul0R2U21iNgoIa76hADbha-IBnA_TEIZ5CPbvnblC2F6vRjiu76uDQ4lym2w=s0#w=2560&h=1440",
      "expected_learning": "As your applications become more complex and you continue adding new features, you need to verify your additions haven't introduced bugs to your existing functionality. Automated testing provides this functionality and allows you to focus on.",
      "featured": false,
      "teaser_video": {"youtube_url": ""},
      "title": "JavaScript Testing",
      "required_knowledge": "You should be comfortable writing JavaScript and using its object-oriented programming features. If you need a refresher on these subjects, consider taking our <a href=\"https://www.udacity.com/course/ud804\" target=\"_blank\">JavaScript Basics</a> and <a href=\"https://www.udacity.com/course/ud015\" target=\"_blank\">Object-Oriented JavaScript</a> courses.",
      "syllabus": "### Overview\nThis course consists of 2 lessons. In the first lesson, you'll discover the importance of testing and reconsider its purpose and the value it provides. In the second lesson, you'll explore the <a href=\"http://jasmine.github.io/\" target=\"_blank\">Jasmine</a> testing framework write your own test suites while developing an address book application.\n\n### Lesson 1: Rethinking Testing\nFrom education to aerospace, tests provide invaluable feedback to those that analyze the results. In this lesson, you'll learn all about the importance of testing, how to identify the expectations a test is attempting to validate and how to write expectations in code.\n\n**Topics covered:**\n\n* What is a test?\n* Validating opinions\n* Identifying and defining expectations\n* Writing expectations in code\n\n### Lesson 2: Writing Test Suites\n\nJavaScript doesn't support testing natively, so you'll need a framework to provide the functionality you need. In this lesson, you'll get an introductions to the <a href=\"http://jasmine.github.io/\" target=\"_blank\">Jasmine</a> testing framework and use the red-green-refactor workflow to begin development on an address book application.\n\n**Topics covered:**\n\n* Introduction to Jasmine\n* Writing suites, specs and tests\n* The red-green-refactor workflow cycle\n* Testing asynchronous functionality",
      "new_release": true,
      "homepage": "https://www.udacity.com/course/ud549?utm_medium=referral&utm_campaign=api",
      "project_name": "",
      "full_course_available": false,
      "faq": "",
      "affiliates": [],
      "tracks": ["Web Development"],
      "banner_image": "https://lh6.ggpht.com/zv_rFtzcKCwgIe9ETRsWn9UUQ_7-9Kerni99O2OwmYuMNxoXYab6ddnx-jifhuH8lPqJx5ZA6C96mat6wxQ=s0#w=4680&h=968",
      "short_summary": "Learn how to iterate on your web applications with confidence using the red-green-refactor workflow cycle and automated testing frameworks.",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "weeks",
      "summary": "In this course you'll learn how to write JavaScript applications with confidence, using the red-green-refactor workflow. You'll write comprehensive suites of tests that validate your application is functioning as intended at all times.\n\nYou'll start by exploring how other industries use a variety of tests and the value it provides. You'll then start writing your very own tests, using the Jasmine testing framework. Finally, you'll start developing your very own address book application using the red-green-refactor workflow and explore a variety of scenarios including testing asynchronous functions.",
      "expected_duration": 2
    },
    {
      "instructors": [
        {
          "bio": "Gabrielle earned her Ph.D. in Population Biology from UC Davis. There in the lab, analyzing DNA sequences, she discovered the joys of programming.  Having taught science and math to undergraduate and high school students for four years, she was motivated to make apps for science education. She worked as an iOS Engineer for a year and a half before joining Udacity.",
          "image": "https://lh6.ggpht.com/yca_AadWGhu3hepu4RDVmXnkCDX95ZzYGlemDEeXeegUejcFluGaKCmopYh8pbckN1AZfIHHWtvcQymY5fU=s0#w=992&h=992",
          "name": "Gabrielle Miller-Messner"
        },
        {
          "bio": "Jason Schatz was a Java developer until he was charmed by the first iPhones. He has been developing apps as a consultant ever since.  He enjoys writing and teaching software in equal measure, and thinks the transition to Swift will be excellent for both.  He has a M.S. in Computer Science from U.C. Davis and is a faculty member at City College of San Francisco.",
          "image": "https://lh6.ggpht.com/UbXxDQdXKwbniSRxGvCWk0fQs-a1dcmWT9pmDNz6kzpu7R8zCIGIK6Dx__WgPcURBp5YMuAvo2aPGvW02UE=s0#w=2000&h=2000",
          "name": "Jason Schatz"
        }
      ],
      "subtitle": "Learn the iOS User Interface Library",
      "key": "ud788",
      "image": "https://lh6.ggpht.com/T2dxUrLhxblm60U1fevj1W2xk2KIyVlOwf495y2Ue_9bMJXzMV1Gdly4MH4Gxfc87_S5kTgSgulfGmFBXg=s0#w=1676&h=1030",
      "expected_learning": "<a href=\"https://www.udacity.com/course/ud585\" target=\"_blank\">You\u2019ve built your first iOS app.</a> It was fun, but you might not be comfortable creating apps from scratch. After completing this course, you\u2019ll have the skills you will need to create the UI elements for almost any app. During this course, you\u2019ll learn everything you need to know about UIKit, from buttons to table views. To become fluent with UIKit requires practice, and this course will provide you with opportunities to create small working apps to build your skill set.\n\nAlong the way, you\u2019ll also have short breaks to learn crucial elements of the Swift programming language. We call these \u201cSwift Sessions\u201d and they\u2019ll get you up to speed on common syntactical and functional features of Swift.",
      "featured": false,
      "teaser_video": {"youtube_url": ""},
      "title": "UIKit Fundamentals",
      "required_knowledge": "**This course assumes prior iOS experience.** Specifically, it assumes that you have built at least one single-view app, and can use Xcode to modify swift files and storyboard scenes. You should know what a View Controller is, and know how to create outlets and actions. \n\nThe course also assumes basic familiarity with Git. Specifically, you will need to be able to clone git repositories and checkout branches specific to each lesson.  \n\nYou will need access to a Mac computer running OS X 10.9 or later. However, you do not need an iPad or iPhone to complete the activities. All exercises can be completed using the iOS simulator built into Xcode.",
      "syllabus": "###Lesson 1: Outlets and Actions\nIn this lesson, you\u2019ll learn to connect outlets and actions using only code and graphically using storyboard. In this lesson\u2019s Swift Session, you\u2019ll also learn about using optionals in Swift.\n\nYou\u2019ll use the following UIKit classes in this lesson:\n\n* UIButton\n* UILabel\n* UISwitch\n\n###Lesson 2: View Presentations and Segues\nIn this lesson, you\u2019ll learn how to present views modally. You\u2019ll also learn about closures in this lesson\u2019s Swift Session.\n\nWe will introduce you to the following UIKit classes:\n\n* UIImagePickerController\n* UIAlertController\n* UIActivityViewController\n\n###Lesson 3: The Delegate Pattern\nMany of the most common UIKit components make use of the delegate pattern. In this lesson, you\u2019ll learn how delegates make important connections between the model, view, and controller. You\u2019ll also learn about protocols in this lesson\u2019s Swift Session.\n\nWe will introduce you to the following UIKit classes:\n\n* UITextField\n* UITextFieldDelegate\n\n###Lesson 4: Tables\nTable views are one of the most commonly used views in iOS apps. In this lesson, you\u2019ll learn how to implement tables in your own apps. You\u2019ll also learn about collections and tuples in this lesson\u2019s Swift Session.\n\nWe will introduce you to the following UIKit classes: \n\n* UITableView\n* UITableViewDelegate\n* UITableViewDataSource\n* UITableViewCell\n\n###Lesson 5: Navigation\nIn this lesson, you\u2019ll learn how iOS uses navigation stacks to manage multiple views in an app. You\u2019ll take UITableViews a step further and create the navigation structure that enables a user to tap a row of a table, view the details of an item, and return again. You\u2019ll also learn about classes and structs in this lesson\u2019s Swift Session.\n\nWe will introduce you to the following UIKit classes:\n\n* UINavigationController\n* UIBarButtonItem\n\n###Lesson 6: MemeMe Techniques\nThis lesson will guide you through the process of creating your own version of the meme generating app, MemeMe. You\u2019ll learn about collection views, tab bar controllers, how to adjust the screen to accommodate the keyboard, and how to access the camera.\n\nWe will introduce you to the following UIKit classes:\n\n* UICollectionView\n* UICollectionViewDelegate\n* UICollectionViewDatasource\n* UITabBarController\n\nWe will also feature classes from the Foundation framework:\n\n* NSNotification\n* NSNotificationCenter",
      "new_release": true,
      "homepage": "https://www.udacity.com/course/ud788?utm_medium=referral&utm_campaign=api",
      "project_name": "",
      "full_course_available": false,
      "faq": "",
      "affiliates": [],
      "tracks": ["iOS"],
      "banner_image": "https://lh6.ggpht.com/mwHQcENN3An3evgOfroMVm6Jv3rlAn2DdTIqmFBV7mEQiR5Ca265Yd1NRXZMz1ruD73xowKFGMfVTmyqPA=s0#w=4680&h=968",
      "short_summary": "Learn the iOS UIKit framework, which is the cornerstone of creating user interfaces in all iOS apps and crucial for any iOS Developer to be intimately familiar with.",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "months",
      "summary": "In this course, you will build a series of simple apps to become more comfortable with the UIKit framework and master its most widely used components. This framework constitutes the building blocks of the user interface for all iOS apps, and is crucial for any iOS Developer to be intimately familiar with.",
      "expected_duration": 2
    },
    {
      "instructors": [
        {
          "bio": "Jarrod is no stranger to trying new things for the sake of education: both a self-starter and advocate for reinventing the ways we learn, he first started challenging the status quo when he helped create virtual science labs for middle school students at the HudsonAlpha Institute for Biotechnology. While studying Computer Science at the University of Alabama in Huntsville, he started supplementing his college curriculum with online courseware, and he has never looked back. He holds a BS in Computer Science from the University of Alabama in Huntsville.",
          "image": "https://lh4.ggpht.com/mC-YTFs8cIEoJR5IbuKo8pIVuJnZ7PY0IcZfgKsz22exBWabmnzyre8V0j8sURASRVM-2ao_-1hTLSgEsLI=s0#w=750&h=750",
          "name": "Jarrod Parkes"
        }
      ],
      "subtitle": "Web Services, APIs, and JSON",
      "key": "ud421",
      "image": "https://lh5.ggpht.com/R20fs5CnxLpzqvacgXY36EIqw0ZGiw3rYYttnI8FBCoXk-jtPEaD37DT6VyxUxwVCGBAD1MbKWeOT4n0GA=s0#w=1670&h=1026",
      "expected_learning": "Without networking, mobile apps can only perceive, process, and present the data that is local to the host device. This greatly restricts the scope of problems which apps can solve and limits their overall utility. By incorporating networking, apps truly become \u201cmobile\u201d -- they can interact with interesting data using popular web services, coordinate multi-user activities, and build experiences that bring users together.\n\nThis course will cover concepts fundamental to communication over the network like HTTP, JSON, and authentication. These concepts are also highly transferrable to other platforms, languages, and applications. Additionally, it will mold your understanding of app design, especially when networking constraints are involved.",
      "featured": false,
      "teaser_video": {"youtube_url": ""},
      "title": "iOS Networking with Swift",
      "required_knowledge": "**This course assumes prior iOS experience.** Specifically, you\u2019ve built several apps, know how to use core iOS libraries, and are familiar with MVC design principles. <a href=\"https://www.udacity.com/course/ud585\" target=\"_blank\">Introduction to iOS App Development with Swift</a> and <a href=\"https://www.udacity.com/course/ud788\" target=\"_blank\">UIKit Fundamentals</a> are good courses to take if you need to familiarize yourself with these concepts. \n\nThe course also assumes basic familiarity with Git. Specifically, you will need to be able to clone Git repositories and checkout branches specific to each lesson. <a href=\"https://www.udacity.com/course/ud775\" target=\"_blank\">How to Use Git & GitHub</a> is a great option if you need to brush up on these skills.\n\nYou will need access to a Mac computer running OS X 10.9 or later. However, you do not need an iPad or iPhone to complete the activities. All exercises can be completed using the iOS simulator built into Xcode.",
      "syllabus": "###Lesson 1: Networking and Web Services\nIn this lesson, you\u2019ll learn all about networks and how they work. You\u2019ll also build your first app that utilizes a web service: \u201cSleeping in the Library.\u201d This app uses the Flickr API to pull pictures of people sleeping in libraries.\n###Lesson 2: Building \u201cFlick Finder\u201d\nIn this lesson, you\u2019ll learn how to parse JSON data and display it to a user. You\u2019ll demonstrate these new skills by building the \u201cFlick Finder\u201d app, which displays Flickr images based on a phrase or location.\n###Lesson 3: The MovieDB and Authentication\nIn this lesson, you\u2019ll learn the difference between user and anonymously accessed data. You\u2019ll do so by building the \u201cMy Favorite Movies\u201d app that utilizes the Movie Database API.\n###Lesson 4: Improving Networking with MVC\nIn this lesson, you\u2019ll improve on your \u201cMy Favorite Movies\u201d app to build the \u201cMovie Manager\u201d app. For this app, we\u2019ll be sure to use good MVC design, and learn what this means from a networking perspective.\n###Lesson 5: Reliability and \u201cOn the Map\u201d\nIn this lesson, you\u2019ll start on your final project app, \u201cOn the Map.\u201d You\u2019ll also learn about network reliability, and how your app should behave if a network can\u2019t be reached.",
      "new_release": true,
      "homepage": "https://www.udacity.com/course/ud421?utm_medium=referral&utm_campaign=api",
      "project_name": "",
      "full_course_available": false,
      "faq": "",
      "affiliates": [],
      "tracks": ["iOS"],
      "banner_image": "https://lh5.ggpht.com/dmAXbiVqQFXiMpAwgu1HifxPYuOaB_zY_61dP3HrGbbj1vxmqnip-kHY6m9UhhJhIVHksUcBIhFUF4MluCs=s0#w=4680&h=968",
      "short_summary": "Learn how to incorporate networking into your apps to access data from around the world. Build the On the Map app to share location and fun links with fellow students.",
      "starter": false,
      "level": "advanced",
      "expected_duration_unit": "months",
      "summary": "In this course, you\u2019ll learn how to incorporate networking into your apps, so they can access data from around the world. You\u2019ll learn how to harness the power of APIs to display images and retrieve movie data. At the end of the course, you\u2019ll build the \u201cOn the Map\u201d app which allows you to share interesting links, projects, or other information with fellow Udacity students.",
      "expected_duration": 3
    },
    {
      "instructors": [
        {
          "bio": "Jonathan is redefining data science education as the co-founder and CTO of Zipfian Academy -- a 12-week full time immersive data science program.  He first discovered his love of all things data while studying Computer Science and Physics at UC Berkeley. In a former life, he worked for Alpine Data Labs developing distributed machine learning algorithms for predictive analytics on Hadoop. \n\nJonathan has always had a passion for sharing the things he has learned in the most creative ways he can.  At Zipfian Academy, he gets to combine his two favorite things: humans and code.  When he is not working with students you can find him blogging about data, visualization, and education at <a href=\"http://hopelessoptimism.com\">hopelessoptimism.com<a>",
          "image": "https://lh4.ggpht.com/AC2ydYqfBdJQyU7uvY66KQSLwRgPTAmUKOgx1Higi7tadskt0YLNbRQzXoIex4JDUw4eZdqP6Jl_nolmUg=s0#w=2774&h=2774",
          "name": "Jonathan Dinu"
        },
        {
          "bio": "Ryan is currently the CEO and Co-founder of Zipfian Academy, the leading provider of immersive training programs focused on data science and data engineering. Before Zipfian Academy, Ryan was a Sr. Systems Engineer at <a href=\"http://www.nutanix.com\">Nutanix</a>, creating scale-out distributed computing solutions for virtualized environments. Ryan holds a bachelor\u2019s degree in Molecular Cell Biology from UC Berkeley, where he plumbed the depths of plant immunity at the <a href=\"http://bakerlab.berkeley.edu\">Plant Gene Expression Center</a>, building big data applications targeting next-generation sequencing technologies. When not trying to pull beauty out of data, you can find Ryan hacking on 3D printers, DIY Bio, and open-source hardware.",
          "image": "https://lh4.ggpht.com/wVZ8n9raas6qDlGNnxd4w2w2LXzR7bnmNhQO3HC9XOw6-PlHoQQqrbWSkFYc9R8ALFkJMHlcgEP_iGu8z4uX=s0#w=591&h=591",
          "name": "Ryan Orban"
        }
      ],
      "subtitle": "Communicating with Data",
      "key": "ud507",
      "image": "https://lh4.ggpht.com/-8k47x6ig0mLWtYBVs1jSILrKvM6oxad_thcLIM4Hzf9KTLLafG3by9g443o_fb5ugXomH-eps6z94hp9Sk=s0#w=1725&h=1060",
      "expected_learning": "Learn by doing! You will analyze existing data visualization and create new ones to learn about the field. At it\u2019s core, data visualization is a form of communication. Learn how to be a great communicator and how to enable readers to walk away from your graphics with insight and understanding. This course also make use of open web standards (HTML, CSS, and SVG) to create data visualizations.\n\n### You can also learn how to...\n\n- communicate clearly with the best visual representation of your data\n- tell stories, spark discussion, and create calls to actions for readers\n- design graphics like ones from the NYTimes and other media companies\n- how to use open web technologies to create an online portfolio of your work\n- use visualization libraries (<a href=\"http://dimplejs.org/\" target=\"_blank\">dimple.js</a> and <a href=\"http://d3js.org/\" target=\"_blank\">D3.js</a>) to create graphics\n\n### Final Project: Making an Effective Data Visualization (2 hours or more)\nYou will create a data visualization that conveys a clear message about a data set. You will use dimple.js or d3.js and collect feedback along the way to arrive at a polished product.",
      "featured": false,
      "teaser_video": {"youtube_url": ""},
      "title": "Data Visualization and D3.js",
      "required_knowledge": "Regardless of your programming background, you can learn about data visualization and design principles in Lesson 1a and Lesson 2a without the following recommended background.\n\nTo succeed in this course, you should to be familiar with basic programming principles, including data types (strings, arrays, booleans, etc.), `if else` statements, and `for` loops. You should also be able to describe concepts like functions and objects. Our <a href=\"https://www.udacity.com/course/cs101\" target=\"_blank\">Intro to Computer Science</a> and <a href=\"https://www.udacity.com/course/ud036\" target=\"_blank\">Programming Fundamentals with Python</a> courses are great places to get started.\n\nBasic knowledge of HTML and CSS (structuring and styling a web page) is not required but highly recommended. We suggest taking the <a href=\"https://www.udacity.com/course/ud304\" target=\"_blank\">Intro to HTML and CSS</a> course if you have no experience with HTML or CSS.\n\nThis course is unique in that the final project can be completed using either dimple.js or d3.js. The visualization library, dimple.js, is easier to use than d3.js and requires less background knowledge. Furthermore, a graphic can be created in considerably fewer lines of code using dimple.js as opposed to d3.js.\n\nSo why should you learn d3.js?\n\nData Driven Documents (d3.js) allows you to build highly customized graphics. If you would like to gain more technical skills and learn more about Javascript and open web standards, then you should complete Lesson 3 and Lesson 4 in order to prepare for the final project.\n\n\nIf you would like to complete the final project using d3.js, you should have some experience reading and using documentation. For example, you should be able to code a `for` loop in Javascript or be able to look up the syntax to work with strings and arrays in Javascript. We recommend taking the <a href=\"https://www.udacity.com/course/ud804\" target=\"_blank\">Javascript Basics</a> course if you have little to no experience with Javascript.",
      "syllabus": "### Lesson 1a Visualization Fundamentals (2 hour)\nLearn about the elements of great data visualization. In this lesson, you will meet data visualization experts, learn about data visualization in the context of data science, and learn how to represent data values in visual form.\n\n### Lesson 1b D3 Building Blocks (4 hours)\nLearn how to use the open standards of the web to create graphical elements. You\u2019ll learn how to select elements on the page, add SVG elements, and how to style SVG elements. Make use of all the Instructor Notes throughout this lesson if you have little to no experience with HTML and CSS.\n\n### Mini-Project 1: RAW Visualization (2 hour)\nCreate a data visualization using a software of your choice. We will provide recommendations for visualization software as well as data sets. We want you to get right into making data visualization so here\u2019s your first chance!\n\n### Lesson 2a Design Principles (2 hours)\nWhich chart type should I use for my data? Which colors should I avoid when making graphics? How do I know if my graphic is effective? Investigate these questions, and learn about the World Cup data set which will be use throughout the rest of the course.\n\n### Lesson 2b Dimple.js (4 hours)\nLearn how to create graphics using the Dimple JavaScript library. You will learn about this library as a gentle coding introduction before learning about D3.js. You will be able to produce great graphics with minimal code, and all of your graphics will come with interactivity without any extra effort on your part. Dimple, it's simple!\n\n### Mini-Project 2: Take Two (2-5 hours)\nFind an existing data visualization, critique it for what it does well and what it doesn\u2019t do well, and finally, recreate the graphic using a software tool of your choice. We recommend using Dimple.js, which is covered in Lesson 2b, but we don\u2019t want you to feel constrained by the choice of tools. Use any tool that works for you.\n\n### Special Note\nAt this point in the course, you can start the final project. The remaining content of the course covers narrative structures, types of bias, and maps. All of the code  in Lesson 3 and Lesson 4 pertains to d3.js. If you'd like to learn d3.js and complete the final project using d3.js, then please continue. If you prefer to stop, you can complete the final project using dimple.js.\n\n### Lesson 3 Narratives (5 hours)\nLearn how to incorporate different narrative structures into your visualizations and code along with Jonathan as you create a graphic for the World Cup data set. You\u2019ll learn about different types of bias in the data visualization process and learn how to add context to your data visualizations. By the end of this lesson, you\u2019ll have a solid foundation in D3.js.\n\n### Lesson 4 Animation and Interaction (5 hours)\nStatic graphics are great, but interactive graphics can be even better. Learn how to leverage animation and interaction to bring more data insights to your audience. Code along with Jonathan once again as you learn how to create a bubble map for the World Cup data set.\n\n### Final Project: Making an Effective Data Visualization (2 hours or more)\nCreate an explanatory graphic that incorporates animation or interaction using dimple.js or d3.js.",
      "new_release": true,
      "homepage": "https://www.udacity.com/course/ud507?utm_medium=referral&utm_campaign=api",
      "project_name": "",
      "full_course_available": true,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh3.ggpht.com/q4HzkHOhhHjpC2TUGyz6nq3p0ZQbjscdEvTBBx3xMC9kiX7Iq1GOJIIi9K3yRwGw4nXFyOsyW6IeqtaQBdg=s0#w=520&h=240",
          "name": "Zipfian"
        }
      ],
      "tracks": ["Data Science"],
      "banner_image": "https://lh4.ggpht.com/U6QogkXo7B-Tll6-h9dTYVtkBVv_POuKORlwQ3B0T003rUnUGMAQscN6VAoBqwdDAcPjqosCjTqXMvi60YiA=s0#w=1170&h=242",
      "short_summary": "Learn the fundamentals of data visualization and apply design and narrative concepts to create your own visualization.",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "weeks",
      "summary": "Learn the fundamentals of data visualization and practice communicating with data. This course covers how to apply design principles, human perception, color theory, and effective storytelling to data visualization. If you present data to others, aspire to be an analyst or data scientist, or if you\u2019d like to become more technical with visualization tools, then you can grow your skills with this course.\n\nThe course does not cover exploratory approaches to discover insights about data. Instead, the course focuses on how to visually encode and present data to an audience once an insight has been found.\n\nThis course is part of the <a href=\"https://www.udacity.com/course/nd002\" target=\"_blank\">Data Analyst Nanodegree</a>.",
      "expected_duration": 7
    },
    {
      "instructors": [
        {
          "bio": "Sebastian Thrun is founder of Udacity. He is Research Professor of Computer Science at Stanford University, and a member of the National Academy of Engineering and the German Academy of Sciences. He was Google Vice President and Fellow where he founded Google X that generated the self-driving car, Google Glass and Loon among other projects. Thrun is best known for his research in robotics, artificial intelligence and machine learning.",
          "image": "https://lh4.ggpht.com/6TOKyC-dF26hloyEp0Iv88hrbuB9jyyrHi0QIJDBLpG62SWIWoZzYdLylXlU89hSyWvbC5mLFD5ymilCa7vp=s0#w=2000&h=2001",
          "name": "Sebastian Thrun"
        }
      ],
      "subtitle": "Pattern Recognition for Fun and Profit",
      "key": "ud120",
      "image": "https://lh4.ggpht.com/iH59AlLRPUJvthBY2aYpNo-qvIB0wsh7OXNAxNgBciwkUa0lLhxzvYswHVJjG012yD5eQgbWYmcHyDczMg=s0#w=1724&h=1060",
      "expected_learning": "In this course, you\u2019ll learn by doing! We\u2019ll bring machine learning to life by showing you fascinating use cases and tackling interesting real-world problems like self-driving cars. For your final project you\u2019ll mine the email inboxes and financial data of Enron to identify persons of interest in one of the greatest corporate fraud cases in American history.\n\nWhen you finish this introductory course, you\u2019ll be able to analyze data using machine learning techniques, and you\u2019ll also be prepared to take our Data Analyst Nanodegree. We\u2019ll get you started on your machine learning journey by teaching you how to use helpful tools, such as pre-written algorithms and libraries, to answer interesting questions.",
      "featured": false,
      "teaser_video": {"youtube_url": ""},
      "title": "Intro to Machine Learning",
      "required_knowledge": "To succeed in this course, you must be proficient at programming in Python, basic statistics, and data science.  If you need a refresher on any of these topics, you can check out these courses:\n\n- [Intro to Computer Science](https://www.udacity.com/course/cs101) (You should know basic data structures and control statements, and be able to write and import functions.)\n\n- [Inferential Statistics](https://www.udacity.com/course/ud201)\n\n- [Descriptive Statistics](https://www.udacity.com/course/ud827)\n\n\n\nOne additional course that would be nice to have is Intro to Data Science, as this will get you familiar with scientific problem-solving.  However, completion of that class isn't required for success.  We will also use a tiny bit of <a href=\"https://www.udacity.com/course/ud775\">git</a>, which you can also learn about on Udacity.\n\nOne thing that we don\u2019t require is previous exposure to machine learning.  If you\u2019re a machine learning beginner, you\u2019re in the right place.",
      "syllabus": "You\u2019ll learn how to start with a question and/or a dataset, and use machine learning to turn them into insights. \n\n###Lessons 1-4: Supervised Classification\n\n**Naive Bayes:** We jump in headfirst, learning perhaps the world\u2019s greatest algorithm for classifying text.\n\n**Support Vector Machines (SVMs):** One of the top 10 algorithms in machine learning, and a must-try for many classification tasks.  What makes it special?  The ability to generate new features independently and on the fly.\n\n**Decision Trees:** Extremely straightforward, often just as accurate as an SVM but (usually) way faster.  The launch point for more sophisticated methods, like random forests and boosting.\n\n###Lesson 5: Datasets and Questions\nBehind any great machine learning project is a great dataset that the algorithm can learn from.  We were inspired by a treasure trove of email and financial data from the Enron corporation, which would normally be strictly confidential but became public when the company went bankrupt in a blizzard of fraud.  Follow our lead as we wrestle this dataset into a machine-learning-ready format, in anticipation of trying to predict cases of fraud.\n\n###Lesson 6 and 7: Regressions and Outliers\nRegressions are some of the most widely used machine learning algorithms, and rightly share prominence with classification.  What\u2019s a fast way to make mistakes in regression, though?  Have troublesome outliers in your data.  We\u2019ll tackle how to identify and clean away those pesky data points.\n\n###Lesson 8: Unsupervised Learning\n\n**K-Means Clustering:** The flagship algorithm when you don\u2019t have labeled data to work with, and a quick method for pattern-searching when approaching a dataset for the first time.\n\n###Lessons 9-12: Features, Features, Features\n\n**Feature Creation:** Taking your human intuition about the world and turning it into data that a computer can use.\n\n**Feature Selection:** Einstein said it best: make everything as simple as possible, and no simpler.  In this case, that means identifying the most important features of your data.\n\n**Principal Component Analysis:** A more sophisticated take on feature selection, and one of the crown jewels of unsupervised learning.\n\n**Feature Scaling:** Simple tricks for making sure your data and your algorithm play nicely together.\nLearning from Text: More information is in text than any other format, and there are some effective but simple tools for extracting that information.\n\n###Lessons 13-14: Validation and Evaluation\n\n**Training/testing data split:** How do you know that what you\u2019re doing is working?  You don\u2019t, unless you validate.  The train-test split is simple to do, and the gold standard for understanding your results.\n\n**Cross-validation:** Take the training/testing split and put it on steroids.  Validate your machine learning results like a pro.\n\n**Precision, recall, and F1 score:**  After all this data-driven work, quantify your results with metrics tailored to what is most important to you.\n \n###Lesson 15: Wrapping it all Up\nWe take a step back and review what we\u2019ve learned, and how it all fits together.  \n\n###Projects\n\nMini-project at the end of each lesson\n\n**Final project:** searching for signs of corporate fraud in Enron data",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/ud120?utm_medium=referral&utm_campaign=api",
      "project_name": "",
      "full_course_available": true,
      "faq": "",
      "affiliates": [],
      "tracks": ["Data Science"],
      "banner_image": "https://lh6.ggpht.com/CnktNdwaisHPcxH0faZZ5FVBCYuaSoVU2l_3rXujMyG9Em8GcZof-rIbH7sjmzL3BaBeTF4qXn3r3zAP0O4=s0#w=1170&h=242",
      "short_summary": "This class will teach you the end-to-end process of investigating data through a machine learning lens, and you'll apply what you've learned to a real-world data set.",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "weeks",
      "summary": "Machine Learning is a first-class ticket to the most exciting careers in data analysis today. As data sources proliferate along with the computing power to process them, going straight to the data is one of the most straightforward ways to quickly gain insights and make predictions.  \n\nMachine learning brings together computer science and statistics to harness that predictive power. It\u2019s a must-have skill for all aspiring data analysts and data scientists, or anyone else who wants to wrestle all that raw data into refined trends and predictions.\n\nThis is a class that will teach you the end-to-end process of investigating data through a machine learning lens. It will teach you how to extract and identify useful features that best represent your data, a few of the most important machine learning algorithms, and how to evaluate the performance of your machine learning algorithms.\n\nThis course is also a part of our <a href=\"https://www.udacity.com/course/nd002\">Data Analyst</a> Nanodegree.",
      "expected_duration": 10
    },
    {
      "instructors": [
        {
          "bio": "Sarah Sproehnle is the Vice President of Educational Services at Cloudera, a company that helps develop, manage and support Apache Hadoop.  While she is a geek at heart, her passion is helping people learn complex technology.  In addition to teaching people how to use Hadoop, she's taught database administration, various programming languages, and system administration.",
          "image": "https://lh3.ggpht.com/r6shPndBg0wnPGHDAjd-6GC2OD_rW9N9dSbboXeBvGOwKv7pZ3QGLPVhrPl9f961bnm-hfQ__a1G6-S3wg=s0#w=966&h=966",
          "name": "Sarah Sproehnle"
        },
        {
          "bio": "Ian Wrigley is currently the Senior Curriculum Manager at Cloudera, responsible for the team which creates all the company's Hadoop training materials. He's been a tech journalist, an instructor, and a course author for over 20 years, during which time he's taught everything from C programming to copywriting for the Web. He describes his job as \"teaching geeks to be geekier\".",
          "image": "https://lh6.ggpht.com/KM9X5WCSWfw32PlvYOAGOAroFc5bPlMWhUBFbHWXEJfREQmrrMDwjGNI5zobOp5t8win0b9xV1igWMiuOVQ=s0#w=330&h=330",
          "name": "Ian Wrigley"
        }
      ],
      "subtitle": "How to Process Big Data",
      "key": "ud617",
      "image": "https://lh5.ggpht.com/JJc55ckwLOPH2koySqtvwd8Hc4vzFodhg-x5JxcvFKth-dKW_iD8zy9Ax2W8oPvyR6iOYoeVPRvclIhVmdE=s0#w=1725&h=1060",
      "expected_learning": "- How Hadoop fits into the world (recognize the problems it solves)\n- Understand the concepts of HDFS and MapReduce (find out how it solves the problems)\n- Write MapReduce programs (see how we solve the problems)\n- Practice solving problems on your own",
      "featured": false,
      "teaser_video": {"youtube_url": "https://www.youtube.com/watch?v=44K_bzTL_SM"},
      "title": "Intro to Hadoop and MapReduce",
      "required_knowledge": "Lesson 1 does not have technical prerequisites and is a good overview of Hadoop and MapReduce for managers.\n\nTo get the most out of the class, however, you need basic programming skills in Python on a level provided by introductory courses like our <a target=\"_blank\" href=\"https://www.udacity.com/course/cs101\">Introduction to Computer Science</a> course.\n\nTo learn more about Hadoop, you can also check out the book <a href=\"http://www.amazon.com/gp/product/1449311520/ref=as_li_ss_tl?ie=UTF8&camp=1789&creative=390957&creativeASIN=1449311520&linkCode=as2&tag=udacity-20\" target=\"_blank\">Hadoop: The Definitive Guide</a>.",
      "syllabus": "### Lesson 1\nWhat is \"Big Data\"? The dimensions of Big Data. Scaling problems.  HDFS and the Hadoop ecosystem.\n\n### Lesson 2\nThe basics of HDFS, MapReduce and Hadoop cluster.\n\n### Lesson 3\nWriting MapReduce programs to answer questions about data.\n\n### Lesson 4\nMapReduce design patterns.\n\n### Final Project\nAnswering questions about big sales data and analyzing  large website logs.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/ud617?utm_medium=referral&utm_campaign=api",
      "project_name": "Implement MapReduce",
      "full_course_available": true,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh4.ggpht.com/nm2pwAgDaPrJlaXa0CDW4vPhm4ixgz7tYSB3DtjCAQ9Dk9GQCisyguBRqE4A7i-S5ZS2Am6z89q9qt5fFMNG=s0#w=130&h=60",
          "name": "Cloudera"
        }
      ],
      "tracks": [
        "Data Science",
        "Software Engineering"
      ],
      "banner_image": "https://lh4.ggpht.com/05Dcr-kT6tfnSS2NEkyUCbKrCQPKDCUUG3p1FA2Kd-Qu72BkOBnTk-d5naoIzHxFOvSiog5Q9w_r3i0-uuY=s0#w=4680&h=968",
      "short_summary": "In this short course, learn the fundamentals of MapReduce and Apache Hadoop to start making sense of Big Data in the real world!",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "months",
      "summary": "The Apache\u2122 Hadoop\u00ae project develops open-source software for reliable, scalable, distributed computing. Learn the fundamental principles behind it, and how you can use its power to make sense of your Big Data.",
      "expected_duration": 1
    },
    {
      "instructors": [
        {
          "bio": "Karthik is the engineering manager and technical lead of Storm, the real-time analytics  engine@Twitter. He has two decades of experience working in parallel databases, big data  infrastructure and networking. He co-founded Locomatix, a company that specializes in real  time streaming processing on Hadoop and Cassandra using SQL that was acquired by Twitter.  Prior to Locomatix, Karthik was at Juniper Networks and Greenplum. At the University of Wisconsin, he worked extensively in parallel database systems, query processing, scale out technologies, storage engine and online analytical systems.  Several of these research were spun as a company later acquired by Teradata. He is the author of several publications, patents and one of the best selling book \"Network Routing: Algorithms,  Protocols and Architectures\". He has a Ph.D. in Computer Science from University of Wisconsin,  Madison.",
          "image": "https://lh6.ggpht.com/XKbP05Z7qqy3gMVLcXOT3Xn1CybmY0nsf7s3-_SL4kJMAQB7ojfw9se_QrWSK24dNXQOqF8eqsAUKpbwRhDG=s0#w=1000&h=1000",
          "name": "Karthik Ramasamy"
        }
      ],
      "subtitle": "The \"Hadoop of Real-Time\"",
      "key": "ud381",
      "image": "https://lh6.ggpht.com/UfMbnNAjbz9gpWVzFhmYyOJg-5paoozIIkVhKWHAGNLpfaptKrysZxyuiQlqVkYiCHhyBBlJiowyxzHStn0P=s0#w=1748&h=1075",
      "expected_learning": "Learn by doing! The world is going real time.  Batch processing, popularized by Hadoop, has latency exceeding required real-time demands of modern mobile, connected, always-on users.  Stream processing with seconds-required response time is necessary to meet this demand. Twitter is a world leader in real-time processing at scale.  Learn the future from the company defining it.",
      "featured": false,
      "teaser_video": {"youtube_url": ""},
      "title": "Real-Time Analytics with Apache Storm",
      "required_knowledge": "Programming language required: Java\n\nTo be successful, you'll need intermediate knowledge of Java. Specifically, this is defined by experience and comfort with Java syntax, compile & run-time error diagnostics and debugging, ability to use javadocs as needed, and intermediate data structures including Arrays, HashMaps, and LinkedLists.  If you need to build these skills, a good starting point is Udacity\u2019s <a href=\"https://www.udacity.com/course/cs046\">Introduction to Java</a> with additional comfortability needed identifying and debugging compile & run-time errors.\n\nNo prior experience is assumed in Ubuntu, git, Maven, Redis, Flask (Python) or d3 (Javascript).  Python is useful, but optional.  A basic course such as CS101 or OO in Python would be helpful.",
      "syllabus": "###Lesson 1\nJoin instructor Karthik Ramasamy and the first Udacity-Twitter Storm Hackathon to cover the motivation and practice of real-time, distributed, fault-tolerant data processing.  Dive into basic Storm Topologies by linking to a real-time d3 Word Cloud Visualization using Redis, Flask, and d3. \n\n###Lesson 2\nExplore Storm basics by programming Bolts, linking Spouts, and finally connecting to the live Twitter API to process real-time tweets.  Explore open source components by connecting a Rolling Count Bolt to your topology to visualize Rolling Top Tweeted Words.\n\n###Lesson 3\nGo beyond Storm basics by exploring multi-language capabilities to download and parse real-time Tweeted URLs in Python using Beautiful Soup.  Integrate complex open source bolts to calculate Top-N words to visualize real-time Top-N Hashtags.  Finally, use stream grouping concepts to easily create streaming join to connect and dynamically process multiple streams.\n\n###Lesson 4\nWork on your final project and we cover additional questions and topics brought up by Hackathon participants.  Explore Vagrant, VirtualBox, Redis, Flask, and d3 further if you are interested!\n\n###Final Project: Construct a Storm Topology\nDesign a Storm Topology and new bolt that uses streaming joins to dynamically calculate Top-N Hashtags and display real-time tweets that contain trending Top Hashtags.  Post your visualization to the forum and tweet them to your Twitter followers.\n\n###Project Extensions\nUse additional features of the real-time Twitter sample stream or use any data source to drive your real-time d3 visualization.",
      "new_release": true,
      "homepage": "https://www.udacity.com/course/ud381?utm_medium=referral&utm_campaign=api",
      "project_name": "",
      "full_course_available": false,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh3.ggpht.com/D1Lxkd2F-dSW06wEaALD4LnYUkAt3wMEDxZ8Hc6YWtOs_H3cRyZ3wX81YZNXoo35oKYJH6bgyMceYsTf2Gls=s0#w=520&h=240",
          "name": "Twitter"
        }
      ],
      "tracks": ["Data Science"],
      "banner_image": "https://lh5.ggpht.com/nTmzg9gnSSpQ9nO1vuyErMxcZFYZtcUn9JMi4e31DyRR8gLYS8ynTTElKwJfEDik9sWFUQAaHmOa_cibkLI=s0#w=1170&h=242",
      "short_summary": "The world is trending in real time! Learn Apache Storm, taught by Twitter, to scalably analyze real-time tweets and drive d3 visualizations. Storm is free, open and fun!",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "weeks",
      "summary": "The world is trending in real time!  Learn from Twitter to scalably process tweets, or any big data stream, in real-time to drive d3 visualizations using Apache Storm, the \u201cHadoop of Real Time.\u201d  Storm is free, open source, and fun to use!  Learn from Karthik Ramasamy, Technical Lead of Storm@Twitter, about the distributed, fault-tolerant, and flexible technology used to power Twitter\u2019s real-time data flow pipeline.  Twitter open sourced Storm in 2011, and it graduated to a top-level Apache project in September, 2014.  \n\nStarting from basic distributed concepts presented during our first Udacity-Twitter Storm Hackathon, link Storm concepts to Storm syntax to scalably drive Word Cloud visualizations with Vagrant, Ubuntu, Maven, Flask, Redis, and d3.  Link to the public Twitter gardenhose stream to process live tweets, parse embedded URLs, and calculate Top worldwide hashtags.  Extend beyond Storm basics by exploring multi-language capabilities in Python, integrate open source components, and implement real-time streaming joins.\n\nIn your final project, follow real-time trending topics by implementing the data pipeline to visualize only tweets that contain Top worldwide hashtags.  Extend your project by exploring the Twitter API, or any data source, alongside Hackathon participants as they design their own ideas, receive feedback from Karthik, and open source a final project calculating real-time tweet sentiment and geolocation to drive a U.S. Map.",
      "expected_duration": 2
    },
    {
      "instructors": [
        {
          "bio": "Dave Holtz is currently a data scientist at Airbnb. Before Airbnb, he was formerly a data science engineer at Yub, the world's first online-to-offline affiliate network, and he also worked as a product manager and data scientist at TrialPay. Dave holds an M.A. in physics and astronomy from the Johns Hopkins University and a B.A. in physics from Princeton University. In addition to data science, Dave is passionate about cosmology, smart cities, music, theater, and improv comedy.",
          "image": "https://lh5.ggpht.com/qGIzE-bB0uLo9HZOSl6tkitVnI1ffvgg6xb_81-MrynyStg0_hwnpcwYKqPyZBcF8_JCQUxgiVsQfRYb6Ro=s0#w=383&h=383",
          "name": "Dave Holtz"
        }
      ],
      "subtitle": "Learn What It Takes to Become a Data Scientist",
      "key": "ud359",
      "image": "https://lh3.ggpht.com/PGzMw8H7sLoOMDvdpLVdg3rMH7xCnGtC6w5j47_ezPLh61QGgi0pzZoC-vrVUqpXmOggNgJGBcDd-NWC0Og=s0#w=1724&h=1060",
      "expected_learning": "You will have an opportunity to work through a data science project end to end, from analyzing a dataset to visualizing and communicating your data analysis.\n\nThrough working on the class project, you will be exposed to and understand the skills that are needed to become a data scientist yourself.",
      "featured": false,
      "teaser_video": {"youtube_url": "https://www.youtube.com/watch?v=ZB38GB4EF7s"},
      "title": "Intro to Data Science",
      "required_knowledge": "The ideal students for this class are prepared individuals who have:\n\n*   Strong interest in data science\n*   Background in intro level statistics\n*   Python programming experience\n*   Or understanding of programming concepts such as variables, functions, loops, and basic python data structures like lists and dictionaries\n\n<br />\nIf you need to brush up on your programming, we highly recommend [Introduction to Computer Science: Building a Search Engine](https://www.udacity.com/course/cs101). If you need a refresher on statistics, enroll in [Intro to Descriptive Statistics](https://www.udacity.com/course/ud827) and [Intro to Inferential Statisitics](https://www.udacity.com/course/ud201). All three are on Udacity!",
      "syllabus": "### Lesson 1: Introduction to Data Science\n\n- Introduction to Data Science\n- What is a Data Scientist\n- Pi-Chaun (Data Scientist @ Google): What is Data Science?\n- Gabor (Data Scientist @ Twitter): What is Data Science?\n- Problems Solved by Data Science \n- Pandas\n- Dataframes\n- Create a New Dataframe\n\n### Lesson 2: Data Wrangling \n\n- What is Data Wrangling?\n- Acquiring Data\n- Common Data Formats\n- What are Relational Databases?\n- Aadhaar Data \n- Aadhaar Data and Relational Databases\n- Introduction to Databases Schemas\n- API\u2019s\n- Data in JSON Format\n- How to Access an API efficiently \n- Missing Values\n- Easy Imputation\n- Impute using Linear Regression\n- Tip of the Imputation Iceberg\n\n### Lesson 3: Data Analysis\n\n- Statistical Rigor\n- Kurt (Data Scientist @ Twitter) - Why is Stats Useful?\n- Introduction to Normal Distribution\n- T Test\n- Welch T Test\n- Non-Parametric Tests\n- Non-Normal Data\n- Stats vs. Machine Learning\n- Different Types of Machine Learning\n- Prediction with Regression \n- Cost Function\n- How to Minimize Cost Function\n- Coefficients of Determination\n\n### Lesson 4: Data Visualization\n\n- Effective Information Visualization\n- Napoleon's March on Russia\n- Don (Principal Data Scientist @ AT&T): Communicating Findings\n- Rishiraj (Principal Data Scientist @ AT&T): Communicating Findings Well\n- Visual Encodings\n- Perception of Visual Cues\n- Plotting in Python\n- Data Scales\n- Visualizing Time Series Data\n\n### Lesson 5: MapReduce\n\n- Big Data and MapReduce\n- Basics of MapReduce\n- Mapper\n- Reducer\n- MapReduce with Aadhaar Data\n- MapReduce Ecosystem\n- Joshua (Data Scientist @ Twitter): MapReduce Tools, Pig\n- MapReduce with Subway Data",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/ud359?utm_medium=referral&utm_campaign=api",
      "project_name": "Investigate New York Subway Data",
      "full_course_available": true,
      "faq": "",
      "affiliates": [],
      "tracks": ["Data Science"],
      "banner_image": "https://lh5.ggpht.com/BeeZTWQPl18GIaxjjjfOM7X2hoGqIj_c-wlovtGe-PF4KBEiqFkOjGHfHqUcO-PtZ0KQ6loO3y5bJXrQOJI=s0#w=1170&h=242",
      "short_summary": "What does a data scientist do? In this course, we will survey the main topics in data science so you can understand the skills that are needed to become a data scientist!",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "months",
      "summary": "The Introduction to Data Science class will survey the foundational topics in data science, namely:\n\n*   Data Manipulation\n*   Data Analysis with Statistics and Machine Learning\n*   Data Communication with Information Visualization\n*   Data at Scale -- Working with Big Data  \n\n<br />\nThe class will focus on breadth and present the topics briefly instead of focusing on a single topic in depth. This will give you the opportunity to sample and apply the basic techniques of data science.\n\nThis course is also a part of our <a href=\"https://www.udacity.com/course/nd002\">Data Analyst</a> Nanodegree.",
      "expected_duration": 2
    },
    {
      "instructors": [
        {
          "bio": "Steve Huffman co-founded the social news site <a href=\"http://reddit.com\" target=\"_blank\">reddit.com</a> in 2005 with his college roommate. reddit.com has since grown into one of the largest communities online. In 2010, he co-founded <a href=\"https://www.hipmunk.com\" target=\"_blank\">Hipmunk</a>, a company to take the agony out of searching for plane and hotel tickets. Steve was named to Inc. Magazine's 30 under 30 list in 2011. He studied Computer Science at the University of Virginia.",
          "image": "https://lh3.ggpht.com/8U2ky8BOagj01omsrbrCcaEwruAvqMAidZQvq7IxFfall9m85tkh5VIKBhqTLoCzQLuy5YhEeOcrKIEh=s0#w=200&h=200",
          "name": "Steve Huffman"
        }
      ],
      "subtitle": "How to Build a Blog",
      "key": "cs253",
      "image": "https://lh4.ggpht.com/FraZoWIlsBTNmgBjNwvDshsBj84aycbTS5wxWU1KocDigABnbxTbIo7DyYs_QKoC8xM00kxLGln0ckL5Huo=s0#w=436&h=268",
      "expected_learning": "By taking this course, you will embark on a digital adventure to build your very own application live on the web. Valuable lessons often come from experience, and it\u2019s from this experience that Steve brings a fresh perspective to the classroom to show you how to approach building your web application in a way that assuages the potential challenges you may face. \nIn this course, you will learn by doing. Once you dive into the course experience, you will work on awesome projects: \n\n- Have you ever thought about what it takes to build a blog from the ground up? Over the course of six lessons, you will build a blog together with Steve that will be fully functional, online, for anybody to read by the end of the course. \n\n- Have you ever wondered how a  <a href=\"http://en.wikipedia.org/wiki/Wiki\" target=\"_blank\">wiki</a> works? As a final project for this course, you will be able to take all of your newly gained knowledge and apply it to build a complete wiki. \n\nThis course concentrates on back-end development, but regardless if you are interested in front-end development, back-end development, or anywhere in between the stack, this course will teach you the fundamental knowledge you need break into the web development world. Are you ready to dive in?",
      "featured": false,
      "teaser_video": {"youtube_url": "https://www.youtube.com/watch?v=4z37fUbpJ3s"},
      "title": "Web Development",
      "required_knowledge": "In order to take the full advantage of this course, we want you to be well prepared for it. This course assumes an intermediate proficiency programming with Python, as well as a solid knowledge on the following topics: \n\n- Basic computer science concepts such as procedures, decision statements, and loops. \n- Basic data structures such as lists, dictionaries, and hash tables. \n- Object-oriented programming. \n\nPlease feel free to peek at the <a href=\"https://www.udacity.com/course/cs101\" target=\"_blank\">Intro to Computer Science</a> and <a href=\"https://www.udacity.com/course/ud036\" target=\"_blank\">Programming Foundations with Python</a> courses to make sure you are comfortable with these required concepts for the course.",
      "syllabus": "###Lesson 1: How the Web Works (2.5 hours)\nIn this first lesson, you will learn basic concepts regarding the internet, browsers, HTML, and how all those elements fit together. You\u2019ll start using HTML (HyperText Markup Language) to format content for webpages. Then you\u2019ll get to see the mechanics of how the web works: HyperText Transfer Protocol (HTTP) via GET and POST requests. In the first problem set, you will get a simple website up and running with the Google App Engine platform. \n\n###Lesson 2: Forms and Input (4 hours)\nIn this second lesson you will learn about forms, a very common way to obtain input from users. You will learn how to get and process user input from webpages using Google App Engine to get a live form up and running. By the end of this lesson, you will know how to validate user input and securely obtain data from users.\n\n\n###Lesson 3: Databases (6 hours)\nYou learned about getting all sorts of information from users in the previous lesson, but what do you do with it once it\u2019s in your hands? You store it! In this third lesson, Steve will dive in and teach you what you need to know about databases, the final piece you need to start setting your blog in motion! You will learn about various database technologies, SQL, and the Google App Engine Datastore.\n\n###Lesson 4: User Accounts and Security (6 hours)\nIn this fourth lesson, you will learn the fundamentals of authentication and security, which are very relevant topics in almost any web application built today. We\u2019ll start by examining how websites use cookies to authenticate users and how we can manage cookies from the backend of a web application. You will implement a login system for your blog and learn how to use hashing to securely read and transmit user passwords.\n\n###Lesson 5: APIs (4.5 hours)\nUp until now, your programs have generated HTML that a browser can use to render a web page for the user. In the digital world, however, applications and websites communicate not only with people, but also with other applications and websites. By the end of this lesson, your blog will communicate with humans as well as with other computers. Your web application can generate data in formats such as XML and JSON that other computers can access through an API, or application programming interface. Those computers, in turn, can build websites or services that interact with your data. You\u2019ll first learn how to use APIs, and then build web applications as services so that other computers can glean data from your application. We will look at both XML and JSON by investigating how to read them, how to interpret them, and how to manipulate them. \n\n###Lesson 6: Caching (3.5 hours)\nIn this lesson, we will explore how to prepare your applications to run at a large scale. So far, we've written 'toy' applications for just one or two users. If we want to start writing apps for thousands or, perhaps, even millions of users, then obviously we'll need to think about scaling. When we talk about scaling, this may mean running your application on multiple machines, storing huge amounts of data, or consuming large amounts of bandwidth. In particular, we will learn about caching, including the uses of caching, why you might want to cache, and specific caching implementations such as Memcached. \n\n###Lesson 7: Scaling Up (2.5 hours)\nIn this last lesson of the course, Steve has prepared a relaxing, story-time segment. You will hear web development anecdotes from people who have been through it all. You will enjoy interviews with engineer Neil Williams from Reddit, and engineer Chris Chew from Udacity. They will share their experiences on working with web applications, and you will see how all that you\u2019ve learned in this course comes into the big picture.\n\n###Final Project (8 hours)\nFor the final project, you will build a fully functional wiki - a website that allows any page to be edited. The wiki you will be able to build by the end of the course will feature the following: \n\n- Easily create new pages of the site by using the wiki edit capabilities. You should be able to enter a non-existent URL, redirect to an edit page, and create a new page from there. \n- Have user accounts so that logged-in users only will have edit privileges. \n- Use caching functionality.\n- Have a history section which displays the different wiki versions that have existed.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/cs253?utm_medium=referral&utm_campaign=api",
      "project_name": "Build Your Own Wiki",
      "full_course_available": true,
      "faq": "### When does the course begin?\n \nThis class is self paced. You can begin whenever you like and then follow your own pace. It\u2019s a good idea to set goals for yourself to make sure you stick with the course.\n\n### How long will the course be available?\n\n This class will always be available! \n\n### How do I know if this course is for me?\n\n Take a look at the \u201cClass Summary,\u201d \u201cWhat Should I Know,\u201d and \u201cWhat Will I Learn\u201d sections above. If you want to know more, just enroll in the course and start exploring.\n\n### Can I skip individual videos? What about entire lessons?\n\n Yes! The point is for you to learn what YOU need (or want) to learn. If you already know something, feel free to skip ahead. If you ever find that you\u2019re confused, you can always go back and watch something that you skipped.\n\n### What are the rules on collaboration?\n\n Collaboration is a great way to learn. You should do it! The key is to use collaboration as a way to enhance learning, not as a way of sharing answers without understanding them. \n\n### Why are there so many questions?\n\n Udacity classes are a little different from traditional courses. We intersperse our video segments with interactive questions. There are many reasons for including these questions: to get you thinking, to check your understanding, for fun, etc... But really, they are there to help you learn. They are NOT there to evaluate your intelligence, so try not to let them stress you out.\n\n### What should I do while I\u2019m watching the videos?\n\n Learn actively! You will retain more of what you learn if you take notes, draw diagrams, make notecards, and actively try to make sense of the material.",
      "affiliates": [],
      "tracks": ["Web Development"],
      "banner_image": "https://lh4.ggpht.com/584I4_QVgpXdMLhWszZFCz3f0z0Vhvc3x4m3eglC0xInNCyMGoszlnPlwIrtRks3-MM5k1_DnSTIjp7ch7A=s0#w=4680&h=968",
      "short_summary": "Starting from the basics of how the web works, you will learn everything you need to know to build your own blog and scale it to support large numbers of users.",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "months",
      "summary": "Try to picture yourself sitting down with your computer, ready to start developing a fully functional web application for the first time, available online for millions to use. \u201cWhere should I even begin? How long is this going to take me? Am I making any mistakes along the way?\u201d The questions may leave you with an uneasy feeling that you will learn many lessons the hard way. \n\nIn this intermediate course, Steve Huffman will teach you everything he wished he knew when he started building <a href=\"http://www.reddit.com/\" target=\"_blank\">Reddit</a> and, more recently, <a href=\"http://www.hipmunk.com/\" target=\"_blank\">Hipmunk</a>, as a lead engineer. Starting from the basics of how the web works, this course will walk you through core web development concepts such as how internet and browsers fit together, form validations, databases, APIs, integrating with other websites, scaling issues, and more; all of which form part of the knowledge it takes to build a web application of your own.",
      "expected_duration": 3
    },
    {
      "instructors": [
        {
          "bio": "Marcus Phillips works as Dean & CTO at Hack Reactor's 12 week immersive coding school, now offered onsite or online. He has worked professionally with the full stack, but is focused on JavaScript and fine-tuning his \"rapid-iteration teaching\" approach to education. Most recently he provided technical editing to the latest edition of Eloquent JS, and also runs training tracks for JSConf and HTML5 DevConf. Prior to co-founding Hack Reactor, Marcus led several technical training initiatives and worked on the JavaScript framework internals at Twitter.",
          "image": "https://lh5.ggpht.com/dXyQPw1_zcyT9Wx-wV8MYQ_hX-H1IsrjnIjXxuX16WauPMJ8PPbJ2xbw_0zkEJTo9WDYyWzxXiGlUwv87ng=s0#w=522&h=522",
          "name": "Marcus Phillips"
        }
      ],
      "subtitle": "Writing Reusable and Maintainable Code",
      "key": "ud015",
      "image": "https://lh3.ggpht.com/RQ6qVahymlxJnOFi2Fn6p6iLNwMQmchGjyJcJuqDUyhNBHkfmrxHYvDhApGA2rptOzmsSA_XZ8V-VV9uEQ=s0#w=1724&h=1067",
      "expected_learning": "As a <a href=\"https://www.udacity.com/course/nd001\">Front-End Web Developer</a>, JavaScript is one of the most important languages in your toolbox. A strong foundation in the language\u2019s features empowers you to write efficient and performant web applications. In this course you\u2019ll explore a variety of ways to write object-oriented code in JavaScript.\n\nYou\u2019ll build a variety of JavaScript objects and explore how their different inheritance models affect your code\u2019s execution and in-memory model. You\u2019ll use these features to write memory efficient code and seek simplicity and modularity in your own code.",
      "featured": false,
      "teaser_video": {"youtube_url": ""},
      "title": "Object-Oriented JavaScript",
      "required_knowledge": "This course is for beginner to intermediate web developers with an understanding of JavaScript syntax. Specifically, you should know how to write control structures, how to write simple functions, and recognize the different variable types in JavaScript. As well as be able to read existing JavaScript code with these features and predict its outcome. If you need a refresher on these prerequisites, check out our <a href=\"https://www.udacity.com/course/ud804\" target=\"_blank\">JavaScript Basics</a> course!",
      "syllabus": "### Lesson 1: Scopes and Closures\nWe\u2019ll start by discussing JavaScript\u2019s functional variable scoping features, including lexical scopes (variable availability as you write your code) and dynamics scopes (variable availability as your code actively runs). We\u2019ll then discuss closures, an often misunderstood but incredibly useful feature available in only a handful of languages, including JavaScript.\n\n### Lesson 2: The Keyword \u201cthis\u201d\nYou\u2019ll start your dive into JavaScript object-oriented features by first discovering the parameter \u201cthis\u201d. You\u2019ll learn how the value of \u201cthis\u201d is determined within various code structures and why it might be a lot easier to think of \u201cthis\u201d as a parameter rather than a keyword.\n\n### Lesson 3: Prototype Delegation\nYou\u2019re probably using one of JavaScript\u2019s inheritance models already: prototype delegation! In this lesson you\u2019ll learn more about this unique feature of JavaScript, how JavaScript uses this feature internally and how you can take advantage of it to maximize your application\u2019s memory footprint.\n\n### Lesson 4: Code Reuse\nThere are numerous ways to write concise, maintainable and reusable code in JavaScript and you\u2019ll practice a number of them in this lesson. We\u2019ll start writing a library using basic functions and learn the decorator pattern. Then, we\u2019ll refactor this library into the functional, prototypal and pseudoclassical inheritance models. Finally, we\u2019ll explore sub-classing -- coding objects that directly inherit from objects we\u2019ve previously defined.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/ud015?utm_medium=referral&utm_campaign=api",
      "project_name": "Classic Arcade Game Clone",
      "full_course_available": true,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh5.ggpht.com/MSwsMHYEHEnF4_3bak3dDEdW8DyY5Q1-jgLUqTFDT4Qp5kFYTQrHTrsHTaDUI1X7q8QLC9a1yyG5JcriFg=s0#w=130&h=60",
          "name": "Hack Reactor"
        }
      ],
      "tracks": ["Web Development"],
      "banner_image": "https://lh4.ggpht.com/QIOjpBdsW61aLEl4KiJXWqaWB0QTNRkIAMNccA95DZoy7-b2aHMOYgBlcKuKHuvyPepy8SfACQ3vSEggB3s=s0#w=4680&h=968",
      "short_summary": "Build a variety of JavaScript objects and explore how their inheritance models affect your app's in-memory model. Gain simplicity and modularity in your own code.",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "weeks",
      "summary": "Have you been dabbling with JavaScript but find your files keep turning into a mess of spaghetti code? Do you find yourself copying and pasting lines of code over and over throughout your application? Surely there\u2019s a better way, right? \n\nYes, there is a better way -- object-oriented programming will allow you to build websites using reusable blocks of code known as libraries, similar to using bricks to build a house. This course is designed to teach web developers how to utilize the various object-oriented programming features within JavaScript, and more importantly, how to write reusable and maintainable libraries that will make your life easier.",
      "expected_duration": 5
    },
    {
      "instructors": [
        {
          "bio": "James Williams first fell in love with teaching while working as an instructor at a computer camp. He runs obstacle course/adventure races in his spare time and is the author of HTML5 Game Programming, which has been translated into Chinese and Korean. He holds degrees in Computer Science (BA, MS) and French (BA).",
          "image": "https://lh3.ggpht.com/XG9jWlrbNqQXp9OJjfasItFVPEVTXV0AMYOsNcydhnLHJw3CKByD4kqHOiJJIv4hBDodwry36kEKkWVkbqg=s0#w=442&h=442",
          "name": "James Williams"
        },
        {
          "bio": "A passionate educator and programmer, Cameron lives and breathes web development as he creates programming courses at Udacity. Before coming here, Cameron was a combination Director of Content and web developer at Seattle startup LearnBIG. He taught four years of high school physics and chemistry in Nashville, TN, during which time he pioneered teaching physics with the video game <em>Portal 2</em>. Cameron graduated with a degree in physics and astronomy from Vanderbilt University and earned his master's in teaching from Belmont University.",
          "image": "https://lh6.ggpht.com/k08baq8ESoDPzyVh0dfvmEqYMawGbd-gJU0_TA0M1EDptu1PNgq1Uss7eXVV8bvLzJhfZArvql-bBJYeB_zb=s0#w=200&h=200",
          "name": "Cameron Pittman"
        }
      ],
      "subtitle": "From Pixels to Animation!",
      "key": "ud292",
      "image": "https://lh4.ggpht.com/eypKKAxmyK2LpMKULiQy76aAkS5M5-da0k9eUNP2HeK4bk7_ZgjAV65pAwSu-hjWM-sSwdUJkNeZAG8Wx8o=s0#w=1724&h=1060",
      "expected_learning": "You should take this course if you want to move beyond static HTML tag content and build on your JavaScript skills to make interactive and engaging experiences. Maybe you want to start on the journey of creating a game or complex animations, maybe you want to create visually compelling compositions like infographs, or maybe you just want to make memes. Canvas to the rescue.\n\n*This is a recommended course for the <a href=\"https://www.udacity.com/course/nd001\">Front-End Web Developer</a> nanodegree, and will help you complete the Frogger project.*",
      "featured": false,
      "teaser_video": {"youtube_url": ""},
      "title": "HTML5 Canvas",
      "required_knowledge": "To succeed in this course, we expect you to have some HTML and JavaScript experience. You should at minimum understand loops, functions, and conditional statements(if/else). \n\nUdacity\u2019s [JavaScript Basics course](https://www.udacity.com/course/ud804) and [HTML/CSS course](https://www.udacity.com/course/ud304) are good preparation for this course.",
      "syllabus": "You\u2019ll learn how the Canvas 2D API works and how to use it to create interesting applications. Each sample project will expose you to different aspects of HTML5 Canvas that you can use to make your own applications.\n\n### Lesson 1: HTML5 Canvas Basics\n\nIn this lesson, we\u2019ll discuss what the Canvas is, how it affects graphics in the browser and what makes it truly awesome. We\u2019ll make compositions with text and images (e.g. memes) as we learn the API.\n\n### Lesson 2: From Pixels to Animation\n\nIn this lesson, we\u2019ll learn about how images are stored by the Canvas2D context, how to modify them on a pixel level by applying various effects and filters, and how to create animations.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/ud292?utm_medium=referral&utm_campaign=api",
      "project_name": "",
      "full_course_available": false,
      "faq": "",
      "affiliates": [],
      "tracks": ["Web Development"],
      "banner_image": "https://lh6.ggpht.com/I-TN7O_c6sPrp1USRyDMPcBohqlguELOAxhLJXt9QB94IJxaxiPK0x9E7mpgidNSmQS7PeD8b7ZawUc7PJ4p=s0#w=4680&h=968",
      "short_summary": "Learn how you can use HTML5 Canvas to create and modify images or even interactive animations.",
      "starter": false,
      "level": "beginner",
      "expected_duration_unit": "weeks",
      "summary": "Canvas is an HTML5 element which gives you drawable surface inside your web pages you can control with JavaScript. Powerful enough to use for compositing images and even creating games.\n\nIn this course, through several sample projects, you\u2019ll learn how to use the canvas; how to make compositions using shapes, images, and text; how to create effects and filters on images and how to create animations.",
      "expected_duration": 2
    },
    {
      "instructors": [
        {
          "bio": "A passionate educator and programmer, Cameron lives and breathes web development as he creates programming courses at Udacity. Before coming here, Cameron was a combination Director of Content and web developer at Seattle startup LearnBIG. He taught four years of high school physics and chemistry in Nashville, TN, during which time he pioneered teaching physics with the video game <em>Portal 2</em>. Cameron graduated with a degree in physics and astronomy from Vanderbilt University and earned his master's in teaching from Belmont University.",
          "image": "https://lh6.ggpht.com/k08baq8ESoDPzyVh0dfvmEqYMawGbd-gJU0_TA0M1EDptu1PNgq1Uss7eXVV8bvLzJhfZArvql-bBJYeB_zb=s0#w=200&h=200",
          "name": "Cameron Pittman"
        }
      ],
      "subtitle": "Manipulating Websites with Ease",
      "key": "ud245",
      "image": "https://lh3.ggpht.com/lB5iRpDRGX9DbDvxXD1yyJO_ogqX2_XX1zgeAV9tOovVPc6VLgTb77YglQ_CkILg7KQGoFGys04UYOk-C3Pf=s0#w=1753&h=1078",
      "expected_learning": "Due to jQuery\u2019s popularity and ease of use, learning jQuery is a must for all front-end web developers. jQuery makes selecting DOM elements and manipulating them simple by providing a consistent API that works across all browsers.\n\nProficiency in using jQuery is an important skill that can speed up your development time and opens up a world of useful plugins.",
      "featured": false,
      "teaser_video": {"youtube_url": ""},
      "title": "Intro to jQuery",
      "required_knowledge": "To succeed in this course, we expect you to have some HTML and JavaScript experience. You should at minimum understand loops, functions, and conditional statements (if/else). \n\nUdacity\u2019s [JavaScript Basics course](https://www.udacity.com/course/ud804) and [HTML/CSS course](https://www.udacity.com/course/ud304) are good preparation for this course.",
      "syllabus": "In this course, you will learn how to use jQuery to select and navigate to DOM elements within your page, how to manipulate DOM elements by altering attributes, how to dynamically change content and how to add/remove DOM elements.\n\nMost importantly, you'll practice making sense of jQuery's documentation so that you'll be able to go beyond what you learn here and take advantage of jQuery's full suite of features!\n\n### Lesson 1: the DOM, $ and Selectors\n\n* The jQuery Object ($)\n* Basic DOM Structure\n* Selectors\n* Filters\n\n### Lesson 2: DOM Manipulation\n\n* Reading jQuery Documentation\n* Accessing HTML Attributes and Content\n* Modifying HTML Attributes and Content\n* Adding and Removing DOM Elements\n* Iterating with .each()\n* Using jQuery to run on DOM ready",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/ud245?utm_medium=referral&utm_campaign=api",
      "project_name": "",
      "full_course_available": false,
      "faq": "",
      "affiliates": [],
      "tracks": ["Web Development"],
      "banner_image": "https://lh3.ggpht.com/WEFejImzckqQTV8y6O9CRlpaA0EJZ4XO3NzcZRLeO8EumzobN63TRDI0IojjugodhS3HdsROf5y0bVQTqTm8=s0#w=4680&h=968",
      "short_summary": "Learn how to access and modify the DOM with ease using jQuery!",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "days",
      "summary": "jQuery is the most popular JavaScript library today, in use by over 60% of the top 100,000 most visited websites. This course will teach you how to use jQuery\u2019s core features - DOM element selections, traversal and manipulation.\n\nYou'll also learn how to read and make sense of jQuery's documentation, making it easy for you to go beyond the methods taught in this class and take advantage of jQuery's full array of features!\n\nThis course is also a part of our <a href=\"https://www.udacity.com/course/nd001\">Front-End Web Developer</a> Nanodegree.",
      "expected_duration": 2
    },
    {
      "instructors": [
        {
          "bio": "A passionate educator and programmer, Cameron lives and breathes web development as he creates programming courses at Udacity. Before coming here, Cameron was a combination Director of Content and web developer at Seattle startup LearnBIG. He taught four years of high school physics and chemistry in Nashville, TN, during which time he pioneered teaching physics with the video game <em>Portal 2</em>. Cameron graduated with a degree in physics and astronomy from Vanderbilt University and earned his master's in teaching from Belmont University.",
          "image": "https://lh6.ggpht.com/k08baq8ESoDPzyVh0dfvmEqYMawGbd-gJU0_TA0M1EDptu1PNgq1Uss7eXVV8bvLzJhfZArvql-bBJYeB_zb=s0#w=200&h=200",
          "name": "Cameron Pittman"
        }
      ],
      "subtitle": "Making Asynchronous Requests with jQuery",
      "key": "ud110",
      "image": "https://lh3.ggpht.com/VM0Wo-7nMo9PvvjHoUW1Wzey41PSKlVafZUt6-n9bnZAsyhT0J1eCvBFViRDCUoolBQTHAAaJs2E_A-mod8=s0#w=1724&h=1060",
      "expected_learning": "User experience is vital to the success of your website or web app. It\u2019s important that the user\u2019s experience be smooth and free of jank, yet the application will have to do things that take take a long time to complete. AJAX allows app developers to interact with server-side APIs without pausing script execution or forcing the page to reload.\n\nPlus, learning how to query data APIs will open you to a tremendous amount of free data that\u2019s freely accessible. Want to build a flight tracking app? How about a photo gallery with image search? Or what about a tweet viewer? Just find an API that provides the data you need, read the documentation and sample code, and query away!\n\nIf you want to build solid and fast web applications, knowing how to query servers using AJAX is a must.",
      "featured": false,
      "teaser_video": {"youtube_url": ""},
      "title": "Intro to AJAX",
      "required_knowledge": "* Intermediate proficiency with JavaScript (equivalent to having finished JavaScript Basics).\n* Familiarity with HTML/CSS.",
      "syllabus": "###Inspiration\n\n* What is AJAX?\n* Why use an API?\n* How can you identify AJAX requests in existing websites?\n\n###Perspiration\n\n* Clone the Move Planner repository\n* Implement the Google Streetview API\n* Implement the NY Times API\n* Error handling normal AJAX requests\n* Implement the Wikipedia API\n* Error handling JSON-P requests\n\n###Meditation\n\n* What did you learn?\n* How else can you apply AJAX to make speedy page loads?\n* Go customize!",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/ud110?utm_medium=referral&utm_campaign=api",
      "project_name": "",
      "full_course_available": false,
      "faq": "",
      "affiliates": [],
      "tracks": ["Web Development"],
      "banner_image": "https://lh3.ggpht.com/Lc3FZ8DcGgnxDDdTuIajlUZHk01EOePRk1TD8zMt_Lx5-jO5cbr3QAUwmB6u7yodn66IKqtJoI8Ln5QMwqs=s0#w=4680&h=968",
      "short_summary": "Learn how to perform asynchronous requests as you build a web app with data from Google Street View, the New York Times and Wikipedia!",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "weeks",
      "summary": "In this course you will learn how to make asynchronous requests with JavaScript (using jQuery\u2019s AJAX functionality), and gain a better understanding of what\u2019s actually happening when you do so. You will also learn how to use data APIs so you can take advantage of freely accessible data in your applications, including photo results, news articles and up-to-date data about the world around us.\n\nAs part of the course, you\u2019ll be building a web app that will help people learn about a place where they want to move! Your app will query the Google Streetview, Wikipedia and New York Times APIs!\n\nThis course is also a part of our <a href=\"https://www.udacity.com/course/nd001\">Front-End Web Developer</a> Nanodegree.",
      "expected_duration": 2
    },
    {
      "instructors": [
        {
          "bio": "Peter Norvig is Director of Research at Google Inc. He is also a Fellow of the American Association for Artificial Intelligence and the Association for Computing Machinery. Norvig is co-author of the popular textbook Artificial Intelligence: A Modern Approach. Prior to joining Google he was the head of the Computation Sciences Division at NASA Ames Research Center.",
          "image": "https://lh3.ggpht.com/Zvo2V0Xfae4jg2m3kMd221NocS56nliQwvXD38f9RredHSaS7QcoaOXL4wDQIcYeI32ISsIPZwur2JY_=s0#w=266&h=266",
          "name": "Peter Norvig"
        },
        {
          "bio": "Sebastian Thrun is a Research Professor of Computer Science at Stanford University, a Google Fellow, a member of the National Academy of Engineering and the German Academy of Sciences. Thrun is best known for his research in robotics and machine learning, specifically his work with self-driving cars.",
          "image": "https://lh4.ggpht.com/DG-7wffxjR7WqOHdXavbgsNlJ7ZKL2nuhY7hDiSijK7xISk3mCTgdM-9_JUGRjI-qfTk1iJCL5axjZEZDQ=s0#w=200&h=200",
          "name": "Sebastian Thrun"
        }
      ],
      "subtitle": "Learn the Fundamentals of AI",
      "key": "cs271",
      "image": "https://lh3.ggpht.com/DlphLMafw8ni4x7O98V2LyrnKDxsFJpEuuC-kuLyGbYHLYmdwnpu490a8isnp6j_vh-Y_sKCX8N_NUi1wM8=s0#w=436&h=268",
      "expected_learning": "Artificial Intelligence (AI) technology is increasingly prevalent in our everyday lives. It has uses in a variety of industries from gaming, journalism/media, to finance, as well as in the state-of-the-art research fields from robotics, medical diagnosis, and quantum science. In this course you\u2019ll learn the basics and applications of AI, including: machine learning, probabilistic reasoning, robotics, computer vision, and natural language processing.",
      "featured": false,
      "teaser_video": {"youtube_url": "https://www.youtube.com/watch?v=VfnXzwduq6U"},
      "title": "Intro to Artificial Intelligence",
      "required_knowledge": "Some of the topics in Introduction to Artificial Intelligence will build on probability theory and linear algebra. You should have understanding of probability theory comparable to that covered in our <a href=\"https://www.udacity.com/course/st101\">Intro to Statistics</a> course.",
      "syllabus": "### Part I: Fundamentals of AI  \n- Overview of AI\n- Statistics, Uncertainty, and Bayes networks\n- Machine Learning\n- Logic and Planning\n- Markov Decision Processes and Reinforcement Learning\n- Hidden Markov Models and Filters\n- Adversarial and Advanced Planning\n\n### Part II: Applications of AI  \n- Image Processing and Computer Vision\n- Robotics and robot motion planning\n- Natural Language Processing and Information Retrieval",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/cs271?utm_medium=referral&utm_campaign=api",
      "project_name": "",
      "full_course_available": true,
      "faq": "### When does the course begin?\n \nThis class is self paced. You can begin whenever you like and then follow your own pace. It\u2019s a good idea to set goals for yourself to make sure you stick with the course.\n\n### How long will the course be available?\n\n This class will always be available! \n\n### How do I know if this course is for me?\n\n Take a look at the \u201cClass Summary,\u201d \u201cWhat Should I Know,\u201d and \u201cWhat Will I Learn\u201d sections above. If you want to know more, just enroll in the course and start exploring.\n\n### Can I skip individual videos? What about entire lessons?\n\n Yes! The point is for you to learn what YOU need (or want) to learn. If you already know something, feel free to skip ahead. If you ever find that you\u2019re confused, you can always go back and watch something that you skipped.\n\n### How much does this cost?\n\n It\u2019s completely free! If you\u2019re feeling generous, we would love to have you contribute your thoughts, questions, and answers to the course discussion forum.\n\n### What are the rules on collaboration?\n\n Collaboration is a great way to learn. You should do it! The key is to use collaboration as a way to enhance learning, not as a way of sharing answers without understanding them. \n\n### Why are there so many questions?\n\n Udacity classes are a little different from traditional courses. We intersperse our video segments with interactive questions. There are many reasons for including these questions: to get you thinking, to check your understanding, for fun, etc... But really, they are there to help you learn. They are NOT there to evaluate your intelligence, so try not to let them stress you out.\n\n### What should I do while I\u2019m watching the videos?\n\n Learn actively! You will retain more of what you learn if you take notes, draw diagrams, make notecards, and actively try to make sense of the material.",
      "affiliates": [],
      "tracks": ["Software Engineering"],
      "banner_image": "https://lh4.ggpht.com/4LdIV9ZQk3F0DfxNa1pBqEH4gKlIk0mhVr_sIZ0XsQOOWcVDb75lKIiNsUrMPcztUitqStBimMkw4-T8Qr8=s0#w=4680&h=968",
      "short_summary": "This course will introduce you to the basics of AI. Topics include machine learning, probabilistic reasoning, robotics, computer vision, and natural language processing.",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "months",
      "summary": "Artificial Intelligence (AI) is a field that has a long history but is still constantly and actively growing and changing. In this course, you\u2019ll learn the basics of modern AI as well as some of the representative applications of AI. Along the way, we also hope to excite you about the numerous applications and huge possibilities in the field of AI, which continues to expand human capability beyond our imagination.",
      "expected_duration": 4
    },
    {
      "instructors": [
        {
          "bio": "Steve Blank is a seasoned Silicon Valley entrepreneur. Translation: he has failed and--more often--succeeded, in a 21-year career building 8 Valley startups, including several with major IPO's. Along the way, he's learned an incredible amount, and has spent the last decade sharing what he's learned with entrepreneurs all over the world. Author of two famous books on entrepreneurship, <a href=\"http://www.amazon.com/The-Four-Steps-Epiphany-Successful/dp/0976470705/\" target=\"_blank\">The Four Steps to the Epiphany</a>, and <a href=\"http://www.amazon.com/gp/product/0984999302/ref=as_li_tf_tl?ie=UTF8&amp;tag=wwwsteveblank-20&amp;linkCode=as2&amp;camp=1789&amp;creative=9325&amp;creativeASIN=0984999302\" target=\"_blank\">The Startup Owner's Manual</a>. Steve teaches entrepreneurship at Udacity, Stanford, Berkeley, Columbia, and other major universities worldwide. He was named \"Master of Innovation\" by <a href=\"http://hbr.org/web/slideshows/the-masters-of-innovation/1-blank\" target=\"_blank\">Harvard Business Review</a> and is an advisor to many successful entrepreneurs. He is also an avid conservationist, contributing generously to preserve the California Coast.",
          "image": "https://lh6.ggpht.com/K3SEbPH9Bpwh2sN0022G6L65MkEUDc2ByJ13mzmgZSLRr6lnm3Y50FeIY-hZwBcykLkdvv822LWO54IMxo8=s0#w=166&h=166",
          "name": "Steve Blank"
        }
      ],
      "subtitle": "The Lean LaunchPad",
      "key": "ep245",
      "image": "https://lh6.ggpht.com/l0tJ09Lye8eNFttGQ7uvMGV-x0qxJk9xgs6e-MNRxnJeaCBxVqbYLIKmR13dk6hVdO8S5VYcmswfkBQR65s=s0#w=436&h=268",
      "expected_learning": "You will learn the business skills it takes to bring your idea from conception to market. These include:\n\n- Actively listening and engaging your customers to find out what exactly they want in your product and how you should deliver it to them\n\n- Gathering, evaluating and using customer feedback to make your product, marketing, and business model stronger\n\n- Engaging your customers through the three phases of the customer relationship management lifecycle: get, keep, and grow \n\n- Identifying key resources, partners, activities, and distribution channels required to deliver your product to your customer\n\n- Calculating your direct and indirect costs for delivering your product",
      "featured": false,
      "teaser_video": {"youtube_url": "https://www.youtube.com/watch?v=VZvgj6B2JZs"},
      "title": "How to Build a Startup",
      "required_knowledge": "This class involves no programming. The characteristics of a budding entrepreneur: passion, tenacity, and a willingness to work hard, are essential. \n\nWe also recommend you join the class with at least a rough idea of a business model for a startup you would like to work on throughout this class.",
      "syllabus": "### Lesson 1: What We Now Know\n\n- History of the Corporation\n- Startups Are Not Smaller Versions of Large Companies\n- Waterfall Development\n- Customer vs. Product Development\n- Entrepreneurial Education\n\n### Lessons 1.5A and 1.5B: Business Models and Customer Development\n\n- Value Proposition \n- Customer Segments\n- Revenue Streams\n- Key Resources\n- Customer Development Processes \n- Minimum Viable Product\n- Market Opportunity Analysis\n\n\n### Lesson 2: Value Proposition\n\n- Value Proposition and the Minimum Viable Product\n- Customer Archetype \n- MVP Physical && Web/Mobile\n- Common Mistakes With Value Proposition\n\n### Lesson 3: Customer Segments\n\n- Product Market Fit\n- Rank and Day in the Life\n- Multiple Customer Segments\n- Market Types Introduction: Existing, Resegmented, New, Clone \n- Consequences of Not Understanding a Market\n\n### Lesson 4: Channels\n\n- Distribution Channels Overview\n- Web Distribution \n- Physical Distribution\n- Direct Channel Fit\n- Indirect Channel Economics\n- OEM Channel Economics\n\n### Lesson 5: Customer Relationships\n\n- Paid Demand Creation\n- Earned Demand Creation\n- Get Physical\n- Viral Loop\n- Web Customer Acquisition Costs\n\n### Lesson 6: Revenue Models\n\n- How Do You Make Money\n- Revenue Streams and Price\n- Direct and Ancillary Models\n- Common Startup Mistakes\n- Market Types and Pricing\n- Single and Multiple Side Markets\n- Revenue First Companies\n- Market Size and Share\n\n### Lesson 7: Partners\n\n- Partner Definition\n- Partner Resources\n- Partner Types\n- Greatest Strategic Alliance\n- Joint Business Development\n\n### Lesson 8: Resources, Activities and Costs\n\n- Four Critical Resources\n- Financial Resources\n- Human Resources\n- Qualified Employees and Culture\n- Intellectual Property Overview",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/ep245?utm_medium=referral&utm_campaign=api",
      "project_name": "Business Model Canvas",
      "full_course_available": true,
      "faq": "### When does the course begin?\n \nThis class is self paced. You can begin whenever you like and then follow your own pace. It\u2019s a good idea to set goals for yourself to make sure you stick with the course.\n\n### How long will the course be available?\n\n This class will always be available! \n\n### How do I know if this course is for me?\n\n Take a look at the \u201cClass Summary,\u201d \u201cWhat Should I Know,\u201d and \u201cWhat Will I Learn\u201d sections above. If you want to know more, just enroll in the course and start exploring.\n\n### Can I skip individual videos? What about entire lessons?\n\n Yes! The point is for you to learn what YOU need (or want) to learn. If you already know something, feel free to skip ahead. If you ever find that you\u2019re confused, you can always go back and watch something that you skipped.\n\n### What are the rules on collaboration?\n\n Collaboration is a great way to learn. You should do it! The key is to use collaboration as a way to enhance learning, not as a way of sharing answers without understanding them. \n\n### Why are there so many questions?\n\n Udacity classes are a little different from traditional courses. We intersperse our video segments with interactive questions. There are many reasons for including these questions: to get you thinking, to check your understanding, for fun, etc... But really, they are there to help you learn. They are NOT there to evaluate your intelligence, so try not to let them stress you out.\n\n### What should I do while I\u2019m watching the videos?\n\n Learn actively! You will retain more of what you learn if you take notes, draw diagrams, make notecards, and actively try to make sense of the material.",
      "affiliates": [],
      "tracks": ["Non-Tech Classes"],
      "banner_image": "https://lh5.ggpht.com/yBfepukFU1WHN7ThTcRDeF1mh5kCZztJXbMiKWDl-UswsK907gPuls-WTB4QDksQ2D_kLuLzHQ6flmH_1A=s0#w=4680&h=968",
      "short_summary": "Learn what it takes to build a successful startup using the Customer Development process, where entrepreneurs \"get out of the building\" to gather and iterate on feedback.",
      "starter": true,
      "level": "intermediate",
      "expected_duration_unit": "months",
      "summary": "In an introduction to the basics of the famous Customer Development Process, Steve Blank provides insight into the key steps needed to build a successful startup. \n\nThe main idea in this course is learning how to rapidly develop and test ideas by gathering massive amounts of customer and marketplace feedback. Many startups fail by not validating their ideas early on with real-life customers. In order to mitigate that, students will learn how to get out of the building and search for the real pain points and unmet needs of customers. Only with these can the entrepreneur find a proper solution and establish a suitable business model.\n\nBuilding a startup is not simply building an execution plan for a business model that the entrepreneur thinks will work, but rather, a search for the actual business model itself.",
      "expected_duration": 1
    },
    {
      "instructors": [
        {
          "bio": "<a href=\"http://www.deaneckles.com/\" target=\"_blank\">Dean Eckles</a> is a social scientist, statistician, and member of the Data Science team at Facebook. His primary focus is how interactive technologies affect human behavior by mediating, amplifying, and directing social influence \u2014 and the statistical methods to study these processes. Dean holds degrees from Stanford University in philosophy (BA), cognitive science (BS, MS), and statistics (MS), and communication (PhD).",
          "image": "https://lh4.ggpht.com/DFxWJGS9KNZa_rUAGZSty9eMc5B04VSWopqMozU3jFIdpg4iesxiuOClln9aJgtiOM--nrzT8A1mMyttKA=s0#w=403&h=403",
          "name": "Dean Eckles"
        },
        {
          "bio": "Moira Burke is a Data Scientist at Facebook, where she combines her social psychology and data munging chops to understand how people perceive their audience online and how various uses of the site improve psychological well-being. She received her Ph.D. in Human-Computer Interaction from Carnegie Mellon University, and a B.A. in Computer Science from the University of Oregon. When not coaxing data into pretty plots, she sings a cappella. Badly.",
          "image": "https://lh4.ggpht.com/3pyQrNZ4SQNCVqFtx9zHMOP8bJE6-KkgFg8rluxdDcCACLbQRn3ulm5xq-qar_PzCeRcWnMYIu8u14wC1dM=s0#w=2751&h=2721",
          "name": "Moira Burke"
        },
        {
          "bio": "After graduating from Emory in 2008, Chris dabbled in college admissions for a year, which led him to teach high school mathematics in Oakland. He radiates a love for learning and believes everyone deserves a great education. In 2012, Chris joined Udacity to reach thousands of students and share his joy of problem solving with the world.",
          "image": "https://lh5.ggpht.com/3FcHpj6lxOjg0wm-u8mbnLWSSHUq5aXd8wJtSP9CBCd5MM7X6DMcVYVdJMtuFCoZGuEJnUQSlkd8aNBY8Q4b=s0#w=2000&h=2000",
          "name": "Chris Saden"
        },
        {
          "bio": "<a href=\"http://solomonmessing.wordpress.com/\" target=\"_blank\">Solomon Messing</a> is a political scientist with Facebook's Data Science Team.  His research and teaching focus on political advertising and campaigns, social influence, and design and analysis of experiments.  His work has appeared in the American Political Science Review, Public Opinion Quarterly, and Communication Research.  Solomon completed his Ph.D. in political communication and M.S. in Statistics at Stanford.",
          "image": "https://lh5.ggpht.com/Ll25JZLdAZ2wYwU5Z6Hyz8s3YeWQJvz_GYgM4tASMInR6-FlPgv9c5R8a8d5N4Ruw9bZzTOGonw1pHBAWg=s0#w=2658&h=2658",
          "name": "Solomon Messing"
        }
      ],
      "subtitle": "Visually Analyze and Summarize Data Sets",
      "key": "ud651",
      "image": "https://lh3.ggpht.com/lmdonpHvisppe4bgIF9a5UaEcM_78F0s6egR2hmVw5HnQGLuornNJCfpsNhBuGVokCpfn0WasYsqytT52elY=s0#w=1725&h=1060",
      "expected_learning": "You will...\n\n*   Understand data analysis via EDA as a journey and a way to explore data\n*   Explore data at multiple levels using appropriate visualizations\n*   Acquire statistical knowledge for summarizing data\n*   Demonstrate curiosity and skepticism when performing data analysis\n*   Develop intuition around a data set and understand how the data was generated.",
      "featured": false,
      "teaser_video": {"youtube_url": ""},
      "title": "Data Analysis with R",
      "required_knowledge": "A background in statistics is helpful but not required. Consider taking [Intro to Descriptive Statistics](https://www.udacity.com/course/ud827) and [Intro to Inferential Statistics](https://www.udacity.com/course/ud201) prior to taking this course. Relevant topics include:  \n\n*   Mean, median, mode\n*   Normal, uniform, and skewed distributions\n*   Histograms and box plots\n\n<br />\nFamiliarity with the following CS and Math topics will help students:  \n\n*   Variable assignment\n*   Comparison and logical operators ( <, >, <=, >=, ==, &, | )\n*   If else statements\n*   Square roots, logarithms, and exponentials",
      "syllabus": "### Lesson 1: What is EDA? (1 hour)\nWe'll start by learn about what exploratory data analysis (EDA) is and why it is important. You'll meet the amazing instructors for the course and find out about the course structure and final project.\n\n### Lesson 2: R Basics (3 hours)\nEDA, which comes before formal hypothesis testing and modeling, makes use of visual methods to analyze and summarize data sets. R will be our tool for generating those visuals and conducting analyses. In this lesson, we will install RStudio and packages, learn the layout and basic commands of R, practice writing basic R scripts, and inspect data sets.\n\n### Lesson 3: Explore One Variable (4 hours)\nWe perform EDA to understand the distribution of a variable and to check for anomalies and outliers. Learn how to quantify and visualize individual variables within a data set as we begin to make sense of a pseudo-data set of Facebook users. While the data set does not contain real user data, it does contain a wealth of information. Through the lesson, we will create histograms and boxplots, transform variables, and examine tradeoffs in visualizations.\n\n### Problem Set 3 (2 hours)\n\n### Lesson 4: Explore Two Variables (4 hours)\nEDA allows us to identify the most important variables and relationships within a data set before building predictive models. In this lesson, we will learn techniques for exploring the relationship between any two variables in a data set. We'll create scatter plots, calculate correlations, and investigate conditional means.\n\n### Problem Set 4 (2 hours)\n\n### Lesson 5: Explore Many Variables (4 hours)\nData sets can be complex. In this lesson, we will learn powerful methods and visualizations for examining relationships among multiple variables. We'll learn how to reshape data frames and how to use aesthetics like color and shape to uncover more information. Extending our knowledge of previous plots, we'll continue to build intuition around the Facebook data set and explore some new data sets as well.\n\n### Problem Set 5 (2 hours)\n\n### Lesson 6: Diamonds and Price Predictions (2 hours)\nInvestigate the diamonds data set alongside Facebook Data Scientist, Solomon Messing. He'll recap many of the strategies covered in the course and show how predictive modeling can allow us to determine a good price for a diamond. As a final project, you will create your own exploratory data analysis on a data set of your choice.\n\n### Final Project (10+ hours)\nYou've explored simulated Facebook user data and the diamonds data set. Now, it's your turn to conduct your own exploratory data analysis. Choose one data set to explore (one provided by Udacity or your own) and create a RMD file that uncovers the patterns, anomalies and relationships of the data set.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/ud651?utm_medium=referral&utm_campaign=api",
      "project_name": "Explore a Data Set",
      "full_course_available": true,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh5.ggpht.com/fBUnCweTMmEe0VId4I2F6QW0FS_kA4dXi0BOYim7ZpRBy-9YhxDEFy9ue3eHht3EpLSRjIrWXMyG_hjwig=s0#w=130&h=60",
          "name": "Facebook"
        }
      ],
      "tracks": ["Data Science"],
      "banner_image": "https://lh6.ggpht.com/ZxfMGgj7Xy2O_rEiPTuynKoobC01ZiVEDYyz3QnRblsG7IQhtKakV1h2olgRWcXSw03pF0ofRSOljLgzHIw=s0#w=1170&h=242",
      "short_summary": "Data is everywhere and so much of it is unexplored. Learn how to investigate and summarize data sets using R and eventually create your own analysis.",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "months",
      "summary": "Exploratory data analysis is an approach for summarizing and visualizing the important characteristics of a data set. Promoted by [John Tukey](http://en.wikipedia.org/wiki/John_Tukey), exploratory data analysis focuses on exploring data to understand the data\u2019s underlying structure and variables, to develop intuition about the data set, to consider how that data set came into existence, and to decide how it can be investigated with more formal statistical methods.\n\nIf you're interested in supplemental reading material for the course check out the <a href=\"http://www.amazon.com/gp/product/0201076160/ref=as_li_ss_il?ie=UTF8&camp=1789&creative=390957&creativeASIN=0201076160&linkCode=as2&tag=udacity-20\">Exploratory Data Analysis</a> book. (Not Required)\n\nThis course is also a part of our <a href=\"https://www.udacity.com/course/nd002\">Data Analyst</a> Nanodegree.",
      "expected_duration": 2
    },
    {
      "instructors": [
        {
          "bio": "Nazmul Idris is a Developer Advocate at Google. He is a developer and designer focused on creating awesome user experiences powered by Android and Cloud technologies. He created the UXD for Developers show on the Android Developers Channel on YouTube, and started the UXD for Developers G+ community. In addition to UX design and engineering, he's passionate about mobile and cloud computing, startups, and innovation.",
          "image": "https://lh5.ggpht.com/hqp4TmDfgqq_VgDiT-Nn280-Vmh3HDPCnJT_Y1LWS03N_hbRH0M2RR1FMmWIMYlNfI5i3WHSkFLiEUaKzyQ=s0#w=320&h=320",
          "name": "Nazmul Idris"
        },
        {
          "bio": "Izabel Grey is an Android Interaction Designer and Prototyper at Udacity. Previously, she cofounded a mobile startup, serving as the Chief Experience Officer. Izabel is dedicated to improving UX Design of mobile apps through education, advocacy, meetups and workshops. When she's not busy designing the next generation of mobile software, you can find her doing Ashtanga yoga or driving at the racetrack.",
          "image": "https://lh4.ggpht.com/2LmWowmKf7KnSlEaen4ljaK5vqJG6TGCAyErfWr2L388W1GSRcnggChUAoRBj1w0KbwxYhkZ_lFSnasn2w1Y=s0#w=170&h=170",
          "name": "Izabel Grey"
        }
      ],
      "subtitle": "Learn to Design a 5-Star Android App",
      "key": "ud849",
      "image": "https://lh5.ggpht.com/fR7g83r7aV4yXKeSbFMfnB3IkurvAJMtSK7vm4wAXi5GjyXajsUGODT-g4wN048Ao1eCeeVR__ar1sQcQw4e=s0#w=1725&h=1060",
      "expected_learning": "UX (User Experience) is a big deal. Though the term is often confused with User Interface, UI is only only a tiny subset of UX (we\u2019ll talk about the difference in Lesson 1).\n\nYou should take this course because well-designed apps are just as important as well-built apps.\n\nThe goal of this course is to help you understand the most important and immediately useful techniques and approaches used by great mobile UX designers. This course won\u2019t turn you into a designer, but it will help you incorporate design elements into the products you build.",
      "featured": false,
      "teaser_video": {"youtube_url": "https://www.youtube.com/watch?v=9gyvr2VET8M"},
      "title": "UX Design for Mobile Developers",
      "required_knowledge": "This course is optimized for the developer who is looking to efficiently learn the most important design techniques that will help them make better apps (with a focus on mobile/Android).\n\nThat said, programming experience is not required to benefit from the design principles and best practices we teach in this course.",
      "syllabus": "### Overview\nThe goal of this course is to help you build better apps by helping you become a design-minded developer. In Lessons 1 and 2, you will learn widely applicable design principles and techniques like high-level UX planning and user-centered design.\n\nIn Lessons 3 and 4, you will focus on design ideas specific to mobile/Android development. Mobile platforms all come with a unique set of constraints and opportunities and this lesson will help you respect those constraints while taking advantage of the opportunities. \n\n### Lessons\n\n#### Lesson 1: What is User Experience?\nIn this lesson you will think about User Experience from the highest level. You will break down complex apps into a small number of simple steps and think about their big picture flow (including ones that you have worked on in the past or are currently working on). \n\n*Topics covered:*\n\n* What is UX?\n* UI vs. UX\n* High-level planning\n* Low-fi wireframing and prototyping\n* Two concrete app improvements to implement now\n\n#### Lesson 2: User-Centered Design\nIn this lesson you will learn how to design apps that your users will love. You will learn the importance of user-centered design, what happens when you design for everyone/no one (spoiler alert: it\u2019s generally bad), and how to effectively use tools like personas and use cases to ensure a baseline level of quality for anything you build. You will also learn a bit about how to use cheap and easy user research techniques to make well-informed design decisions. \n\n*Topics covered:*\n\n* The perils of ignoring your user\n* How to create effective personas and use cases\n* Low cost user research\n* How to use personas and use cases to inform feature lists\n\n#### Lesson 3: Designing for Mobile Constraints\n\nMobile design and development come with constraints and opportunities. This lesson is about the constraints. You will learn what constraints are inherent to mobile development and how to use design tools and techniques to ensure your app actually respects those constraints. \n\n*Topics covered:*\n\n* The 5 big constraints: limited data, finite battery, hand-held usage, divided user attention, and small screens.\n* The implications of these constraints and what happens when you get them wrong.\n* Advanced wireframing\n\n#### Lesson 4: Designing for Android Delight\n\nAt this point, you will already know how to make a solid mobile app that users like. But like isn\u2019t enough! In order to be really successful, your app needs to be *loved*. In this lesson, you\u2019ll learn how to leverage the power of Android by using device sensors and Google APIs to understand your user\u2019s context.\n\n*Topics covered:*\n\n* Android sensors\n* The importance of contextual apps\n* The \u201ccomponents\u201d of context\n* Android APIs (Google Play Services)\n\n### Final Project\nIn your final project, you will create high/mid-level design specifications for your own incredible Android app. You'll begin work on this project in the Assignments for Lesson 2, and continue working on it until the end of the course. \n\nWhen it's finished, you will have the blueprint for an app that will:\n\n* Be designed for a specific target user.\n* Have an almost-perfect high level flow.\n* Avoid all major mobile pitfalls.\n* Use Android sensors and APIs to understand your user's context and deliver context-aware moments of amazement that they will love.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/ud849?utm_medium=referral&utm_campaign=api",
      "project_name": "Blueprint Your Own Android App",
      "full_course_available": true,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh3.ggpht.com/Wx1OdscqyJkXh3vYLx6ZTxngP542hK_P2Mew1MvItbCs-GF4a0lyBfFSOfebDt9CX4Fv-omaDshdYX_obLI9=s0#w=130&h=60",
          "name": "Google"
        }
      ],
      "tracks": ["Android"],
      "banner_image": "https://lh6.ggpht.com/BTyvQ0dWSZvWg2gikHDH8oFxx285J-iBSWvV0isCF1nQVC0OP_L9AEv7Yux0TOp0Ad0S_W6e96DUJYvnQg=s0#w=4680&h=968",
      "short_summary": "This is a design course made for developers. You'll learn UX design skills which will help you make 5-star mobile apps that your users will love.",
      "starter": true,
      "level": "beginner",
      "expected_duration_unit": "weeks",
      "summary": "This course is optimized for the developer who is looking to efficiently learn the most important design techniques that will help them make better apps (with a focus on mobile/Android). \n\nThis is a UX design course built for current (and aspiring) mobile developers. In this short course, you'll step back from your IDE and dive into the techniques that great designers use to plan and prototype amazing apps before any code is written.\n\n####[Download Udacity's Android app](https://play.google.com/store/apps/details?id=com.udacity.android) to keep learning wherever you go!",
      "expected_duration": 6
    },
    {
      "instructors": [
        {
          "bio": "Samantha Ready is a Developer Evangelist at salesforce.com. She has been with Salesforce for three years, and prior to evangelism was part of an internal development team building prototypes and apps on the platform. She graduated from UC Santa Cruz with a degree in computer engineering and a concentration in robotics and embedded systems, but as of late has focused on front end and mobile development. When she\u2019s not sharing her love for Salesforce, you can find Sam scuba diving, scaling mountains, or searching for the world\u2019s best hot sauce while listening to good music.",
          "image": "https://lh6.ggpht.com/B28dPOgssVkHszemBb41K8BrVjTqTkf_Q9ojQxEex7silXoMUPJ13AIIqbElNnPr0t0ltuKIM3PBqcyinXw=s0#w=404&h=404",
          "name": "Samantha Ready"
        },
        {
          "bio": "Mario Korf is a Developer Programs Manager at salesforce.com, who specializes in designing learning paths and documentation for new developers. During his six years at Salesforce, he has won several technical writing awards on subjects from application lifecycle management to mobile development. He created the popular Workbook series of tutorials, and is passionate about new and innovative ways for learning. Mario's excited to help with this project because it provides an alternative to traditional instructor-lead training, with a social, self-paced, and enjoyable experience out of the box. In his spare time, Mario is racing, building, or chasing something. He\u2019s typically on or under the water.",
          "image": "https://lh3.ggpht.com/PZO5gtYT6Imv3A-OM9BXUq_KYkWmU4jmMHOiY6cDytwaHY3Suia4ZTmhMP84cRoCIMXfHjYae0GR6yvykQI=s0#w=337&h=337",
          "name": "Mario Korf"
        },
        {
          "bio": "Andy Brown is a Lead Instructor at Udacity. He has a degree in physics from MIT, and has devoted his time after graduating to teaching and learning. Since joining Udacity in 2012, Andy has helped design dozens of classes. He loves exploring this new educational medium by creating innovative and engaging courses. When he\u2019s not figuring out the best ways to transform minds, you can find Andy on his bike or in his car, exploring the amazing experiences that his new California home has to offer.",
          "image": "https://lh6.ggpht.com/gzcZTQuXefPLSSaKithiGKzP5vcc_Gs-CbJjmuCTIn-YLsjzjvyWyBwnDXa-dVOf9EbOX03va4jFTdD4_w=s0#w=1800&h=1800",
          "name": "Andy Brown"
        }
      ],
      "subtitle": "Think It. Build It.",
      "key": "ud162",
      "image": "https://lh5.ggpht.com/kI0ik4ILo3V22AmxDwyaAYaTFH__6PXBFyIYqmmNei3qhTGJIyT-jLLmpooYEqMyM8BehSTQEGmlnvIJWrs7=s0#w=1757&h=1080",
      "expected_learning": "After completing this course you will have built your own web and mobile app. You will become familiar with the concept of abstraction and how to think about concrete problems in their most general sense -- a concept critical for all developers. In addition, you will learn how to map out a data model, create data visualizations, and automate manual processes after analyzing your abstractions.\n\nWhat kind of apps can you build? Well, Facebook uses a Salesforce app to manage their entire hire-to-retire process: collecting resumes, sharing feedback, making job offers, and developing talent. And the Obama 2012 campaign built apps to mobilize their vast volunteer network and visualize the pulse of the nation in real-time. What will you build?",
      "featured": false,
      "teaser_video": {"youtube_url": "https://www.youtube.com/watch?v=nB-OjiwuOTk"},
      "title": "Intro to Point & Click App Development",
      "required_knowledge": "Good news! You don't need any programming experience and you don't need to know anything about Salesforce. You'll learn the ins and outs of point-and-click development, so all you need now is an interest in building an app.\n\nOne thing you should know: the skills you learn in this course are in high demand and will help further your career.",
      "syllabus": "### Overview\nIn this class you\u2019ll learn the basics of building apps with Force.com, a part of Salesforce Platform. These apps are typically business apps: they solve organizational and logistical problems. You probably wouldn\u2019t use Salesforce to build a computer game (though you could!).\n\nThere are two ways to build apps in Force.com: with or without code. This class will only cover the non-coding, point-and-click app building interface. But don\u2019t be fooled! Building powerful apps does not require writing code. \n\nThis class contains an introductory lesson, five primary lessons where you'll be building and learning (each of which has an accompanying problem set to practice your skills), and a final project where you'll put everything together.\n\n### Lesson 0: What is Salesforce (15 mins)\nWhat **is** Salesforce Platform? What does it do? Why should I learn about it? What kind of jobs can I get after I learn how to use it?\n\nIn this lesson, you\u2019ll meet the instructors, get to know the class, and learn a bit about Salesforce in general. \n\n### Lesson 1: Creating your First App (90 minutes)\nIn this lesson you\u2019ll get acquainted with Force.com and actually build the beginnings of your first app. You\u2019ll get some experience taking a big problem (in this case, managing a music festival), breaking it into smaller parts, and representing those parts in Salesforce. As you do this, you\u2019ll learn about the basic components of a Salesforce app and add some simple (but powerful) functionality to your app. More concretely, you\u2019ll learn about:\n\n* **Salesforce Data**: Salesforce represents data as objects, fields, and records. You\u2019ll learn what these terms mean and build them into your app. \n* **Relationships**: When the pieces of your app start communicating, interesting things can happen. In this lesson you\u2019ll learn the basics of Salesforce relationship fields. \n* **Validation Rules**: If you\u2019ve ever incorrectly entered your credit card number into a website, you already know about validation rules. In this lesson, you\u2019ll learn how to build them into your app. \n* **Formulas and Summaries**: These tools let you easily keep track of quantifiable things like money spent, customers contacted, or tickets sold. In this lesson you\u2019ll learn how to build these automated calculations into your app.  \n\n### Lesson 2: Building out your Data Model (90 mins)\nBehind every powerful business app is a well-planned data model (also known as a schema). In this lesson you\u2019ll learn how to decompose a complex problem into its component pieces and then connect those pieces together with the appropriate relationship fields. The data model you build will serve as the schematic skeleton onto which you\u2019ll build dynamic functionality in later lessons. The specific topics covered are: \n\n* **One-to-Many Relationships**: These relationships let the pieces of your app talk to each other. In this lesson you\u2019ll learn how and when (and why) to use master-detail and lookup relationships in the apps you build. \n* **Many-to-Many Relationships**: You\u2019ll learn how to use a junction object to add flexibility into your data model. \n* **Customizing the User Interface**: Good apps should be easy to use! In this lesson you\u2019ll learn how to configure the layout of your app to make sure the UI is simple and intuitive.\n* **Schema Builder**: There are many ways to get things done in Salesforce. In this lesson you\u2019ll start using the schema builder to understand how your app works.\n* **Data Loading**: This is a convenient way to get lots of data onto your app at once.\n\n### Lesson 3: Visualizing your Data (45 mins) \nNo matter what kind of app you\u2019re building, you\u2019ve probably got some data that you want other people in your organization to understand quickly and easily. In this lesson you\u2019ll learn how quickly communicate information with  real-time data visualizations. Specifically, you\u2019ll learn how to make:\n\n* **Reports**: These let you gather related information into one place.  These let you gather data according to specific criteria and display it in neat rows and columns. \n* **Charts**: These let you graphically summarize the information in a report.\n* **Dashboards**: Different people want access to different information. A dashboard is a collection of charts that give specific people in your organization exactly the information that they need in real-time.\n* **Views**: Data is good, but sometimes you have too much. Views let you selectively and quickly display only the data you care about.\n\n### Lesson 4: Adding Automation (45 mins)\nIn this lesson you\u2019ll think about how to use your app to automate manual tasks. You\u2019ll learn how to use two important Salesforce tools: \n\n* **Workflows**: There are situations where a series of steps need to happen in sequence: first do this, then do that. Workflows let you automate processes like these, such as sending an email, assigning a task, or updating a field.\n* **Approval Processes**: You don\u2019t want every job to be completely automated. Sometimes you need someone to step in and say \u201cthis looks good.\u201d Approval processes add a human element to your automated tasks.\n\n### Lesson 5: Make it Social. Make it Mobile. (45 mins)\nThis is it. With a few clicks of the mouse you\u2019ll make your app social and mobile. The tools you\u2019ll use are:\n\n* **Chatter**: This will let your users collaborate on the projects and records they work on together.  \n* **Salesforce1**: That web app you\u2019ve been building this whole time? It\u2019s actually a mobile app too. You\u2019ll even learn how to quickly customize your mobile interface and add functionality for mobile productivity. \n\n### Final Project: Build your own App (2-4 hours)\nBy the time you get here, you will have already built a music festival management app. Now it\u2019s time to take your own idea and turn it into a functional web and mobile app.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/ud162?utm_medium=referral&utm_campaign=api",
      "project_name": "Create Your Own Salesforce App",
      "full_course_available": true,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh3.ggpht.com/ep44q8coJ4PnTRDDS-VrohCW056ts0kxfmzoY_XleHvhU7_AhE8Z368FJXk7FMrnRgt1zwyNw0a7TxyYKLc=s0#w=1040&h=480",
          "name": "Salesforce"
        }
      ],
      "tracks": ["Web Development"],
      "banner_image": "https://lh5.ggpht.com/NaWEGnVTrwLQwzIzNM7m0uQCu1hv0nJL3Y12-F_Ml8iOUxA4Y1ozHrYnokYsPhLq9fCSwuoO3h9hUoqm00I=s0#w=4680&h=968",
      "short_summary": "In this short class you'll build powerful apps without writing code. Great if you're an aspiring developer or someone who wants to learn what programmers do.",
      "starter": true,
      "level": "beginner",
      "expected_duration_unit": "months",
      "summary": "This class teaches you how to build powerful web and mobile apps and host them in the cloud, without writing a line of code.\n\nBy the end of this short course, you'll use the skills you've developed to conceptualize and create your own app. To get you there, your instructors Samantha and Andy will first help you build an app that could be used to manage logistics at a music festival. Though this is a very specific app use case, the skills you learn will be applicable to just about any business app you\u2019d want to develop.",
      "expected_duration": 1
    },
    {
      "instructors": [
        {
          "bio": "Magnus Hyttsten works as a Developer Advocate at Google. He is an uncompromising software technologist and product marketing fanatic who likes to work in fast-paced environments. Prior to joining Google, he worked for a company in the Telecommunications Industry that he co-founded and worked as CTO for since 2000. He enjoys the datacenter, statically-typed programming languages, evangelizing about technology, and doing things that have not been tried before. Right now, he is extremely passionate about connecting mobile devices with the Cloud.",
          "image": "https://lh3.ggpht.com/0ZA4ew0P_mOqjWMYIZVr2pcLnmDsYTXBXfkHDFmdot33SsUQH0iKqwrLCgIDPjIrgXUMYJZuAxeetB2SyfqS=s0#w=256&h=256",
          "name": "Magnus Hyttsten"
        },
        {
          "bio": "Jocelyn Becker wrote the developer documentation for the very first external Google API, the Adwords API, back in 2004, and she's been documenting Google APIs and training developers to use them ever since. For the past couple of years she's been developing and delivering training courses for Google Cloud products, and she wants to help others learn just how easy it is to get your web apps running when you use App Engine.",
          "image": "https://lh5.ggpht.com/rC9lz-jE8dNIqXaNJyRaDwfXfySDHSEuNvvRr8WrJihaPGKZNo-y8vuYqi3NlFI_H3pkKxo2pEjT11AIyDEI=s0#w=1021&h=1021",
          "name": "Jocelyn Becker"
        }
      ],
      "subtitle": "with Google App Engine",
      "key": "ud859",
      "image": "https://lh4.ggpht.com/8Cb3zFphgqikhWUZKSUoKs9iRUmQ-BNGjGDNVjmDFwUZvyrNyqntiqS2T1I2iSQIKB05NKvJ4ZYp4Fa_hgk=s0#w=1724&h=1060",
      "expected_learning": "Cloud computing is one of the fastest growing fields right now. And no wonder - it provides an easy and affordable way to run your applications. However, the traditional way of hosting and scaling applications on Virtual Machines in the Cloud comes with a cost - even if the infrastructure is virtual, you still have to manage it - do load balancing, bring instances up and down, take care of patching your software and in general spend a lot of your time and resources on just the infrastructure. \n\nGoogle is one of the pioneers in the business of scaling, and now you can use their infrastructure, and let them do all the scaling work so that you can focus on the unique features your app provides.\n\nProject\n-------------\nThere will be an overarching project throughout the course, starting from Lesson 2. You will develop an application for organizing conferences, similar to sites like meetup.com or eventbrite.com. We have provided the frontend of the app, and all your effort will go into making the backend.\n\nAnd because you will be using Cloud Endpoints, it\u2019s really easy to hook up your backend with a native mobile app. We have created an Android app that uses the same backend as the web frontend. You will able to recompile it against your backend, if you so wish!\n\nAt the end of the course you will do a final project, where you will have to expand the functionality of the same app.",
      "featured": false,
      "teaser_video": {"youtube_url": "https://www.youtube.com/watch?v=zdHgI3hOsHo"},
      "title": "Developing Scalable Apps with Java",
      "required_knowledge": "You should be fairly comfortable programming in Java, preferably with some experience developing web applications and working with databases for at least a year. You will be developing the backend of a sample app, so you don\u2019t have to worry about HTML or JavaScript.\n\nYou should have sufficient permissions to install new software on your computer, and comfortable configuring it, including setting up system variables.\n\nWe will be using Maven and Eclipse for this course, and we strongly suggest that you use them as well.",
      "syllabus": "###Overview\nThis course consists of 6 lessons. First one is an overview of cloud computing and the benefits of Platform as a Service. Lessons 2-5 will cover important theoretical concepts of Google App Engine and also plenty of hands-on exercises implementing what you have learned. Lesson 6 will be a short intro on an easy way to create native mobile apps that talk to your backend.\n\n###Lesson 1: Scalability Basics\nDo you know how and why server racks were invented years ago? Have you realized all of the problems that you have to solve if you will try to scale your app by yourself? Learn about a better way.\n\n###Lesson 2: Getting Started\nSet up your first App Engine project and learn how to define Cloud Endpoints. \n\nStart the course project app - Conference Central and add authentication and user profiles.\n\n###Lesson 3: Storing and Retrieving Data\nOne of the most important things you want to do in your app is storing data. In this lesson you will learn what is Google App Engine Datastore, how is it different from RDBMS and how you can use it in your applications.\n\nAdd the ability to store and retrieve user profiles and conferences to the course project app.\n\n###Lesson 4: Advanced Datastore Concepts\nLearn more about how Datastore works, including queries, filters, indexes and transactions. \n\nAdd different ways to query conferences.\n\n###Lesson 5: Advanced App Engine Topics\nThere are a lot of things you might want your application to do in background, without making the user wait, or even initiate the process. Learn about task queues and cron jobs and how you can use them to add advanced functionality to your app. You will also learn about Memcache, and get an overview of topics like Edge Caching, AppStats and other methods of optimising your apps performance.\n\nAdd a push queue, cron job and a customised Memcache entry to your app.\n\n###Lesson 6: App Engine and Mobile Apps\nYou have been using Cloud Endpoints in the app, and now it\u2019s time to see how you can use them in a mobile app. Learn how to generate native libraries for Android and iOS that can talk to your backend. You can even recompile the Android app we provide with our course, to work against your own project. How cool is that?\n\nGenerate mobile client libraries for your app.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/ud859?utm_medium=referral&utm_campaign=api",
      "project_name": "Build Conference Central app",
      "full_course_available": true,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh3.ggpht.com/Wx1OdscqyJkXh3vYLx6ZTxngP542hK_P2Mew1MvItbCs-GF4a0lyBfFSOfebDt9CX4Fv-omaDshdYX_obLI9=s0#w=130&h=60",
          "name": "Google"
        }
      ],
      "tracks": ["Web Development"],
      "banner_image": "https://lh4.ggpht.com/Kb0P_aGrh1VkUYUAFqF_wUjsFOeMW52VHYYb7cg_wnDRhURTsKYizWZgWky4XByh9p5MisARsmusGdt8jDI=s0#w=4680&h=968",
      "short_summary": "You will learn about challenges of building applications that can serve hundreds of thousands of users, and how you can prepare for them as a developer.",
      "starter": false,
      "level": "advanced",
      "expected_duration_unit": "months",
      "summary": "You will learn about challenges of building applications that can serve hundreds of thousands of users, and how you can prepare for them as a developer. And more importantly - you will learn how to harness the power of **App Engine** - Platform as a Service, run by Google, so you can focus on your application's features, not on managing infrastructure that runs your app. Let Google run and scale the infrastructure and do what you do best - write code! \n\nHowever, to use App Engine effectively, you have to learn how it works, and this is exactly what this course will teach! You will also learn the best practices of using <a href=\"https://cloud.google.com/products/cloud-endpoints/\" target=\"_blank\">Cloud Endpoints</a> that allow you to easily create RESTful services and make them accessible to iOS, Android and Javascript clients. They allow you to automatically generate client libraries to make wiring up the frontend easy. And there are some nifty built-in features, like denial-of-service protection and OAuth 2.0 support.",
      "expected_duration": 2
    },
    {
      "instructors": [
        {
          "bio": "David Luebke helped found NVIDIA Research in 2006 after eight years teaching computer science on the faculty of the University of Virginia. Dave's research on real-time 3D computer graphics led to an early interest in GPU computing when that field was still in its infancy. Today Dave is senior director of graphics research and a NVIDIA Distinguished Inventor. Dave lives in central Virginia with his wife and three boys, plays racquetball and ultimate frisbee, and prefers college hoops to the NBA. Find him at his <a href=\"http://luebke.us\">website</a> and <a href=\"http://twitter.com/davedotluebke\">@davedotluebke</a> on Twitter.",
          "image": "https://lh6.ggpht.com/aHwZ_Xn1it4MEIAIyCs94_TazutSUnOwnuIUquT7h38nL_bHEI8iRgkOew0Z99rrdkXaDJyYt17cI2JN-L0=s0#w=250&h=250",
          "name": "David Luebke"
        },
        {
          "bio": "John Owens is an associate professor of electrical and computer engineering at the University of California, Davis, where he leads a research group in parallel computing. He joined the faculty at UC Davis after many happy years as a student at Stanford (graduate) and Berkeley (undergraduate), and lives in Berkeley with his wife and daughter. In his free time, he enjoys puzzles, water polo, and pursuing a finite Erd\u0151s-Bacon number. John has a <a href=\"http://www.ece.ucdavis.edu/~jowens/\" target=\"_blank\">web page</a> and (after his recent sabbatical at Twitter) is learning how to tweet at <a href=\"https://twitter.com/jowens\" target=\"_blank\">@jowens</a>.",
          "image": "https://lh5.ggpht.com/ggLVCtDhEDZbVR-b2ZGA7eaeTroVSPVw2n3qJCarJCauZvDRFWUzpEZNH_zUqaZZFkn0PZ24-k8QWuTK45Jv=s0#w=405&h=405",
          "name": "John Owens"
        }
      ],
      "subtitle": "Using CUDA to Harness the Power of GPUs",
      "key": "cs344",
      "image": "https://lh5.ggpht.com/lkq5D-G-UMgnK574HjI50bKwklgwoSqb37YRFYQnh6jQFravvrDPpxYUFbQFeJRkGLs-TkEBLF43omuUEfw=s0#w=436&h=268",
      "expected_learning": "You'll master the fundamentals of massively parallel computing by using CUDA C/C++ to program modern GPUs. You'll learn the GPU programming model and architecture, key algorithms and parallel programming patterns, and optimization techniques. Your assignments will illustrate these concepts through image processing applications, but this is a parallel computing course and what you learn will translate to any application domain. Most of all we hope you'll learn how to think in parallel.",
      "featured": false,
      "teaser_video": {"youtube_url": "https://www.youtube.com/watch?v=zb49vDrOxgA"},
      "title": "Intro to Parallel Programming",
      "required_knowledge": "We expect students to have a solid experience with the C programming language and basic knowledge of data structures and algorithms.",
      "syllabus": "### Lesson 1: GPU Programming Model\n\nProject 1: Greyscale Conversion (for that classy touch!)\n\n### Lesson 2: GPU Hardware and Parallel Communication\n\nProject 2: Smart Blurring (miracle product for removing wrinkles!)\n\n### Lesson 3: Fundamental Parallel Algorithms\n\nProject 3: HDR Tonemapping (when 1000:1 contrast is not enough!)\n\n### Lesson 4: Using Sort and Scan\n\nProject 4: Red Eye Removal (soothing relief for bright red eyes)\n\n### Lesson 5: Optimizing GPU Programs\n\nProject 5: Accelerating Histograms (when fast isn't fast enough)\n\n### Lesson 6: Parallel Computing Patterns\n\nProject 6: Seamless Image Compositing (polar bear in the swimming pool)\n\n### Lesson 7: The Frontiers and Future of GPU Computing",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/cs344?utm_medium=referral&utm_campaign=api",
      "project_name": "",
      "full_course_available": true,
      "faq": "### When does the course begin?\n \nThis class is self paced. You can begin whenever you like and then follow your own pace. It\u2019s a good idea to set goals for yourself to make sure you stick with the course.\n\n### How long will the course be available?\n\n This class will always be available! \n\n### How do I know if this course is for me?\n\n Take a look at the \u201cClass Summary,\u201d \u201cWhat Should I Know,\u201d and \u201cWhat Will I Learn\u201d sections above. If you want to know more, just enroll in the course and start exploring.\n\n### Can I skip individual videos? What about entire lessons?\n\n Yes! The point is for you to learn what YOU need (or want) to learn. If you already know something, feel free to skip ahead. If you ever find that you\u2019re confused, you can always go back and watch something that you skipped.\n\n### How much does this cost?\n\n It\u2019s completely free! If you\u2019re feeling generous, we would love to have you contribute your thoughts, questions, and answers to the course discussion forum.\n\n### What are the rules on collaboration?\n\n Collaboration is a great way to learn. You should do it! The key is to use collaboration as a way to enhance learning, not as a way of sharing answers without understanding them. \n\n### Why are there so many questions?\n\n Udacity classes are a little different from traditional courses. We intersperse our video segments with interactive questions. There are many reasons for including these questions: to get you thinking, to check your understanding, for fun, etc... But really, they are there to help you learn. They are NOT there to evaluate your intelligence, so try not to let them stress you out.\n\n### What should I do while I\u2019m watching the videos?\n\n Learn actively! You will retain more of what you learn if you take notes, draw diagrams, make notecards, and actively try to make sense of the material.",
      "affiliates": [
        {
          "image": "https://lh4.ggpht.com/YgIpYQCMiQK4xwsqT1YA3up7cRTEUmucB9-jEhhymXFHusDvtM8WmYaQHIrjPFBxAcGyqJP1x9gscbq4ww0R=s0#w=130&h=60",
          "name": "Nvidia"
        }
      ],
      "tracks": ["Software Engineering"],
      "banner_image": "https://lh4.ggpht.com/kjZiTQC-NBbbia18Obt4avt34hXd2Hce3nrEmj441ZDWk2p78LxXu95mxxcGNDqR0aVo86zlWpFPd2SvcKVI=s0#w=4680&h=968",
      "short_summary": "Learn the fundamentals of parallel computing with the GPU and the CUDA programming environment by coding a series of image processing algorithms. #filters, #cuda.",
      "starter": false,
      "level": "advanced",
      "expected_duration_unit": "months",
      "summary": "Learn the fundamentals of parallel computing with the GPU and the CUDA programming environment! In this class, you'll learn about parallel programming by coding a series of image processing algorithms, such as you might find in Photoshop or Instagram. You'll be able to program and run your assignments on high-end GPUs, even if you don't own one yourself.  \n\n**Why It\u2019s Important to Think Parallel**  \n\n[Third Pillar of Science][1]  \nLearn how scientific discovery can be accelerated by combining theory and experimentation with computing to fight cancer, prevent heart attacks, and spur new advances in robotic surgery.\n\n[1]: http://www.youtube.com/watch?v=3DbAB2ChDBw",
      "expected_duration": 3
    },
    {
      "instructors": [
        {
          "bio": "Sean Laraway has taught at San Jose State University since 2004. He completed a post-doctoral fellowship in Psychopharmacology. He has taught statistics at the undergraduate and graduate levels since 1998. He earned his MA and PhD in Behavior Analysis from Western Michigan University in 2003.",
          "image": "https://lh3.ggpht.com/vpVtxkUbh11TqF95VGfsG-DFlLlOjtfXv35xxCWbgHYY_MiaYVjt2X-AT3acMrqGH06cfGHNfnGprkNb3Qw=s0#w=320&h=320",
          "name": "Sean Laraway"
        },
        {
          "bio": "Ron Rogers has been a professor of psychology at San Jose State University since 1999. Dr. Rogers has developed and taught statistics and research methods courses at both the undergraduate and graduate level. He earned his M.A. and Ph.D. in Behavioral Neuroscience from Rutgers University in 1995.",
          "image": "https://lh3.ggpht.com/MaYFvovpA4cVUkUkxCpWDvCAO7bOIiy_tMWaafFc4ckcj3KtvaVyGdCUM0gD4qPaqKi28l_8v_IYtI7Yxg=s0#w=441&h=441",
          "name": "Ronald Rogers"
        }
      ],
      "subtitle": "Mathematics for Understanding Data",
      "key": "ud827",
      "image": "https://lh5.ggpht.com/nARp_CeSO3ILiHej7K63IJmbN2pzBNlz5A_btbgWiZTOMA9A03__DgsdO2ltcKk8ocEXjclUCmlI3aOkuBcu=s0#w=436&h=268",
      "expected_learning": "This course will teach you the basic terms and concepts in statistics as well as guide you through introductory probability. \n<br> <br>\nYou will learn how to....\n\n- Use statistical research methods.\n- Compute and interpret values like: Mean, Median, Mode, Sample, Population, and Standard Deviation.\n- Compute simple probabilities. \n- Explore data through the use of bar graphs, histograms, box plots, and other common visualizations.\n- Investigate distributions and understand a distributions properties.\n- Manipulate distributions to make probabilistic predictions on data.",
      "featured": false,
      "teaser_video": {"youtube_url": ""},
      "title": "Intro to Descriptive Statistics",
      "required_knowledge": "This course assumes understanding of basic algebra and arithmetic.",
      "syllabus": "### Lesson 1 : Intro to Research Methods\nYou will be introduced to several statistical study methods and learn the positives and negatives of each. \n### Lesson 2 : Visualizing Data\nYou will learn how to take your data and display it to the world. You will learn to create and interpret histograms, bar charts, and frequency plots.\n### Lesson 3 : Central Tendency\nIn this lesson you will learn to compute and interpret the 3 measures of center for distributions: the mean, median, and mode.\n### Lesson 4 : Variability\nYou will learn how to quantify the spread of data using the range and standard deviation. You will also learn how to identify outliers in data sets using the concept of the interquartile range. \n### Lesson 5 : Standardizing\nYou will learn how to convert distributions into the standard normal distribution using the Z-score. You will also learn how to compute proportions using standardized distributions. \n### Lesson 6 : Normal Distribution\nYou will learn how to use normalized distributions to compute probabilities. You will also learn how to use the Z-table to look up the proportions of observations above, below, or in between values.  \n### Lesson 7 : Sampling Distributions\nYou will learn how to apply the concepts of probability and normalization to sample data sets.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/ud827?utm_medium=referral&utm_campaign=api",
      "project_name": "Descriptive Statistics with Cards",
      "full_course_available": true,
      "faq": "",
      "affiliates": [],
      "tracks": ["Data Science"],
      "banner_image": "https://lh3.ggpht.com/Y0z3c78ak_cooz9fomEdLeFN83jGp-mOJk82p8PFVJTbkrCVGkEIdAeitEIEeeOXTmrdl9HCHgJLBSWIq_wX=s0#w=4680&h=968",
      "short_summary": "Intro to Descriptive Statistics will teach you the basic concepts of statistics that can be used to extract information from data.",
      "starter": true,
      "level": "beginner",
      "expected_duration_unit": "months",
      "summary": "Statistics is an important field of math that is used to analyze, interpret, and predict outcomes from data. Descriptive statistics will teach you the basic concepts used to describe data. This is a great beginner course for those interested in Data Science, Economics, Psychology, Machine Learning, Sports analytics and just about any other field.",
      "expected_duration": 2
    },
    {
      "instructors": [
        {
          "bio": "Sean Laraway has taught at San Jose State University since 2004. He completed a post-doctoral fellowship in Psychopharmacology. He has taught statistics at the undergraduate and graduate levels since 1998. He earned his MA and PhD in Behavior Analysis from Western Michigan University in 2003.",
          "image": "https://lh3.ggpht.com/vpVtxkUbh11TqF95VGfsG-DFlLlOjtfXv35xxCWbgHYY_MiaYVjt2X-AT3acMrqGH06cfGHNfnGprkNb3Qw=s0#w=320&h=320",
          "name": "Sean Laraway"
        },
        {
          "bio": "Ron Rogers has been a professor of psychology at San Jose State University since 1999. Dr. Rogers has developed and taught statistics and research methods courses at both the undergraduate and graduate level. He earned his M.A. and Ph.D. in Behavioral Neuroscience from Rutgers University in 1995.",
          "image": "https://lh3.ggpht.com/MaYFvovpA4cVUkUkxCpWDvCAO7bOIiy_tMWaafFc4ckcj3KtvaVyGdCUM0gD4qPaqKi28l_8v_IYtI7Yxg=s0#w=441&h=441",
          "name": "Ronald Rogers"
        }
      ],
      "subtitle": "Making Predictions from Data",
      "key": "ud201",
      "image": "https://lh5.ggpht.com/OD60sILjGeSrUb2O7nPqio4ym7qsZo7z_7M4vkxTeW4T_sj_mUosbK_omXfdDfyjK5oIv_XZGH1bOis8aMk=s0#w=1724&h=1060",
      "expected_learning": "This course will guide you through some of the basic tools of inferential statistics. \n<br> <br>\nThis course will cover:\n\n- estimating parameters of a population using sample statistics\n- hypothesis testing and confidence intervals\n- t-tests and ANOVA\n- correlation and regression\n- chi-squared test",
      "featured": false,
      "teaser_video": {"youtube_url": ""},
      "title": "Intro to Inferential Statistics",
      "required_knowledge": "This course assumes basic understanding of Descriptive Statistics, specifically the following:\n\n- calculating the mean and standard deviation of a data set\n- central limit theorem\n- interpreting probability and probability distributions\n- normal distributions and sampling distributions\n- normalizing observations\n\nIf you need a refresher, check out our [Descriptive Statistics course](https://www.udacity.com/course/ud827)! The course also utilizes Google Spreadsheets as a tool.",
      "syllabus": "Inferential Statistics is a continuation of the material covered in [Descriptive Statistics](https://www.udacity.com/course/ud827), and so lesson numbers follow from that course:\n\n### Lesson 8: Estimation\nYou will learn how to estimate population parameters from sample statistics using confidence intervals and estimating the effect of a treatment.\n### Lesson 9: Hypothesis Testing \nYou will learn how to use critical values to make decisions on whether or not a treatment has changed the value of a population parameter.\n### Lesson 10,11: t-tests\nYou will learn how to test the effect of a treatment or compare the difference in means for two groups when we have small sample sizes.\n### Lesson 12,13: ANOVA\nYou will learn how to test whether or not there are differences between three or more groups.\n### Lesson 14: Correlation\nYou will learn how to describe and test the strength of a relationship between two variables.\n### Lesson 15: Regression \nYou will learn how to describe the way in which changes in one variable are related to changes in a second variable.\n### Lesson 16: Chi-squared Tests\nYou will learn how to compare and test frequencies for categorical data. \n### Final Project \nYou will use the methods you have learned in this course to perform an analysis on a dataset and report your findings. You will describe the data, calculate statistics, perform inference, and make conclusions.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/ud201?utm_medium=referral&utm_campaign=api",
      "project_name": "Analyzing Your Own Dataset",
      "full_course_available": true,
      "faq": "",
      "affiliates": [],
      "tracks": ["Data Science"],
      "banner_image": "https://lh5.ggpht.com/F8moDNQh-uVmQJgECq8EESBy3MX-pMfXbWmaqRGK17HRpReckB3dJXLFNVviOYky2vOkNQIywhVPLcs7jw=s0#w=4680&h=968",
      "short_summary": "Intro to Inferential Statistics will teach you how to test your hypotheses and begin to make predictions based on statistical results drawn from data!",
      "starter": true,
      "level": "beginner",
      "expected_duration_unit": "months",
      "summary": "Inferential statistics allows us to draw conclusions from data that might not be immediately obvious. This course focuses on enhancing your ability to develop hypotheses and use common tests such as t-tests, ANOVA tests, and regression to validate your claims.",
      "expected_duration": 2
    },
    {
      "instructors": [
        {
          "bio": "Dr. Ramachandran received his Ph.D. in Computer Science from the University of Wisconsin, Madison in 1986. Since then, he has been with Georgia Tech, where he is a Professor in the School of Computer Science in the College of Computing. His research interests are in the area of architectural design, programming, and analysis of parallel and distributed systems. He received a Presidential Young Investigator Award from the National Science Foundation in 1990, the Georgia Tech Doctoral Thesis Advisor award in 1993, the College of Computing Outstanding Senior Research Faculty award in 1996, the Dean's Award in 2003, the William \"Gus'' Baird Teaching Award in 2004, and the Peter A. Freeman Faculty Award, twice (2009 and 2013), for demonstrated entrepreneurial spirit. He is an avid squash player, and can even be arm-twisted into holding a tennis racket every once in a while!",
          "image": "https://lh6.ggpht.com/XMAFNYTfH0LpfEvcLtdBJX8c3BbQkhdVjQhR1VXuqXXQD6VktefJaJx3eF6O6sOtEtEn-PJrh_H5cmUQADtK=s0#w=247&h=247",
          "name": "Kishore Ramachandran"
        }
      ],
      "subtitle": "Abstractions and Virtualization",
      "key": "ud189",
      "image": "https://lh3.ggpht.com/SdbdPteIUGqjQT9M1z3FlEXulgHFwj60lYsnHovptPyAtE3U8bHF2ic2qUuxQs8D6zngFi2yEOUES1fOD3G-=s0#w=1724&h=1060",
      "expected_learning": "This course is a journey to understanding the role played by the Operating System in providing the rich user experience afforded to modern applications by today\u2019s computers. Along the way, we highlight the symbiotic relationship between hardware and software that makes it possible for the computer and OS to provide a pleasing user experience.",
      "featured": false,
      "teaser_video": {"youtube_url": ""},
      "title": "Advanced Operating Systems",
      "required_knowledge": "Students are expected to have taken an undergraduate OS course, or have some experience in industry. A good understanding of the concepts in a standard textbook such as \"Operating Systems Concepts,\" Silberschatz and Galvin (or its equivalent) will be assumed in this course. \n\nStudents must also be comfortable with UNIX and C programming.",
      "syllabus": "###Lesson 1: Abstractions\n\n * The Princple of Abstraction\n * Hardware Resources\n * OS Functionality\n * Managing the CPU and Memory\n \n###Lesson 2: OS Structure\n\n* OS Structure Overview\n* The SPIN Approach \n* The Exokernel Approach\n* The L3 Micro-Kernel Approach\n \n###Lesson 3: Virtualization\n\n* Intro to Virtualization\n* Memory Virtualization\n* CPU and Device Virtualization\n \n###Lesson 4: Parallelism\n\n* Shared Memory Machines\n* Synchronization\n* Communication\n* Lightweight RPC\n* Scheduling\n* A Shared-Memory Multiprocessor OS\n\n###Lesson 5: Distributed Systems\n\n* Definitions \n* Lamport Clocks\n* Latency limits\n* Active networks\n* Systems from Components\n \n###Lesson 6: Distributed Object Technology\n\n* Spring Operating System\n* Java RMI\n* Enterprise Java Beans\n \n###Lesson 7: Design and Implementation of Distributed Services\n\n* Global Memory System  \n* Distributed Shared Memory \n* Distributed File System\n\n###Lesson 8: System Recovery\n\n* Lightweight Recoverable Virtual Memory\n* Rio Vista \n* Quicksilver\n \n###Lesson 9: Internet Scale Computing\n\n* Giant Scale Services\n* MapReduce\n* Content Delivery Networks\n \n###L10: Real-Time and Multimedia\n\n* Time sensitive Linux\n* Persistent temporal streams\n \n###L11: Security\n\n* Principles of Information Security\nSecurity \n* The Andrew System",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/ud189?utm_medium=referral&utm_campaign=api",
      "project_name": "",
      "full_course_available": false,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh4.ggpht.com/nGlPuZaZ6BbR23QfhSVNT_Sd_U45RnUECVGhx-cKIlo3D_Onofn-nWpV3sEYEQsczb7tC4JhggdGYyhAAQ4I=s0#w=130&h=60",
          "name": "Georgia Institute of Technology"
        }
      ],
      "tracks": ["Georgia Tech Masters in CS"],
      "banner_image": "https://lh6.ggpht.com/EyBkEKFXan6Z43n_gq66PjNmWInp3JsI515vEEHDQ-snEPnNf9kUdH5nXeGgnhMd5p8Ad3Vfaze7iD_nScQ=s0#w=4680&h=968",
      "short_summary": "",
      "starter": false,
      "level": "advanced",
      "expected_duration_unit": "weeks",
      "summary": "In this course, we will see all the advances that have led to the state-of-the-art operating system that we know today, covering variety of platforms -- cell phones, multi-core, parallel systems, distributed systems, and cloud computing.",
      "expected_duration": 5
    },
    {
      "instructors": [
        {
          "bio": "Charles Brubaker earned his PhD in Computer Science from Georgia Tech in 2009. He then taught high school computer science and coached basketball at Pace Academy in Atlanta for 4 years. In 2012, inspired by Udacity, he began recording his lectures on a tablet, creating online quizzes, and automatically grading assignments to give his students instant feedback. The success of this enterprise convinced him that Udacity represented the wave of the future in education, and he joined the company in the summer of 2013.",
          "image": "https://lh3.ggpht.com/3t3a6BICSDyPyOGE0W55pmrskLdybPmniacXdY7fjxbwuqcZsafQGYH-pZ8NRWny6us_2OXPC7fuXMiGEmkq=s0#w=640&h=640",
          "name": "Charles Brubaker"
        },
        {
          "bio": "Lance Fortnow is professor and chair of the School of Computer Science of the College of Computing at the Georgia Institute of Technology. His research focuses on computational complexity and its applications to economic theory.\n\nFortnow received his Ph.D. in Applied Mathematics at MIT in 1989 under the supervision of Michael Sipser. Before he joined Georgia Tech in 2012, Fortnow was a professor at Northwestern University, the University of Chicago, a senior research scientist at the NEC Research Institute and a one-year visitor at CWI and the University of Amsterdam. Since 2007, Fortnow holds an adjoint professorship at the Toyota Technological Institute at Chicago.",
          "image": "https://lh4.ggpht.com/xVV8yeiVvGIjPlPThuGBshfk8isq1trwRQkkauUbKbQ1QTDDZZ0h9bVCIEcy4v1MWUoPX18XDYaKy3u8bOE7=s0#w=175&h=225",
          "name": "Lance Fortnow"
        },
        {
          "bio": "H. Venkateswaran obtained his Ph.D. in Computer Science from the University of Washington in 1986.  He then joined the faculty of Georgia Institute of Technology as an Assistant Professor, where he has pursued his research interests in \nComplexity Theory, Information Security, and Parallel Computation.  A renowned teacher on campus, he was awarded \"The William A \u201cGus\u201d Baird Faculty Teaching Award\" in 2008.",
          "image": "https://lh6.ggpht.com/E4OTjpeu9RdAsmFNcxZTQzRGCM32AfM6Z54Go1S35uBBXv4CYZ__fPngxbIReUh-g0d3QTrXsV94T2UZr9Y=s0#w=140&h=198",
          "name": "Hariharan Venkateswaran"
        }
      ],
      "subtitle": "The Power and Limitation of Algorithms",
      "key": "ud061",
      "image": "https://lh6.ggpht.com/vYYjAYFZd3PyNKSsdHNQWCRx4BK4eNnc1-rEn956UjR2e1PyA9UMeFXE-Z08yNGaz4nPtZJR4nQcTe0WhwUl=s0#w=1724&h=1060",
      "expected_learning": "You will learn a wealth of tools and techniques that will help you recognize when problems you encounter in the real-world are intractable and when there an efficient solution. This can save you countless hours that otherwise would have been spent on a fruitless endeavor or in re-inventing the wheel.",
      "featured": false,
      "teaser_video": {"youtube_url": ""},
      "title": "Computability, Complexity & Algorithms",
      "required_knowledge": "Students are expected to have a solid grasp of the basics of discrete mathematics.  Discrete Mathematics and Its Applications by Ken Rosen provides an excellent background for this course. \n\nIf you answer \u201cno\u201d to any of the following questions, it may be beneficial to acquire background knowledge concurrently or prior to taking the course.\n\n1. Can you show that the sum of the first n numbers is n(n+1)/2? Can you give the proof as an induction on n?\n2. Can you give an O(n log n) algorithm for sorting n numbers?\n3. Can you describe the difference between breadth-first and depth-first search?\n4. Given an nxn matrix A and an n-dimensional vector b, can you give a polynomial-time algorithm to find a vector x such that Ax=b?",
      "syllabus": "### Lesson 1: Computability\n* Languages & Countability\n* Turing Machines\n* The Church-Turing Thesis\n* Universality\n* Undecidability\n\n### Lesson 2: Complexity\n* P and NP\n* NP-Completeness\n* NP-Complete Problems\n* The Golden Ticket\n\n### Lesson 3: Algorithms\n* Dynamic Programming\n* Fast Fourier Transform\n* Maximum Flow\n* Maximum Bipartite Matching\n* Linear Programming\n* Duality\n* Randomized Algorithms\n* Approximation Algorithms",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/ud061?utm_medium=referral&utm_campaign=api",
      "project_name": "",
      "full_course_available": false,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh4.ggpht.com/nGlPuZaZ6BbR23QfhSVNT_Sd_U45RnUECVGhx-cKIlo3D_Onofn-nWpV3sEYEQsczb7tC4JhggdGYyhAAQ4I=s0#w=130&h=60",
          "name": "Georgia Institute of Technology"
        }
      ],
      "tracks": ["Georgia Tech Masters in CS"],
      "banner_image": "https://lh3.ggpht.com/Io-C7QzxN-8XpqpZzT7SFE_mcdlJd_xemjPCW8nY4hQzzStA6Vtfsdattuq3pFr3xysJWmluxjUFlZrZ5p4=s0#w=2340&h=484",
      "short_summary": "Learn tools and techniques that will help you recognize when problems you encounter are intractable and when there an efficient solution.",
      "starter": false,
      "level": "advanced",
      "expected_duration_unit": "",
      "summary": "<i>This class is offered as CS6505 at Georgia Tech where it is a part of the [Online Masters Degree (OMS)](http://www.omscs.gatech.edu/). Taking this course here will not earn credit towards the OMS degree.</i>\n\nIn this course, we will ask the big questions, \u201cWhat is a computer? What are the limits of computation? Are there problems that no computer will ever solve? Are there problems that can\u2019t be solved quickly? What kinds of problems can we solve efficiently and how do we go about developing these algorithms?\u201d Understanding the power and limitations of algorithms helps us develop the tools to make real-world computers smarter, faster and safer.",
      "expected_duration": 0
    },
    {
      "instructors": [
        {
          "bio": "Ashok Goel is a professor of Computer Science and Cognitive Science at Georgia Tech in the School of Interactive Computing. His lab, the Design & Intelligence Lab, is at the forefront of conducting research into computational design, discovery, and creativity. The goals of his research are to understand human creativity in conceptual design of complex systems as well as scientific problem solving, to develop interactive tools for aiding people in such creative tasks, and to invent computational systems that are themselves creative.",
          "image": "https://lh6.ggpht.com/FWTB_Iz25aXF3mIkvJ-eTohPXe5GAvusgBkroJxXNTlqmYndl23AsoB8Nph8uBMTcMx5DCTOAv3a4wvlCQ=s0#w=718&h=718",
          "name": "Ashok Goel"
        }
      ],
      "subtitle": "The Core of Artificial Intelligence",
      "key": "ud409",
      "image": "https://lh3.ggpht.com/-JBocyEV8fz8jHy4stIq_HVt-CqCNpvmxwUQuOT7UMiM5zRJ6-5lDI92eUL6Ibvogdhvq2TmpHeR58y9jQqh=s0#w=1724&h=1060",
      "expected_learning": "At the conclusion of this class, you will be able to accomplish three primary tasks. First, you will be able to design and implement a knowledge-based artificial intelligence agent that can address a complex task using the methods discussed in the course. Second, you will be able to use this agent to reflect on the process of human cognition. Third, you will be able to use both these practices to address practical problems in multiple domains.",
      "featured": false,
      "teaser_video": {"youtube_url": ""},
      "title": "Knowledge-Based AI: Cognitive Systems",
      "required_knowledge": "A good course on computer programming such as CS 1332 or Udacity\u2019s CS 101 is beneficial for students. An introductory course on Artificial Intelligence, such as Georgia Tech's CS 3600 or CS 6601, is recommended but not required.\n\nTo succeed in this course, you should be able to answer 'Yes' to the following four questions:\n     \n1. Are you comfortable with computer programming?\n2. Are you familiar with concepts of data structures and object-oriented programming, such as inheritance and polymorphism?\n3. Are you familiar with concepts of algorithms, such as sorting and searching algorithms?\n4. Are you confident with either Java or Python?",
      "syllabus": "### Unit 1: Introduction to KBAI and Cognitive Systems.\n- Where Knowledge-Based AI fits into AI as a whole\n- Cognitive systems: what are they?\n- AI and cognition: how are they connected?\n\n### Unit 2: Fundamentals\n- Semantic Networks\n- Generate & Test\n- Means-Ends Analysis\n- Problem Reduction\n- Production Systems\n\n### Unit 3: Common Sense Reasoning\n- Frames\n- Understanding\n- Common Sense Reasoning\n- Scripts\n\n### Unit 4: Planning\n- Logic\n- Planning\n\n### Unit 5: Learning\n- Learning by Recording Cases\n- Incremental Concept Learning\n- Classification\n- Version Spaces & Discrimination Trees\n\n### Unit 6: Analogical Reasoning\n- Case-Based Reasoning\n- Explanation-Based Learning\n- Analogical Reasoning\n\n### Unit 7: Visuospatial Reasoning\n- Constraint Propagation\n- Visuospatial Reasoning\n\n### Unit 8: Design & Creativity\n- Configuration\n- Diagnosis\n- Design\n- Creativity\n\n### Unit 9: Metacognition\n- Learning by Correcting Mistakes\n- Meta-Reasoning\n- AI Ethics",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/ud409?utm_medium=referral&utm_campaign=api",
      "project_name": "",
      "full_course_available": false,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh4.ggpht.com/nGlPuZaZ6BbR23QfhSVNT_Sd_U45RnUECVGhx-cKIlo3D_Onofn-nWpV3sEYEQsczb7tC4JhggdGYyhAAQ4I=s0#w=130&h=60",
          "name": "Georgia Institute of Technology"
        }
      ],
      "tracks": ["Georgia Tech Masters in CS"],
      "banner_image": "https://lh5.ggpht.com/DV_nU5WyiUQQkG0YLTv9uvkEJMqYPmsTBSOdcq_vwRt23_yT3GoLDPCiNTODkLWUwv2UNyh1aaJjlHjQGm4=s0#w=4680&h=968",
      "short_summary": "The twin goals of knowledge-based artificial intelligence (AI) are to build AI agents capable of human-level intelligence and gain insights into human cognition.",
      "starter": false,
      "level": "advanced",
      "expected_duration_unit": "weeks",
      "summary": "<i>This class is offered as CS7637 at Georgia Tech where it is a part of the [Online Masters Degree (OMS)](http://www.omscs.gatech.edu/). Taking this course here will not earn credit towards the OMS degree.</i>\n\nThis is a core course in artificial intelligence. It is designed to be a challenging course, involving significant independent work, readings, assignments, and projects. It covers structured knowledge representations, as well as knowledge-based methods of problem solving, planning, decision-making, and learning.\n\nThe class is organized around three primary learning goals. First, this class teaches the concepts, methods, and prominent issues in knowledge-based artificial intelligence. Second, it teaches the specific skills and abilities needed to apply those concepts to the design of knowledge-based AI agents. Third, it teaches the relationship between knowledge-based artificial intelligence and the study of human cognition.",
      "expected_duration": 7
    },
    {
      "instructors": [
        {
          "bio": "Dr Prvulovic's research focuses on architectural (hardware) support for program monitoring, debugging, and security, particularly in multi-threaded and multi-core systems. In general, the goal of his research is to make both hardware and software more reliable and secure. He is the area coordinator for the Computer Architecture area in the School of Computer Science at Georgia Tech. Dr. Prvulovic received his Ph.D. from the University of Illinois at Urbana-Champaign in 2003. He is a Senior Member of ACM and IEEE and is currently serving as the Secretary-Treasurer of ACM SIGMICRO.",
          "image": "https://lh4.ggpht.com/MD0yCnEvPrPakbmtTJCEVd5FXldeF-icElFdlAo02iOru2oxJUuK5Cnzp8onJMnaLpn8Mx11hu7_voJGBQ=s0#w=2136&h=2372",
          "name": "Milos Prvulovic"
        }
      ],
      "subtitle": "Pipelines, Caches, and MultiCores",
      "key": "ud007",
      "image": "https://lh6.ggpht.com/B1ND8fPrO0w0c7DZKdolG_brq4519bpZD8c93pETdLHXJZ-RTwDV4U2ODrMjQGA3wsecR-AvfqQQGPY-xg=s0#w=1725&h=1060",
      "expected_learning": "You will explore the fascinating field of computer architecture, studying the many methods developed to enhance computer performance.  The trade-offs and compromises associated with each design and their effects on processor development is a captivating story that will make you a better computer scientist, regardless of your field of study.",
      "featured": false,
      "teaser_video": {"youtube_url": ""},
      "title": "High Performance Computer Architecture",
      "required_knowledge": "You must be familiar with Assembly code, the C or C++ programming language, Unix or Linux, and the basics of pipelining.",
      "syllabus": "###Lesson 1: Introduction and Trends\n- Computer Architecture & Tech Trends\n- Moore's Law\n- Processor Speed, Cost, Power\n- Power Consumption\n- Fabrication Yield\n\n###Lesson 2: Performance Metrics and Evaluation\n\n- Measuring Performance\n- Benchmarks Standards\n- Iron Law of Performance\n- Amdahl's Law\n- Lhadma's Law\n\n###Lesson 3: Pipelining Review\n- Pipeline CPI\n- Processor Pipeline Stalls\n- Data Dependencies\n- Pipelining Outro\n\n###Lesson 4: Branches\n- Branch Prediction\n- Direction Predictor\n- Hierarchical Predictors \n- PShare\n\n###Lesson 5: Predication\n- If Conversion\n- Conditional Move\n- MOVc Summary\n\n###Lesson 6: Instruction Level Parallelism (ILP)\n- ILP Intro\n- RAW Dependencies \n- WAW Dependencies \n- Duplicating Register Values \n- Instruction Level Parallelism (ILP) \n \n###Lesson 7: Instruction Scheduling\n- Improving IPC\n- Tomasulo's Algorithm \n- Load and Store Instructions \n\n###Lesson 8: ReOrder Buffer\n- Exceptions in Out Of Order Execution \n- Branch Misprediction \n- Hardware Organization with ROB \n\n###Lesson 9: Memory Ordering\n- Memory Access Ordering\n- When Does Memory Write Happen \n- Out of Order Load Store Execution \n- Store to Load Forwarding \n- LSQ, ROB, and RS \n\n###Lesson 9: Memory\n- How Memory Works\n- One Memory Bit SRAM \n- One Memory Bit DRAM \n- Fast Page Mode \n- Connecting DRAM To The Processor  \n\n###Lesson 10: Multi-Processing \n- Flynn's Taxonomy of Parallel Machines \n- Multiprocessor Needs Parallel Programs! \n- Centralized Shared Memory \n- Distributed Shared Memory \n- Message Passing Vs Shared Memory \n- Shared Memory Hardware \n- SMT Hardware Changes \n- SMT and Cache Performance",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/ud007?utm_medium=referral&utm_campaign=api",
      "project_name": "",
      "full_course_available": false,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh4.ggpht.com/nGlPuZaZ6BbR23QfhSVNT_Sd_U45RnUECVGhx-cKIlo3D_Onofn-nWpV3sEYEQsczb7tC4JhggdGYyhAAQ4I=s0#w=130&h=60",
          "name": "Georgia Institute of Technology"
        }
      ],
      "tracks": ["Georgia Tech Masters in CS"],
      "banner_image": "https://lh4.ggpht.com/7PS97Ep-0v5syxUFf5asuuSSCfODvaGnVe0xUe8XJl5lCmIWNAQAwLn_VJzfLdCxEMsXLP26FxNHM607-A=s0#w=2340&h=484",
      "short_summary": "The HPCA course covers performance measurement, pipelining, and improved parallelism through various means.",
      "starter": false,
      "level": "advanced",
      "expected_duration_unit": "",
      "summary": "<i>This class is offered as CS6290 at Georgia Tech where it is a part of the [Online Masters Degree (OMS)](http://www.omscs.gatech.edu/). Taking this course here will not earn credit towards the OMS degree.</i>\n\nThe course begins with a lesson on performance measurement, which leads to a discussion on the necessity of performance improvement.\n\nPipelining, the first level of performance refinement, is reviewed. The weaknesses of pipelining will be exposed and explored, and various solutions to these issues will be studied. The student will learn hardware, software, and compiler based solutions to these issues.",
      "expected_duration": 0
    },
    {
      "instructors": [
        {
          "bio": "After decades in the commercial Health Informatics (HIT) industry, Mark joined Georgia Tech in 2007.  In addition to teaching, he helps facilitate interdisciplinary research in healthcare delivery. He is involved with the Tennenbaum Institute in research exploring healthcare process mining. He is also involved in community outreach aimed at the wider and deeper adoption of HIT to improve the quality and efficiency of care delivery. He has authored two books on HIT, is an Associate Editor of the IEEE Journal of Biomedical and Health Informatics and a contributor to the Information Week HealthCare blog.\n\nMark received his BS degree from MIT and his MD degree from the Medical University of South Carolina (MUSC).",
          "image": "https://lh4.ggpht.com/FGGhFQ-Uzu6m-tETR1DwsKjXLokQVVopJ8HNXNxoOFKnXQj-kwPweWf3zyUvqrBEsROeZUvyR_yOkmj1tHQ=s0#w=300&h=300",
          "name": "Mark Braunstein"
        }
      ],
      "subtitle": "Applications and Analysis",
      "key": "ud809",
      "image": "https://lh4.ggpht.com/7s3hjNWMv_mWstvK72kQn-L-5QxkIoIxNUIt6PoYLtn9F_Rtk5FFn2emBuwBqccNTgmSSc0M9vatJnYKx9gQ=s0#w=872&h=536",
      "expected_learning": "Healthcare is the largest industry in the US.  Spurred by new federal programs and incentives, the adoption of health IT is growing very rapidly, leading to many new career and entrepreneurial opportunities. The increasing use of modern web, mobile and sensor technologies in health informatics is also growing rapidly and is leading to many new and innovative approaches.  Students who are trained and well-qualified in this field are in great demand.",
      "featured": false,
      "teaser_video": {"youtube_url": ""},
      "title": "Health Informatics in the Cloud",
      "required_knowledge": "The course is self-contained so there are no academic prerequisites. A knowledge of web programming (e.g. Java, Javascript, C++, C#) is required by at least some members of each team to do the team project.",
      "syllabus": "###Lesson 1: The US Healthcare System\nThis lesson will discuss unique and the complex nature of the US healthcare system: its key problems, the specific challenges presented by chronic disease, the major disconnect between the health system\u2019s capabilities and the demands of chronic disease management, and the hope that a combination of new incentives, health IT adoption, and new models of care can bridge this disconnect leading to a more efficient, effective, safer and more patient-centered US system of care.\n###Lesson 2: Federal Policies & Initiatives\nThis lesson will focus on the important details of the specific programs that the federal government has put into place to spur health IT adoption by eligible providers and hospitals as well as the role played by financial incentives that reward performance, rather than the quantity of procedures. \n###Lesson 3: Health Information Exchange\nThis lesson will focus on the rationale for and the major challenges of health information exchange (HIE). We will discuss the various ways of classifying HIE, how to differentiate the various HIE architectures, and the Indiana Health Information Exchange as a premier example including descriptions of its key services. We will discuss new approaches and technologies with a particular emphasis on Direct HIE, a new technology based on secure email and encrypted attachments.\n###Lesson 4: Privacy, Security and Trust\nThis lesson focuses on the keys issues of privacy, security, and trust in a world of digital records and health information exchange. Students will understand the key role that patient engagement plays in chronic disease prevention and management and the concerns patients have about sharing their health data. They will also explore the various privacy consent models. Data segmentation will be discussed as a key challenge for obtaining patient consent under what may be the most acceptable model. The concept of public key infrastructure (PKI) including the roles of the public key, private key, registration authority and certificate authority will be covered.\n###Lesson 5A: Data Standards\nWe divide the discussion of standards into those for health data and those for achieving its sharing by fostering interoperability. This lesson  focuses on data standards after reviewing the rationale for standards and the evolutions that have been taking place in their use, technology and structure. Students will be able to recognize the difference between a classification and an ontology.  They will be familiar with the key data standards (including ICD, CPT, LOINC and SNOMED). They will also gain an overview of the differences between standards based on EDI/X12 and XML.\n###Lesson 5B: Interoperability Standards\nThis lesson builds on Lesson 5A on data standards to show how these data are transmitted within messages using HL7 and packaged into CCDA-based clinical documents for sharing via HIE. We\u2019ll briefly introduce even more advanced standards with a particular emphasis on clinical decision support (CDS, an important technology for the future) and the key elements of and remaining challenges with standards to support CDS. We\u2019ll also discuss more facile next generation approaches based on web technologies and approaches. \n###Lesson 6: Clinical Data Collection and Visualization Challenges\nStudents should understand the key roles that data plays in medical practice and the root causes of common data quality issues in general and the specific root causes of data quality issues with respect to electronic health records. They should understand the high level challenges of efficiently and accurately collecting high quality, comprehensive clinical data from physicians and of visualizing digital health data in a way that supports the provider\u2019s mental model. They should understand the key roles that information technology plays in the future vision of healthcare.\n###Lesson 7: Empowering the Patient\nStudents should understand the key role that support for patients can play so they can achieve behavior change, adhere to their prescribed treatments and generate data to help their providers more continuously manage their chronic diseases. They should understand patient interests. They should understand the key information technology tools now available to patients including patient health records, portals, social networking, in home technologies and mobile devices and sensors. They should have a detailed functional understanding of personal health records and their potential as app platforms. They should understand the potential role of social networking in patient education and care management. They should understand the various telemedicine modalities being developed and offered for use by patients at home.\n###Lesson 8: Population Health Management\nStudents should understand the difference between individual patient management, population management and public health. They should understand the technologies for aggregating data, the kinds of data that are collected and the kinds of reports that are required for population and public health management.\n###Lesson 9: Data Query in a Federated Environment\nStudents should understand the challenges of data query and aggregation in an environment where care providers are using disparate and non-interoperable EHRs. They should be familiar with and understand the differences among the distributed query technologies. They should be familiar with the distributed query standards and the various open source query frameworks reviewed in this lesson.\n###Lesson 10: Big Data Meets Healthcare\nStudents should understand the concept of \u201cbig data\u201d; the common technical approaches to modeling and simulation and the common applications of each. They should be familiar with the specific case studies of analytic applications to healthcare problems as diverse as improved clinical decision support, understanding clinical processes, modeling care spaces and providing optimal patient-specific treatments.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/ud809?utm_medium=referral&utm_campaign=api",
      "project_name": "",
      "full_course_available": false,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh4.ggpht.com/nGlPuZaZ6BbR23QfhSVNT_Sd_U45RnUECVGhx-cKIlo3D_Onofn-nWpV3sEYEQsczb7tC4JhggdGYyhAAQ4I=s0#w=130&h=60",
          "name": "Georgia Institute of Technology"
        }
      ],
      "tracks": ["Georgia Tech Masters in CS"],
      "banner_image": "https://lh6.ggpht.com/K-elxed-Az5GGzJrKe_nkNDKNdA7VFpb4kGOf5RacCHXhYW3NxQIUUqhabBqis-MEyj6j1hROKu-fhDT4JI=s0#w=2340&h=484",
      "short_summary": "This survey course provides a broad, forward-facing overview of contemporary health informatics within the context of the US healthcare delivery system.",
      "starter": false,
      "level": "beginner",
      "expected_duration_unit": "weeks",
      "summary": "<i>This class is offered as CS6440 at Georgia Tech where it is a part of the [Online Masters Degree (OMS)](http://www.omscs.gatech.edu/). Taking this course here will not earn credit towards the OMS degree.</i>\n\nThis is a survey course designed to provide a broad, forward-facing overview of contemporary health informatics, a specialized field of computing that seeks to improve the quality and efficiency of healthcare delivery. To understand health informatics (HIT) you also need to have at least a basic understanding of the complex and highly regulated US healthcare industry. The course is designed for students from diverse backgrounds and who have not been previously exposed to HIT. It is divided into three sections:\n\nThe US healthcare delivery and the key role of the federal government in promoting HIT adoption\n\nThe core technologies that drive all contemporary HIT systems and tools\n\nThe real world applications of HIT from electronic medical and personal health records to exploiting digital data aggregated from them for research and other purposes",
      "expected_duration": 5
    },
    {
      "instructors": [
        {
          "bio": "Nick Feamster is an associate professor in the College of Computing at Georgia Tech. He received his Ph.D. in Computer Science from MIT in 2005. His research focuses on many aspects of computer networking and networked systems, including the design, measurement, and analysis of network routing protocols, network operations and security, and anonymous communication systems. In 2008, he received the Presidential Early Career Award for Scientists and Engineers (PECASE) for his contributions to cybersecurity, notably spam filtering. His honors include the Technology Review 35 \"Top Young Innovators Under 35\" award, a Sloan Research Fellowship, the NSF CAREER award, the IBM Faculty Fellowship, and award papers at SIGCOMM 2006, NSDI 2005, and Usenix Security 2002 and 2001.",
          "image": "https://lh5.ggpht.com/EQzGD5x-gsn8-9s4HsbJDg32LBDw3vLtr7iOQq4skGYiGR6qLqukM8mlfztHHkfedK4WNPIW2V3l_vaGsoA=s0#w=426&h=426",
          "name": "Nick Feamster"
        }
      ],
      "subtitle": "Security and Software Defined Networking",
      "key": "ud436",
      "image": "https://lh3.ggpht.com/PwqnZYeOVbWr4a3Qn3WkmZNzRlf6acf7EbQoGCBAqrmn1pOFrsX5vVr4WUHGTOaqslvjDY864Q8X2-o9ENU=s0#w=1725&h=1060",
      "expected_learning": "Want to build on your Computer Networking knowledge or move into Network Engineering positions such as Systems Admin, Network Admin or Technical Operations (WebOps)? If so, this is the class for you.\n\nComputer Networking takes a hands-on approach to teaching very technical material, using Mininet (a network emulator) to show you how a computer network functions, what factors contribute to its efficiency and how to overcome inherent limitations.",
      "featured": false,
      "teaser_video": {"youtube_url": ""},
      "title": "Computer Networking",
      "required_knowledge": "The ideal preparation for this course would be the successful completion of an undergraduate level Computer Networking course. An understanding of the TCP/IP protocol and the its layer model is recommended. Basic knowledge of python (such as through <a href= \"https://www.udacity.com/course/cs101\">Intro to Computer Science</a>) is required.\n\nYou should be comfortable with the implementation of basic search algorithms and a working knowledge of Linux and virtual machines is recommended.",
      "syllabus": "### Lesson 1: Introduction\n\n- Computer Networking Overview\n- What This Class is Not About\n\n\n### Lesson 2: Architecture & Principles\n\n-\tA Brief History of the Internet\n-\tArchitectural Design Principles\n-\tPacket Switching\n-\tFile Transfer\n-\tEnd to End Argument Violations\n\n### Lesson 3: Switching\n\n-\tSwitching and Bridging\n-\tBootstrapping: Networking Two Hosts\n-\tARP: Address Resolution Protocol\n-\tInterconnecting LANs with Hubs\n-\tSwitches: Traffic Isolation\n-\tSpanning Tree\n-\tSwitches vs. Routers\n-\tBuffer Sizing for a TCP Sender\n\n\n### Lesson 4: Routing\n\n-\tInternet Routing\n-\tIntra-AS Topology\n-\tDistance-Vector Routing\n-\tLink State Routing\n-\tInterdomain Routing\n-\tIGP vs. iBGP\n-\tBGP Route Selection\n-\tMultiple Exit Discriminator (MEI)\n-\tInterdomain Routing Business Models\n\n\n### Lesson 5: Naming, Addressing & Forwarding\n\n-\tIP Addressing\n-\tPre-1994: \u201cClassful\u201d Addressing\n-\tIP Address Allocation\n-\tClassless Interdomain Routing (CIDR)\n-\tMultihoming Frustrates Aggregation\n-\tAddress Lookup Using Tries\n-\tMemory Efficiency and Fast Lookup\n-\tAlternatives to LPM with Tries\n-\tNAT and IPv6\n-\tNetwork Address Translation (NAT)\n\n### Lesson 5.1: Router Design Basics\n\n-\tRouter Design\n-\tBasic Router Architecture\n-\tDecision: Crossbar Switching\n-\tSwitching Algorithm: Maximal Matching\n-\tHead of Line Blocking\n-\tScheduling and Fairness\n-\tMax-Min Fairness\n\n### Lesson 5.2: Domain Name System (DNS)\n\n-\tRecord Types\n-\tExamples (using \u201cdig\u201d)\n-\tLookup IP Address\n\n### Lesson 6: Congestion Control & Streaming\n\n-\tCongestion Control\n-\tAIMD (TCP Congestion Control)\n-\tData Centers & TCP \u201cIncast\u201d\n-\tBarrier Synchronization & Idle Time\n-\tMultimedia & Streaming\n-\tDigitizing Audio & Video\n-\tStreaming Video\n-\tSkype\n\n\n### Lesson 7: Rate Limiting and Traffic Shaping\n\n-\tTraffic Classification & Shaping\n-\tSource Classification \n-\tLeaky Bucket Traffic Shaping\n-\t(r, t) Traffic Shaping\n-\tShaping Bursty Traffic Patterns\n-\tPower Boost\n-\tEffects on Latency\n-\tBuffer Bloat\n-\tPacket Monitoring\n\n### Lesson 8: Content Distribution\n\n-\tThe Web and Caching\n-\tHTTP Requests\n-\tPersistent Connections\n-\tContent Distribution Networks (CDNs)\n-\tServer Selection\n-\tContent Routing\n-\tBit Torrent\n-\tSolution to Freeriding: \u201cChoking\u201d\n-\tDistributed Hash Tables\n-\tConsistent Hashing\n\n### Lesson 9: Software Defined Networking\n\n-\tNetwork Management Overview\n-\tSoftware Defined Networking (SDN)\n-\tControl and Data Planes\n-\tDifferent SDN Controllers\n-\tNOX: Overview\n-\tRyu, Floodlight, Nox and Pox\n-\tCustomizing Control\n\n### Lesson 10: Traffic Engineering\n\n-\tTraffic Engineering Overview\n-\tInterdomain Traffic Engineering\n-\tMeasuring, Modeling and Controlling Traffic\n-\tLink Utilization Function\n-\tBGP in Interdomain Traffic Engineering\n-\tMultipath Routing\n-\tData Center Networking\n-\tValiant Load Balance\n-\tJellyfish Data Center Topology\n\n### Lesson 11: Network Security\n\n-\tInternet is Insecure\n-\tResource Exhaustion \n-\tRouting Security\n-\tOrigin and Path Authentication\n-\tDNS Security\n-\tDNS Cache Poisoning\n\n### Lesson 11.1: Internet Worms\n\n-\tViruses and Internet Worms\n-\tInternet Worm Lifecyle\n-\tFirst Worm: \u201cMorris\u201d Worm\n-\tWorm Outbreaks in Detail \n-\tModeling Fast-Spreading Worms\n\n### Lesson 11.2: Spam\n\n-\tSpam\n-\tIP Blacklisting\n\n### Lesson 11.3: Denial of Service (DoS) Attacks\n\n-\tTCP 3-Way Handshake\n-\tInferring Denial of Service Activity using Backscatter\n-\tAutomated DoS Attack Mitigation\n-\tMTPCP",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/ud436?utm_medium=referral&utm_campaign=api",
      "project_name": "",
      "full_course_available": true,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh4.ggpht.com/nGlPuZaZ6BbR23QfhSVNT_Sd_U45RnUECVGhx-cKIlo3D_Onofn-nWpV3sEYEQsczb7tC4JhggdGYyhAAQ4I=s0#w=130&h=60",
          "name": "Georgia Institute of Technology"
        }
      ],
      "tracks": [
        "Web Development",
        "Georgia Tech Masters in CS"
      ],
      "banner_image": "https://lh6.ggpht.com/75-re6CeBrGq3I5BnqAZXnflSNz2bywhosDxGrEMwrN1aiajVO3DzYMIWgfBYaOISw-CTqOMzPCvGlf_Kg=s0#w=4680&h=968",
      "short_summary": "This is an advanced Computer Networking course that delves into the latest concepts and tools used by the CN industry.",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "months",
      "summary": "<i>This class is offered as CS6250 at Georgia Tech where it is a part of the [Online Masters Degree (OMS)](http://www.omscs.gatech.edu/). Taking this course here will not earn credit towards the OMS degree.</i>\n\nThis course covers advanced topics in Computer Networking such as Software-Defined Networking (SDN), Data Center Networking and Content Distribution. The course is divided into three parts:\n\nPart 1 is about the implementation, design principles and goals of a Computer Network and touches upon the various routing algorithms used in CN (such as link-state and distance vector). \n\nPart 2 talks about resource control and content distribution in Networking Applications. It covers Congestion Control and Traffic Shaping.\n\nPart 3 deals with the operations and management of computer networks encompassing SDN's (Software Defined Networks), Traffic Engineering and Network Security.",
      "expected_duration": 3
    },
    {
      "instructors": [
        {
          "bio": "Alessandro (Alex) Orso is a Professor in the College of Computing at Georgia Tech. He received his M.S. and Ph.D. degrees from Politecnico di Milano, Italy. Alex's area of research is software engineering, with emphasis on software testing and program analysis, and he has been teaching software engineering related classes in both academia and industry for over 15 years (and in three different languages). His interests include the development of techniques and tools for improving software reliability, security, and trustworthiness, and the validation of such techniques on real-world systems.",
          "image": "https://lh4.ggpht.com/XA7t1gZdsKirwBKHkc3acjJsBp4qk4ZEJshAxYEF2Poi3eFHu_3ZLSmF_tceuJXX1JmydByZMbVGH_GcYio=s0#w=484&h=582",
          "name": "Alex Orso"
        }
      ],
      "subtitle": "From Idea to Product",
      "key": "ud805",
      "image": "https://lh4.ggpht.com/ghBERRE992L2Ueec3QyDH5xPVoNztaQvTTZ9POSDbZRAmYXoFiGN2TROmzJnP8hWIB05NM219nDWQrnSVw=s0#w=1724&h=1060",
      "expected_learning": "Software engineering isn\u2019t just about programming. It isn\u2019t just about building a technology stack.\n\nThis course introduces the idea of software engineering as an iterative, systematic process. You will learn to use Github and Eclipse as you get introduced to the development life cycle, design processes and software testing. \n\nSoftware Development Processes will show you the skills and processes needed to complement technical understanding of software products in order to make you a more effective developer in an engineering team.",
      "featured": false,
      "teaser_video": {"youtube_url": ""},
      "title": "Software Development Process",
      "required_knowledge": "A strong familiarity with Android development (perhaps through [Developing Android Apps](https://www.udacity.com/course/ud853)) is expected.",
      "syllabus": "### Lesson 1: Introduction and Overview\n\n- Importance of Software Engineering\n- Discipline of Software Engineering\n- The Software Crisis\n- Software Phases\n\n### Lesson 2: Life Cycle Models\n\n- Introduction with Barry Bohem\n- Requirements Engineering\n- Design\n- Maintenance \n- Software Process Model Introduction\n- Waterfall Process\n- Spiral Process\n- Evolutionary Prototyping Process\n- Rational Unified Process \n- Agile Process\n- Choosing a Model\n- Lifecycle Documents\n\n\n### Lesson 3: Integrated Development Environment\n\n- Eclipse Introduction\n- IDE Overview\n- Plug-Ins\n- Eclipse Demo: Create Java Project\n- Eclipse Demo: Create a Class\n- Eclipse Demo: Run Configuration\n- Eclipse Demo: Debugging\n\n\n### Lesson 4: Version Control Systems\n\n- Interview with John Britton\n- Version Control System Introduction\n- Two Main Types of VCS\n- Introduction to Git\n- Git Workflow\n- Git Demo: Intro to Git\n- Git Demo: Git + Eclipse\n- Git Demo: Github\n- Git Recap: Local Repositories\n- Git Recap: Remote Repositories\n\n\n### Lesson 5: Requirements Engineering\n\n- Interview with Jane Cleland-Huang\n- General RE Definition\n- Software Intensive Systems\n- Functional and Nonfunctional Requirements\n- User and System Requirements\n- Modeling Requirements\n- Analyzing Requirements\n- Requirements Prioritization\n- Requirements Engineering Process\n\n\n### Lesson 6: OO Software and UML\n\n- Object Orientation Introduction\n- UML Structural Diagrams: Class Diagrams\n- Class Diagram: Creation Tips\n- UML Structural Diagrams: Component Diagram\n- UML Structural Diagram: Deployment Diagram\n- UML Behavioral Diagram: Use Case\n- Use Case Diagram: Creation Tips\n- UML Behavioral Diagrams: Sequence\n- UML Behavioral Diagrams: State Transition Diagram\n\n### Lesson 7: Software Architecture\n\n- Interview with Nenad Medvidovic \n- What is Software Architecture?\n- Prescriptive vs. Descriptive Architecture \n- Architectural Evolution\n- Architectural Degradation \n- Architectural Recovery\n- Architectural Elements\n- Components, Connectors, and Configuration\n- Deployment Architectural Perspective\n\n### Lesson 8: A Tale of Analysis and Design \n\n- Analyzing Requirements\n- Refining Classes and Attributes\n- Adding Attributes\n- Identifying Operations\n- Refining the Class Diagram\n\n### Lesson 9: Design Patterns\n\n- Patterns Catalogue\n- Pattern Format\n- Factory Method Pattern\n- Strategy Pattern\n- Choosing a Pattern\n- Negative Design Patterns\n\n\n### Lesson 10: Unified Software Process\n\n- Use-Case Driven\n- Inception Phase\n- Elaboration Phase\n- Construction Phase\n- Transition Phase\n- Phases and Iterations\n\n### Lesson 11: General Concepts\n\n- Failure, Fault and Error\n- Verification Approaches\n- Pros and Cons of Approaches\n- Testing Introduction\n- Testing Granularity Levels\n- Alpha and Beta Testing\n- Black and White Box Testing Introduction\n\n### Lesson 12: Black-Box Testing\n\n- Systematic Functional Testing Approach\n- Test Data Selection\n- Category Partition Method\n- Produce and Evaluate Test Case Specifications\n- Generate Test Cases from Test Case Specifications\n- Model Based Testing\n- Finite State Machines\n\n### Lesson 13: White-Box Testing\n\n- Coverage Criteria Intro\n- Statement Coverage\n- Control Flow Graphs\n- Test Criteria Subsumption\n- MC/DC Coverage\n\n### Lesson 14: Agile Development Methods\n\n- Cost of Change\n- Agile Software Development\n- Extreme Programming (XP)\n- XP\u2019s Values and Principles\n- Test First Development\n- Refactoring\n- Pair Programming\n- Continuous Integration\n- Testing Strategy\n- High Level Scrum Process\n\n### Lesson 15: Software Refactoring\n\n- Reasons to Refactor\n- Refactoring Demo\n- Refactoring Risks\n- Cost of Refactoring\n- When Not to Refactor",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/ud805?utm_medium=referral&utm_campaign=api",
      "project_name": "",
      "full_course_available": true,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh4.ggpht.com/nGlPuZaZ6BbR23QfhSVNT_Sd_U45RnUECVGhx-cKIlo3D_Onofn-nWpV3sEYEQsczb7tC4JhggdGYyhAAQ4I=s0#w=130&h=60",
          "name": "Georgia Institute of Technology"
        }
      ],
      "tracks": [
        "Software Engineering",
        "Georgia Tech Masters in CS"
      ],
      "banner_image": "https://lh4.ggpht.com/NjWk465Bc6rVVGeh2nLZLNxbYwrudFYKz5ayGRFrd0Rr1PwDP-ket4xjpnsRWQJeInYG2dOKQPryj6lgizk=s0#w=4680&h=968",
      "short_summary": "Software Development Processes explores requirements engineering, architecture and design, testing, and software quality in general.",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "months",
      "summary": "<i>This class is offered as CS6330 at Georgia Tech where it is a part of the [Online Masters Degree (OMS)](http://www.omscs.gatech.edu/). Taking this course here will not earn credit towards the OMS degree.</i>\n\nIn SDP, you will learn how to select and implement the ideal software process for your development project. Through Professor Orso's engaging examples and interviews with industry insiders, you will learn both conceptual and practical aspects of software engineering. The course covers requirements engineering, architecture and design, testing and maintenance, and software quality in general. \n\nThe goal of this class is to equip you with the skills necessary to define requirements, set up an integrated development environment (IDE), learn Git (and Github!) and use Unified Modeling Language (UML) to design and build an Android application. We will also examine several testing practices and refactoring techniques that are helpful before the launch of your software project. \n\nWhile everyone working with software should have these skills, they are particularly important for Software Engineers and Engineering Managers.",
      "expected_duration": 3
    },
    {
      "instructors": [
        {
          "bio": "Sebastian Thrun is a Research Professor of Computer Science at Stanford University, a Google Fellow, a member of the National Academy of Engineering and the German Academy of Sciences. Thrun is best known for his research in robotics and machine learning, specifically his work with self-driving cars.",
          "image": "https://lh4.ggpht.com/DG-7wffxjR7WqOHdXavbgsNlJ7ZKL2nuhY7hDiSijK7xISk3mCTgdM-9_JUGRjI-qfTk1iJCL5axjZEZDQ=s0#w=200&h=200",
          "name": "Sebastian Thrun"
        }
      ],
      "subtitle": "Programming a Robotic Car",
      "key": "cs373",
      "image": "https://lh4.ggpht.com/dTaG60Lui_XeUUEDkZsIp7-RP7g6SLNWyHG9bbaZG2yDp24Mnc6R2tjzME5WNLlJdi6IJQM-YCwO_gEzug=s0#w=436&h=268",
      "expected_learning": "This course will teach you probabilistic inference, planning and search, localization, tracking and control, all with a focus on robotics.\n\nAt the end of the course, you will leverage what you learned by solving the problem of a runaway robot that you must chase and hunt down!",
      "featured": false,
      "teaser_video": {"youtube_url": "https://www.youtube.com/watch?v=g-fk3RQiw5Q"},
      "title": "Artificial Intelligence for Robotics",
      "required_knowledge": "Success in this course requires some programming experience and some mathematical fluency. \n\nProgramming in this course is done in Python. We will use some basic object-oriented concepts to model robot motion and perception. If you don\u2019t know Python but have experience with another language, you should be able to pick up the syntax fairly quickly. If you have no programming experience, you should consider taking Udacity\u2019s <a href=\"https://www.udacity.com/course/cs101\" target=\"_blank\">Introduction to Computer Science</a> course before attempting this one.\n\nThe math used will be centered on probability and linear algebra. You don\u2019t need to be an expert in either, but some familiarity with concepts in probability (e.g. probabilities must add to one, conditional probability, and Bayes\u2019 rule) will be extremely helpful. It is possible to learn these concepts during the course, but it will take more work. Knowledge of linear algebra, while helpful, is not required.",
      "syllabus": "### Lesson 1: Localization \n\n-\tLocalization\n-\tTotal Probability\n-\tUniform Distribution\n-\tProbability After Sense\n-\tNormalize Distribution\n-\tPhit and Pmiss\n-\tSum of Probabilities\n-\tSense Function\n-\tExact Motion\n-\tMove Function\n-\tBayes Rule\n-\tTheorem of Total Probability\n\n### Lesson 2: Kalman Filters\n\n-\tGaussian Intro\n-\tVariance Comparison\n-\tMaximize Gaussian\n-\tMeasurement and Motion\n-\tParameter Update\n-\tNew Mean Variance\n-\tGaussian Motion\n-\tKalman Filter Code\n-\tKalman Prediction\n-\tKalman Filter Design\n-\tKalman Matrices\n\n### Lesson 3: Particle Filters\n\n-\tSlate Space\n-\tBelief Modality\n-\tParticle Filters\n-\tUsing Robot Class\n-\tRobot World\n-\tRobot Particles\n\n### Lesson 4: Search\n\n-\tMotion Planning\n-\tCompute Cost\n-\tOptimal Path\n-\tFirst Search Program\n-\tExpansion Grid\n-\tDynamic Programming\n-\tComputing Value\n-\tOptimal Policy\n\n### Lesson 5: PID Control\n\n-\tRobot Motion\n-\tSmoothing Algorithm\n-\tPath Smoothing\n-\tZero Data Weight\n-\tPid Control\n-\tProportional Control\n-\tImplement P Controller\n-\tOscillations\n-\tPd Controller\n-\tSystematic Bias\n-\tPid Implementation\n-\tParameter Optimization\n\n### Lesson 6: SLAM (Simultaneous Localization and Mapping)\n\n-\tLocalization\n-\tPlanning\n-\tSegmented Ste\n-\tFun with Parameters\n-\tSLAM\n-\tGraph SLAM\n-\tImplementing Constraints\n-\tAdding Landmarks\n-\tMatrix Modification\n-\tUntouched Fields\n-\tLandmark Position\n-\tConfident Measurements\n-\tImplementing SLAM\n\n### Runaway Robot Final Project",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/cs373?utm_medium=referral&utm_campaign=api",
      "project_name": "Track and Capture a Runaway Robot",
      "full_course_available": true,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh4.ggpht.com/nGlPuZaZ6BbR23QfhSVNT_Sd_U45RnUECVGhx-cKIlo3D_Onofn-nWpV3sEYEQsczb7tC4JhggdGYyhAAQ4I=s0#w=130&h=60",
          "name": "Georgia Institute of Technology"
        }
      ],
      "tracks": [
        "Software Engineering",
        "Georgia Tech Masters in CS"
      ],
      "banner_image": "https://lh4.ggpht.com/gf28Wow_JdX5nEBm_6pPA8rjUPOr6vugMIbWnJx5gvj2PsyovjZR1kc4Kgxc8MEtOLfJhTANFdmrZg3AqQ=s0#w=4680&h=968",
      "short_summary": "Learn how to program all the major systems of a robotic car. Topics include planning, search, localization, tracking, and control.",
      "starter": false,
      "level": "advanced",
      "expected_duration_unit": "months",
      "summary": "Learn how to program all the major systems of a robotic car from the leader of Google and Stanford's autonomous driving teams. This class will teach you basic methods in Artificial Intelligence, including: probabilistic inference, planning and search, localization, tracking and control, all with a focus on robotics. Extensive programming examples and assignments will apply these methods in the context of building self-driving cars.\n\nThis course is offered as part of the Georgia Tech Masters in Computer Science. The updated course includes a final project, where you must chase a runaway robot that is trying to escape!",
      "expected_duration": 2
    },
    {
      "instructors": [
        {
          "bio": "Shannon is Director of Education at MongoDB, managing MongoDB University's in-person training and free online courses. Prior to joining MongoDB, Shannon was an Associate Professor of Computer Science at Drew University with research interests in user experience, information science, and the semantic web. For the past several years, Shannon has divided his time between academia and industry. He has trained software engineers at Goldman Sachs, designed text-retrieval systems at Morgan Stanley, and built many trading and analytics applications at boutique firms in the financial industry.",
          "image": "https://lh5.ggpht.com/ECvn5UF3nKvyX0RDE-7lZD65L5yTlOxGeIkq1D4Ts2BH-V5-PCMopIwoE9IrDZ_DtZOIEFTyPdEphKNvKw=s0#w=200&h=200",
          "name": "Shannon Bradshaw"
        }
      ],
      "subtitle": "Data Manipulation and Retrieval",
      "key": "ud032",
      "image": "https://lh3.ggpht.com/ll9ungBQPIwG1u5WHYyB_q-CO6gAzJC-fT3xotaS5DV3UbNZ7Xdz6b5T3Jpl7aEfmVEY2gjvkkt7KzWVeIo=s0#w=1724&h=1060",
      "expected_learning": "At the end of the class, students should be able to:\n\n*   Programmatically extract data stored in common formats such as csv, Microsoft Excel, JSON, XML and scrape web sites to parse data from HTML.\n*   Audit data for quality (validity, accuracy, completeness, consistency, and uniformity) and critically assess options for cleaning data in different contexts. \n*   Store, retrieve, and analyze data using MongoDB.\n\n<br />\nThis course concludes with a final project where students incorporate what they have learned to address a real-world data analysis problem.",
      "featured": false,
      "teaser_video": {"youtube_url": ""},
      "title": "Data Wrangling with MongoDB",
      "required_knowledge": "The ideal student should have the following skills:\n\n*   Programming experience in Python or a willingness to read a little documentation to understand examples and exercises throughout the course.\n*   The ability to perform rudimentary system administration on Windows or Unix\n\nAt least some experience using a unix shell or Windows PowerShell will be helpful, but is not required. \n\nNo prior experience with databases is needed.  \n\n**About MongoDB**  \n*This course is developed in conjunction with MongoDB, Inc., the originator and primary contributor to the open source database <a href=\"https://github.com/mongodb\" target=\"_blank\"> MongoDB</a>. MongoDB is the leading NoSQL database. Designed for how we build and run applications today, MongoDB empowers organizations to be more agile and scalable. It enables new types of applications, better customer experience, faster time to market and lower costs.*",
      "syllabus": "### Lesson 1: Data Extraction Fundamentals\n\n- Assessing the Quality of Data\n- Intro to Tabular Formats\n- Parsing CSV\n- Parsing XLS with XLRD\n- Intro to JSON\n- Using Web APIs\n\n### Lesson 2: Data in More Complex Formats\n\n- Intro to XML\n- XML Design Principles\n- Parsing XML\n- Web Scraping\n- Parsing HTML\n\n\n### Lesson 3: Data Quality \n\n- What is Data Cleaning?\n- Sources of Dirty Data\n- Measuring Data Quality\n- A Blueprint for Cleaning\n- Auditing Validity \n- Auditing Accuracy\n- Auditing Completeness\n- Auditing Consistency\n- Auditing Uniformity\n\n### Lesson 4: Working with MongoDB\n\n- Data Modelling in MongoDB\n- Introduction to PyMongo\n- Field Queries\n- Projection Queries\n- Getting Data into MongoDB\n- Using mongoimport\n- Operators like $gt, $lt, $exists, $regex\n- Querying Arrays and using $in and $all Operators\n- Changing entries: $update, $set, $unset\n\n### Lesson 5: Analyzing Data\n\n- Examples of Aggregation Framework \n- The Aggregation Pipeline\n- Aggregation Operators: $match, $project, $unwind, $group\n- Multiple Stages Using a Given Operator\n\n### Lesson 6: Case Study - OpenStreetMap Data\n\n- Using iterative parsing for large datafiles\n- Open Street Map XML Overview\n- Exercises around OpenStreetMap data\n- Final Project Instructions",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/ud032?utm_medium=referral&utm_campaign=api",
      "project_name": "Add to OpenStreetMap",
      "full_course_available": true,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh5.ggpht.com/qeCf6nazB7BWSdHvcW8ldywfblLGcv9Fkw8_jeVfT5Bf2DrQPjnuHrem2wo3oyif0NuU47yMcX67ceH5hq4=s0#w=130&h=60",
          "name": "MongoDB"
        }
      ],
      "tracks": [
        "Data Science",
        "Software Engineering"
      ],
      "banner_image": "https://lh4.ggpht.com/qu1npHHU4BMh7nSfMGanVGTIpCQZ8MdvrPzY_1M2plyszfsgzFma_B12ZwZ7QrDhyOst7pUJJIoQquUYKw=s0#w=1170&h=242",
      "short_summary": "Data Scientists spend most of their time cleaning data. In this course, you will learn to convert and manipulate messy data to extract what you need.",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "months",
      "summary": "In this course, we will explore how to wrangle data from diverse sources and shape it to enable data-driven applications. Some data scientists spend the bulk of their time doing this!\n\nStudents will learn how to gather and extract data from widely used data formats. They will learn how to assess the quality of data and explore best practices for data cleaning. We will also introduce students to MongoDB, covering the essentials of storing data and the MongoDB query language together with exploratory analysis using the MongoDB aggregation framework.\n\nThis is a great course for those interested in entry-level data science positions as well as current business/data analysts looking to add big data to their repertoire, and managers working with data professionals or looking to leverage big data.\n\nThis course is also a part of our <a href=\"https://www.udacity.com/course/nd002\">Data Analyst</a> Nanodegree.",
      "expected_duration": 2
    },
    {
      "instructors": [
        {
          "bio": "Don M. Dini has been practicing, teaching, and writing about data science for over ten years. He studied computer science and artificial intelligence at University of Illinois at Urbana-Champaign and University of Southern California. While at USC he was a lecturer in computer science and worked on applying AI to various real world problems, such as understanding city populations through simulation, and systems to provide security against unknown attackers, which have since been used at LAX, the US coast guard, among other institutions. Today Don is a data scientist at AT&T where he works on creating the next generation of communication networks, and creating models to understand human communication. In addition Don is an instructor of Kung Fu, and teaches classes in Palo Alto, CA.",
          "image": "https://lh6.ggpht.com/0k6uyqzeUnKTMSxKCQcIDhrxWz9hguNd_wavjluv_7eChcMGXBM2BXXphqze4IsDsTEDh5OZvrouSVpa0qg=s0#w=2205&h=2227",
          "name": "Don Dini"
        },
        {
          "bio": "Rishiraj Pravahan is a data scientist working for AT&T. Prior to joining AT&T. Rishiraj worked for the ATLAS experiment at CERN where he was part of the team that discovered the Higgs Boson. While at CERN, he worked on constructing, commissioning and calibrating the ATLAS detector as well as on software techniques to analyze the massive dataset from the Large Hadron Collider to search for new physics.  \nHe has also been a passionate teacher and advocate for science through public talks and seminars in the US, Europe, India and Latin America. His current work involves, understanding networks, privacy and security of customer data, collection, storage and analysis of sensor data and making advances in the frontiers of statistics and machine learning. In his spare time he loves to read, play pool, cook, travel and learn about other cultures.",
          "image": "https://lh6.ggpht.com/0aHfWdn7_AXVoSxk5isyJu6fUP_lV9dP2nD1KuFw4pIxr30O1bArwJGnWqPO_XBE2qeI_gacUvamjx7ULnAW=s0#w=2134&h=2134",
          "name": "Rishi Pravahan"
        }
      ],
      "subtitle": "Advanced Techniques for Analyzing Data",
      "key": "ud919",
      "image": "https://lh4.ggpht.com/kYr0sxkZKUC3-xlCQHRB1aH9Sr7BibEsBSNLPLJykneum-CnGeecsH-10yzsbbnLYMcM9-uIoGWacJ7HHw=s0#w=1071&h=659",
      "expected_learning": "Many of you may have already taken a course in machine learning or data science or are familiar with machine learning models.\n\nIn this course we will take a more general approach, walking through the questioning, modeling and validation steps of the model building process. \n\nThe goal is to get you to practice thinking in depth about a problem and coming up with your own solutions. Many examples we will attempt may not have one correct answer but will require you to work through the problems applying the methods we hope to illustrate throughout this class.",
      "featured": false,
      "teaser_video": {"youtube_url": ""},
      "title": "Model Building and Validation",
      "required_knowledge": "This is an advanced course, and the ideal students for this class are prepared individuals who have:\n\n1. Python programming knowledge, familiarity with python tools like Ipython Notebook and data analysis libraries like Scikit-learn, Scipy, and Pandas\n2. Knowledge of descriptive, inferential, and predictive statistics\n3. Knowledge of calculus, especially derivatives and integrals\n4. Knowledge of basic matrix algebra - matrices, vectors, determinant, identity matrix, multiplication, inverse\n5. Taken Intro to Machine learning and have understanding of common supervised learning and unsupervised learning algorithms, such as SVM and k-means clustering",
      "syllabus": "### Lesson 1 - Introduction to the QMV Process\nLearn about the Question, Modeling, and Validation (QMV) process of data analysis. Understand the basics behind each step and apply the QMV process to analyze on how Udacity employees choose candies!\n\n### Lesson 2 - Question Phase\nWe will drill in on the questioning phase of the QMV process. We\u2019ll teach you how to turn a vague question into a statistical one that can be analyzed with statistics and machine learning. You will also analyze a Twitter dataset and try to predict when a person will tweet next! \n\n### Lesson 3 - Modeling Phase\nBuilding upon lesson 2, you will learn how to build rigorous mathematical, statistical, and machine learning models so you can make accurate predictions. You look through the recently released U.S. medicare dataset for anomalous transactions.\n\n### Lesson 4 - Validation Phase\nSo how do you tell if your model is doing well? In this lesson, we will teach you some of the fundamental and important metrics that you can use to grade the performance of the models that you\u2019ve build. You will analyze the AT&T connected cars data set and see if you can tell which driver is which by analyzing their driving patterns.\n\n### Final Project - Identify Hacking Attempts from Network Flow Logs\n\nYou will create a program that examines log data of net flow traffic, and produces a score, from 1 to 10, describing the degree to which the logs suggest a brute force attack is taking place on a server.",
      "new_release": true,
      "homepage": "https://www.udacity.com/course/ud919?utm_medium=referral&utm_campaign=api",
      "project_name": "Identify Hacking Attempts",
      "full_course_available": true,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh6.ggpht.com/gMNRaCIUrZaeSZjBQnBD7Cc54N0Ykk0stm-rMKqZcvNW6AnATbJY2NgRdyeVy0Hiq3xT5MmoSSdflMFo-NY=s0#w=130&h=60",
          "name": "AT&T"
        }
      ],
      "tracks": ["Data Science"],
      "banner_image": "https://lh3.ggpht.com/-YwZl4GyWW8MDUKHn-dY8HNPTDVzUpvJpwW8u8PKkC1ypMAoCt4SeBnbdQg3OaUEBIpSHetN1LqVuG2L8iVr=s0#w=4680&h=968",
      "short_summary": "This course will teach you how to start from scratch in understanding and paying attention to what is important in the data and how to answer questions about data",
      "starter": false,
      "level": "advanced",
      "expected_duration_unit": "weeks",
      "summary": "This course will teach you how to start from scratch in answering questions about the real world using data. Machine learning happens to be a small part of this process. The model building process involves setting up ways of collecting data, understanding and paying attention to what is important in the data to answer the questions you are asking, finding a statistical, mathematical or a simulation model to gain understanding and make predictions. \n\nAll of these things are equally important and model building is a crucial skill to acquire in every field of science. The process stays true to the scientific method, making what you learn through your models useful for gaining an understanding of whatever you are investigating as well as make predictions that hold true to test. \n\nWe will take you on a journey through building various models. This process involves asking questions, gathering and manipulating data, building models, and ultimately testing and evaluating them.",
      "expected_duration": 8
    },
    {
      "instructors": [
        {
          "bio": "Don is the author of <a href=\"http://www.amazon.com/gp/product/0465050654/ref=as_li_ss_tl?ie=UTF8&camp=1789&creative=390957&creativeASIN=0465050654&linkCode=as2&tag=udacity-20\">The Design of Everyday Things</a>.  He is both a businessperson (he has worked as a VP at Apple, an Executive at HP and UNext) and an academic who has been a faculty member at Harvard, UC San Diego, Northwestern, and the Korea Advanced Institute of Science and Technology (KAIST). He is a member of the National Academy of Engineering, an IDEO fellow, and a trustee of IIT\u2019s Institute of Design. He can be found at www.jnd.org.",
          "image": "https://lh3.ggpht.com/zgOHg0aHyR8RWqi92zzO5Iy0wHcyBwDBYl8ivEx17q1pmS09K1bLbjLJhPoaugZI2uBBo2rWXe2dp4sJxA=s0#w=270&h=270",
          "name": "Don Norman"
        },
        {
          "bio": "Kristian Simsarian is a design leader, educator and consultant. He is currently the founder and chair of the undergraduate Interaction Design program at California College of the Arts (CCA). Kristian co-founded the Software Experiences practice at IDEO as an Associate Partner, and led design innovation initiatives for many of the world\u2019s most impactful organizations, including: Microsoft, Nokia, Lily, Pfizer, Samsung, Yahoo!, XBOX, SAP, AT&T, Procter & Gamble, the FBI and the National Institutes of Health. After a decade at IDEO he shifted his focus to education while continuing as an IDEO Fellow and independent consultant. As co-teacher of this course, he brings the first steps of actually taking action and becoming a designer yourself.",
          "image": "https://lh3.ggpht.com/iBSSqtDJQ8Wcbcl1bb9jt6nsfRiPdeZPQewkcsfTqfOTWbIa2nsgQQDXBbbTHdI4mKsSADUnAJesrptawpxe=s0#w=200&h=200",
          "name": "Kristian Simsarian"
        }
      ],
      "subtitle": "Principles of Design",
      "key": "design101",
      "image": "https://lh3.ggpht.com/DbM6XZ7d1YBNVsdieedaRqEjGrJWNgwKFss7yIqNGDZpnd6O6YbJH1FcIb6SgGdGf3VGm85itUNyMi7-Jy0=s0#w=436&h=268",
      "expected_learning": "This course will provide you with the knowledge needed to start recognizing the role of design in today\u2019s world, and to start making better design decisions in your own life. In addition to learning basic design concepts such as affordances and signifiers, you will also gain practice in observing and applying design principles.",
      "featured": false,
      "teaser_video": {"youtube_url": ""},
      "title": "Intro to the Design of Everyday Things",
      "required_knowledge": "There are no prerequisites for the course; it\u2019s for anyone curious about basic design principles.",
      "syllabus": "Lesson 1: Affordances and Signifiers (4 hours)\n\nLesson 2: Conceptual Models and the System Image (4 hours)\n\nLesson 3: Gulfs of Evaluation and Execution (1 hour)\n\nFinal Project: Design the User Interface (UI) for a Timebank (7 hours) \n\n*The times include watching instructional videos, completing the course exercises, and finishing projects. In total, this course should take an average of 16 hours.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/design101?utm_medium=referral&utm_campaign=api",
      "project_name": "Design the UI for a Time Bank",
      "full_course_available": true,
      "faq": "",
      "affiliates": [],
      "tracks": ["Non-Tech Classes"],
      "banner_image": "https://lh6.ggpht.com/Qn26jiZ9r-90AoLyhVvqYKAqY7dhglB9UOhOVxZCU8APmC4Wa1mZbTLP5sIj202aubiAj0TuKV4sDI9KYgM=s0#w=4680&h=968",
      "short_summary": "This course will provide you with the insight to start recognizing the role of design in today\u2019s world, and to start making better design decisions in your own life.",
      "starter": true,
      "level": "beginner",
      "expected_duration_unit": "weeks",
      "summary": "Everyone designs. Design occurs anytime you deliberately change an environment to make things better. When you decide what seat to take in an auditorium you\u2019re designing your experience. When you rearrange the furniture in a room or draft an email, you\u2019re designing. \n\nThis course provides a summary of key concepts from the first two chapters of <a href=\"http://www.amazon.com/gp/product/0465050654/ref=as_li_ss_tl?ie=UTF8&camp=1789&creative=390957&creativeASIN=0465050654&linkCode=as2&tag=udacity-20\">The Design of Everyday Things</a>  (Revised and Expanded Edition, November 2013) by Don Norman. It\u2019s intended to be enjoyable and informative for anyone curious about design: everyday people, technical people, designers, and non-designers alike.",
      "expected_duration": 2
    },
    {
      "instructors": [
        {
          "bio": "Chris Wilson is an Open Web Platform Developer Advocate at Google working on Chrome.  He began working on web browsers in 1993 when he co-authored the original Windows version of NCSA Mosaic, went on to Microsoft to work on Internet Explorer for fifteen years, and joined Google in 2010.  He has a particular interest in enabling awesome user experiences on the web platform, and is a long-time participant in various web standards working groups.",
          "image": "https://lh5.ggpht.com/xR8bjg7ECQKxjJlxGcibsWcx5gw5W5FBzET1Orfw557IoYKHX0E8Mgv5osw5yZld5mOP2EsHOME6PP7m0g=s0#w=512&h=512",
          "name": "Chris Wilson"
        },
        {
          "bio": "Peter Lubbers is a Program Manager at Google in the Chrome Developer Relations team and lives and breathes HTML5. He is the co-author of Pro HTML5 Programming (Apress) and the founder of the San Francisco HTML5 User Group, the largest HTML5 User Group in the world. A native of the Netherlands, Peter served as a Special Forces commando in the Royal Dutch Green Berets. In his spare time Peter likes jumping out of planes, bungee-jumping, and running ultra-marathons.",
          "image": "https://lh5.ggpht.com/Lk1Ia93wwl1UrEWWlQw5hS34XhsVlel2IYrnYCXTmSG9U9Ox8_eIqMfplBNfsmRV4gJ63oZBh-k1qBRM-SI=s0#w=236&h=236",
          "name": "Peter Lubbers"
        }
      ],
      "subtitle": "Building Mobile Web Experiences",
      "key": "cs256",
      "image": "https://lh5.ggpht.com/IKdCmTWn8a2nMhlwMYzryvzRN5CUZAOBr4tDrEAbszV7TIFe9pRAInA4kkYcgTXwrifJsBEsq1agTueuu-g=s0#w=436&h=268",
      "expected_learning": "After completing this class, you\u2019ll have built a web application with a first-class mobile experience. You\u2019ll understand what it takes to build great web experiences on mobile devices, have gained experience with the tools you need to test performance, and be able to apply your knowledge to your own projects in the future.",
      "featured": false,
      "teaser_video": {"youtube_url": "https://www.youtube.com/watch?v=bFmMT2ZDQ8M"},
      "title": "Mobile Web Development",
      "required_knowledge": "This course is for experienced front-end web developers who\u2019d like to learn what it takes to create [great](http://www.chrome.com/racer) [mobile](http://sketchpad.io) experiences. In order to succeed in this class, you should be comfortable with HTML, CSS, and Javascript, and should have experience creating web apps, either professionally or for fun. You don't need to know any specific HTML5 extras or APIs, we'll cover any of those that we need as the course progresses.",
      "syllabus": "In this course, you will learn how to build web experiences that adapt to the different screen sizes and capabilities that mobile devices offer, and how to scalably optimize media for mobile and desktop.  We will cover programming touch interaction, as well as how to optimize form field input for mobile devices and use APIs like geolocation and the accelerometer, and ensuring your web experiences work great when network conditions are sub-optimal.  Finally, you\u2019ll gain the tools to investigate performance in mobile applications, with a strong understanding of mobile networking, battery usage patterns and optimizing paint techniques to build smooth animations on mobile.\n\n### Lesson 01: Syllabus\nWe\u2019ll start with a high-level overview of the course and what to expect in it. We\u2019ll also go into more depth on what we mean by mobile web development, and why you should care about it.\n\n### Lesson 02: Mobile Development Tools\nWorkflow and tooling is incredibly important for building great web apps, and this carries over to mobile web development. This lesson will show you how to use the Chrome Developer Tools to develop for the mobile web.\n\n### Lesson 03: Mobile UX and Viewport\nDesigning for the mobile web is all about a smooth user experience. This lesson will get you thinking about how to achieve that on mobile, and we\u2019ll introduce the first of many tools you need to achieve this: the viewport.\n\n### Lesson 04: Fluid Design\nMobile means lots of different devices and form factors. We\u2019ll discuss how to make your site responsive, clean, and user-friendly on multiple devices and layouts.\n\n### Lesson 05: Media Queries\nSometimes different devices call for fundamentally different layouts. This lesson will teach you how to achieve this using media queries.\n\n### Lesson 06: Responsive Images\nMedia requirements are different in mobile - network constraints and very high resolution screens set up a conflict that can be challenging.  We\u2019ll talk about how best to integrate media into your mobile web applications, and adaptively scaling images based on the environment.\n\n### Lesson 07: Optimizing Performance\nUsers expect a fast, seamless experience on mobile. We\u2019ll go over optimizing various performance metrics to improve that experience, such as network, cpu, rendering, and battery performance.\n\n### Lesson 08: Touch\nTouch input is fundamentally different from mouse input, and requires you to think about your user interactions differently. We\u2019ll go over UX concerns with touch-based interaction, and how to design user interactions that work across devices.\n\n### Lesson 09: Input\nUsing a keyboard on mobile is awful. We\u2019ll discuss ways to improve it, using semantic input for form data, and other user input options on mobile.\n\n### Lesson 10: Device Access\nMobile devices have a full array of sensors typically unavailable on desktop. We\u2019ll talk about camera access, geolocation, and other sensors and feedback you have access to on mobile.\n\n### Lesson 11: Offline and Storage\nIt\u2019s an unfortunate reality that mobile users aren\u2019t always online. We\u2019ll go over using the local cache as well as local storage APIs to give your users a great offline (and partially-online) experience as well.\n\n### Lesson 12: Wrap-up\nWe\u2019ll finish up the class by talking briefly about other topics to consider, such as app experience, monetization, deployment and distribution. We\u2019ll also point you to other resources to look at moving forward in your career.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/cs256?utm_medium=referral&utm_campaign=api",
      "project_name": "",
      "full_course_available": true,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh3.ggpht.com/Wx1OdscqyJkXh3vYLx6ZTxngP542hK_P2Mew1MvItbCs-GF4a0lyBfFSOfebDt9CX4Fv-omaDshdYX_obLI9=s0#w=130&h=60",
          "name": "Google"
        }
      ],
      "tracks": ["Web Development"],
      "banner_image": "https://lh6.ggpht.com/mtT_3mCOWwToCNi4g-MFR0M8mheMa1b4KndiDk4r5kJvK9LQI73Sv2EEC0x9YCX4SL3Ko5hxIPPPPsoTTCdp=s0#w=4680&h=968",
      "short_summary": "In this course, you'll learn how to build great mobile web experiences. We'll cover performance issues on mobile, and how to make use of mobile sensors.",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "weeks",
      "summary": "So you\u2019ve heard mobile is kind of a big deal, and you\u2019re not sure how to transform your traditional desktop-focused web apps into fast, effective mobile experiences. This course is designed to teach web developers what they need to know to create great cross-device mobile web experiences. This course will focus on building mobile web apps, which will work across multiple platforms including Android, iOS, and others.",
      "expected_duration": 6
    },
    {
      "instructors": [
        {
          "bio": "Ilya Grigorik is a web performance engineer at Google and the author of High Performance Browser Networking (O'Reilly). When he's not optimizing web performance, he is likely found working on new performance or analytics related open source projects, launching fun projects like <a href=\"http://www.vimgolf.com\" target=\"_blank\">vimgolf.com</a>, or optimizing his triathlon times. Prior to focusing on web performance, Ilya spent 5 years measuring and optimizing performance of social campaigns - he was the founder of PostRank, which was acquired and integrated into Google Analytics. In short, he likes to optimize and make things fast.",
          "image": "https://lh5.ggpht.com/84uIfgiRRMGSTRtIqaLwt7nxvcyXEKC0SQxmaB_sF-_NNOMerCgGaS7BXcOwP7G7jlZKvsh6IIzxRvdsCU9b=s0#w=400&h=400",
          "name": "Ilya Grigorik"
        },
        {
          "bio": "A passionate educator and programmer, Cameron lives and breathes web development as he creates programming courses at Udacity. Before coming here, Cameron was a combination Director of Content and web developer at Seattle startup LearnBIG. He taught four years of high school physics and chemistry in Nashville, TN, during which time he pioneered teaching physics with the video game <em>Portal 2</em>. Cameron graduated with a degree in physics and astronomy from Vanderbilt University and earned his master's in teaching from Belmont University.",
          "image": "https://lh6.ggpht.com/k08baq8ESoDPzyVh0dfvmEqYMawGbd-gJU0_TA0M1EDptu1PNgq1Uss7eXVV8bvLzJhfZArvql-bBJYeB_zb=s0#w=200&h=200",
          "name": "Cameron Pittman"
        }
      ],
      "subtitle": "The Critical Rendering Path",
      "key": "ud884",
      "image": "https://lh6.ggpht.com/f_0W8h__3G99CWTjnMjD8BUKm7yp2-wJyApLtTwFoFtlal2ULf_JgHIsOQq2NiYfKOdMlXlMHDKNo5XVZLs=s0#w=1757&h=1080",
      "expected_learning": "From Ilya Grigorik's [High Performance Browser Networking](http://www.google.com/url?q=http%3A%2F%2Fchimera.labs.oreilly.com%2Fbooks%2F1230000000545%2Findex.html&sa=D&sntz=1&usg=AFQjCNGqIsrSJdHvrYxIgEbLW577cvRxSA \"High Performance Browser Networking\"):\n\n\"The emergence and the fast growth of the web performance optimization (WPO) industry within the past few years is a telltale sign of the growing importance and demand for speed and faster user experiences by the users. And this is not simply a psychological need for speed in our ever accelerating and connected world, but a requirement driven by empirical results, as measured with respect to the bottom-line performance of the many online businesses:\n\n* Faster sites lead to better user engagement.\n* Faster sites lead to better user retention.\n* Faster sites lead to higher conversions.\n\nSimply put, speed is a feature.\"\n\n### Project\nYou will optimize an online portfolio for speed, which you can share with the world to showcase your skills!\n\nMaking a great first impression is absolutely key and an online portfolio can help you stand apart from the crowd. We\u2019ll give you a template for a modern, mobile-friendly portfolio which you\u2019ll be able to completely customize so that it shows off your work and your skills the way you want. But before you show it off to the world, you\u2019ll practice your web performance skills by optimizing the portfolio to render as fast as possible.",
      "featured": false,
      "teaser_video": {"youtube_url": "https://www.youtube.com/watch?v=v5us0j3QmW4"},
      "title": "Website Performance Optimization",
      "required_knowledge": "This course is for any and all web developers, whether you started learning about HTML, CSS and JavaScript recently or have been building websites since the nineties!\n\nMost importantly, you should be able to explain the overall purpose of HTML, CSS and JavaScript with respect to website structure. In addition, you should be comfortable reading and writing HTML documents and modifying JavaScript files.\n\nThis course is taught with <a href=\"https://www.google.com/intl/en_us/chrome/browser/\" target=\"_blank\">Google Chrome</a> and <a href=\"http://www.google.com/intl/en/chrome/browser/canary.html\" target=\"_blank\">Google Chrome Canary</a>.",
      "syllabus": "### Overview\nThroughout the course, you\u2019ll build a performance toolbox to help you build faster website experiences by taking advantage of PageSpeed Insights recommendations and measuring page performance on mobile and desktop with Chrome Developer Tools.\n\nThis class contains an introductory lesson, two primary lessons and a final project. Before diving into optimizations, you\u2019ll build an understanding of how browsers convert HTML, CSS and JavaScript into websites. Along the way, you\u2019ll practice measuring performance using the same tools Google engineers use.\n\nThen comes the really fun part: optimization! You\u2019ll learn about easy-to-implement performance gains and develop a simple and powerful model for uncovering optimization opportunities.\n\nYou\u2019ll put your newfound performance skillset to the test with the final project, where you\u2019ll be optimizing your own online portfolio website!\n\n##Lessons\n###Lesson 0 (20 minutes)\nYou can\u2019t optimize what you can\u2019t measure, so in this lesson you\u2019ll learn how to open Chrome Developer Tools to measure the performance of mobile and desktop websites.\n\n###Lesson 1 (60 minutes)\nOptimizing any website\u2019s performance requires a strong understanding of how browsers build websites from HTML, CSS and JavaScript. You\u2019ll start by breaking down the **Critical Rendering Path** - the steps the browser has to take to render a page. You\u2019ll get an understanding of how:\n\n* **HTML** is converted to the **Document Object Model (DOM)**.\n* **CSS** is converted to the **CSS Object Model (CSSOM)**.\n* the browser runs **layout** to determine the position and size of elements before **painting** pixels on the screen.\n\nThroughout the lesson, you\u2019ll learn how to take advantage of the Timeline view in **Chrome Developer Tools** to measure each and every step\u2019s performance on mobile and desktop.\n\n###Lesson 2 (90 minutes)\nYou\u2019ll explore easy HTML, CSS and JavaScript optimizations with significant performance implications, some of which are as simple as adding a single attribute to an HTML tag! Along the way, you\u2019ll be developing the skills to help you diagnose opportunities for optimizations, including:\n\n* building **quick and dirty** diagrams of the Critical Rendering Path.\n* identifying **three key metrics** to triangulate potential performance bottlenecks.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/ud884?utm_medium=referral&utm_campaign=api",
      "project_name": "Website Optimization",
      "full_course_available": true,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh3.ggpht.com/Wx1OdscqyJkXh3vYLx6ZTxngP542hK_P2Mew1MvItbCs-GF4a0lyBfFSOfebDt9CX4Fv-omaDshdYX_obLI9=s0#w=130&h=60",
          "name": "Google"
        }
      ],
      "tracks": ["Web Development"],
      "banner_image": "https://lh4.ggpht.com/tLVuOAJWUxC6mLib6f7JTMkkopSrzIGp6JCrMmRX7ufuRgYLdbgQPnzEqqaPOmtZYxGYSe_TuCR8AZ-OI7E=s0#w=4680&h=968",
      "short_summary": "Learn how browsers convert HTML, CSS and JavaScript into websites while you experiment with Chrome Developer Tools to measure and optimize website speed!",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "weeks",
      "summary": "You will learn how to optimize any website for speed by diving into the details of how mobile and desktop browsers render pages.\n\nIn this short course, you\u2019ll learn about the Critical Rendering Path, or the set of steps browsers must take to convert HTML, CSS and JavaScript into living, breathing websites. From there, you\u2019ll start exploring and experimenting with tools to measure performance and simple strategies to deliver the first pixels to the screen as early as possible. You\u2019ll learn how to dive into recommendations from [PageSpeed Insights](https://developers.google.com/speed/pagespeed/insights/ \"PageSpeed Insights\") and the Timeline view of Google Chrome\u2019s Developer Tools to find the data you need to achieve immediate performance boosts!\n\nThis course is also a part of our <a href=\"https://www.udacity.com/course/nd001\">Front-End Web Developer</a> Nanodegree.",
      "expected_duration": 1
    },
    {
      "instructors": [
        {
          "bio": "Andy Brown is a Lead Instructor at Udacity. He has a degree in physics from MIT, and has devoted his time after graduating to teaching and learning. Since joining Udacity in 2012, Andy has helped design dozens of classes. He loves exploring this new educational medium by creating innovative and engaging courses. When he\u2019s not figuring out the best ways to transform minds, you can find Andy on his bike or in his car, exploring the amazing experiences that his new California home has to offer.",
          "image": "https://lh6.ggpht.com/gzcZTQuXefPLSSaKithiGKzP5vcc_Gs-CbJjmuCTIn-YLsjzjvyWyBwnDXa-dVOf9EbOX03va4jFTdD4_w=s0#w=1800&h=1800",
          "name": "Andy Brown"
        },
        {
          "bio": "Sarah is a Stanford grad with a BS and MS in Computer Science, and spent a lot of her time at Stanford TAing CS courses.  She then spent two years working at Google before deciding to follow her passion for teaching by joining Udacity.  In her spare time, Sarah enjoys performing musical theatre, making sorbet from locally grown fruit, and rock climbing.",
          "image": "https://lh5.ggpht.com/s53FL7Mo8adGee0UvyAfVV2M73_ek5pP5gOs4soRO_-hBYy5EmMbtfk1HuCvA5yuAbKyihN04vXbsDxCBlY=s0#w=4007&h=4000",
          "name": "Sarah Spikes"
        }
      ],
      "subtitle": "Your Tiles. Your Styles.",
      "key": "ud248",
      "image": "https://lh4.ggpht.com/kJEnfqhPvtm4m3EneSZ4fWYGS8lW4YNhEjk6zPkyrQaBUHc-2Y_ElDic99NHI0h-UBLXVbRCjFybFvrWxdk=s0#w=970&h=485",
      "expected_learning": "**In this course, you'll learn:**\n\n* How a computer program works (specifically small web applications like the 2048 game).\n* What HTML, CSS, and Javascript are and how they interact to make a functioning web application.\n* How to make small changes to HTML and CSS files that have **very large** changes in a program (large enough to turn the original 2048 game into a drastically different <a href=\"http://2048-class.github.io/2048/\" target=\"_blank\">Udacity version</a>).\n* How to use Github to make a copy of an open-source program, make changes to that copy, create your own version, and then host that version so you can share it with your friends.\n* Why open-source is such an amazing idea :)",
      "featured": false,
      "teaser_video": {"youtube_url": "https://www.youtube.com/watch?v=915_kRZ6Hfc"},
      "title": "Make Your Own 2048",
      "required_knowledge": "Nothing! \n\nReally. This course is for complete beginners. It is designed to help someone who has never seen computer code take their first steps into the world of programming and web-development.",
      "syllabus": "### Lesson 1: Exploring the HTML and CSS\nYou will create our own version of 2048 by making changes to the existing HTML and CSS files. Within 10 minutes, you'll have your own game. Within an hour, you're friends will be playing **your** 2048 game (fun bonus: your game will be totally mobile-friendly). The topics we'll cover are:\n\n* What is open source? \n* What is HTML? What is CSS? Javascript? \n* How do these three interact to lead to a fully functioning web/mobile app?\n* What is Github?\n* How do I get someone else's code, make changes, and create my own version?\n* How do I host and share my game?",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/ud248?utm_medium=referral&utm_campaign=api",
      "project_name": "",
      "full_course_available": false,
      "faq": "",
      "affiliates": [],
      "tracks": [],
      "banner_image": "https://lh6.ggpht.com/B1RP3M4ix4ci0mRVdw416va2XUh-AawyATAFkcFakg1lqcNRRTtmkFbx15em3cxAmfogB0z7113fVJctfg=s0#w=970&h=485",
      "short_summary": "Ten minutes into this class you'll make your own completely personalized version of the insanely addictive game 2048. Even if you've never coded before. Pretty cool, no?",
      "starter": true,
      "level": "beginner",
      "expected_duration_unit": "days",
      "summary": "Ten minutes into this class you will make your own completely personalized version of the insanely addictive game <a href=\"http://gabrielecirulli.github.io/2048/\" target=\"_blank\">2048</a>. Even if you've never coded before. Pretty cool, no?\n\nYou'll do this by making small (but important) modifications to the source code for the original 2048 game. If this sounds intimidating, don't worry. We'll teach you the basics of HTML and CSS and how they interact with Javascript (don't worry if that sentence doesn't mean anything to you yet. It will soon).\n\nThe purpose of this class is to have fun learning how to quickly and easily take an existing open source program, make some changes, and create something that looks and feels completely new. The game you create will be mobile friendly (you can play it on your phone!) and totally shareable.",
      "expected_duration": 1
    },
    {
      "instructors": [
        {
          "bio": "Colt McAnlis is a Developer Advocate at Google focusing on Performance and Gaming; Before that, he was a graphics programmer in the games industry working at <a href=\"http://goo.gl/TfRlw\" target=\"_blank\">Blizzard</a>, <a href=\"http://goo.gl/6w5AMB\" target=\"_blank\">Microsoft</a>, and <a href=\"http://goo.gl/1RyVsu\" target=\"_blank\">Petroglyph</a>. He\u2019s been an Adjunct Professor at <a href=\"http://goo.gl/4wHn51\" target=\"_blank\">SMU Guildhall</a>, a <a href=\"http://goo.gl/vaWjc\" target=\"_blank\">UDACITY</a> instructor, and a <a href=\"http://goo.gl/di4Osg\" target=\"_blank\">Book Author</a>. Recently, he\u2019s been teaching Android Devs the <a href=\"http://goo.gl/4ZJkY1\" target=\"_blank\">Zen of Performance</a>. When he's not working with developers, Colt spends his time preparing for an invasion of giant ants from outer space.\n\nYou can follow him on G+ (+Colt McAnlis) or Twitter (@duhroach)",
          "image": "https://lh3.ggpht.com/fqXCAak3vE6L4YY-_JjvhpftvEduRczdO1JUlFz8OAFBIgobjI3bc1cI7akEmwe9gKOieAdCJn29refQ0w=s0#w=285&h=285",
          "name": "Colt McAnlis"
        },
        {
          "bio": "Peter Lubbers is a Program Manager at Google in the Chrome Developer Relations team and lives and breathes HTML5. He is the co-author of Pro HTML5 Programming (Apress) and the founder of the San Francisco HTML5 User Group, the largest HTML5 User Group in the world. A native of the Netherlands, Peter served as a Special Forces commando in the Royal Dutch Green Berets. In his spare time Peter likes jumping out of planes, bungee-jumping, and running ultra-marathons.",
          "image": "https://lh5.ggpht.com/Lk1Ia93wwl1UrEWWlQw5hS34XhsVlel2IYrnYCXTmSG9U9Ox8_eIqMfplBNfsmRV4gJ63oZBh-k1qBRM-SI=s0#w=236&h=236",
          "name": "Peter Lubbers"
        }
      ],
      "subtitle": "Building High Performance Web Apps",
      "key": "cs255",
      "image": "https://lh5.ggpht.com/C-c9-2x5jVtuwhzNRR-RzDnp_5sAHFTaKeySuZYlUZDv0P4GTKCA4wsS_PLuT7MokRAKaZ1o9JmsY2eTUJc0=s0#w=436&h=268",
      "expected_learning": "At the end of this course, you'll understand how to develop an HTML5 game. \nYou will gain familiarity with HTML5 features such as 2D canvas and techniques for improving performance.",
      "featured": false,
      "teaser_video": {"youtube_url": "https://www.youtube.com/watch?v=F3JeV756B7w"},
      "title": "HTML5 Game Development",
      "required_knowledge": "Knowledge of HTML, Javascript, and how the web works is necessary for this course. There is an optional lesson on the specific parts of Javascript and the DOM that you'll need for this class as a refresher, but this is not an introductory course on Javascript.",
      "syllabus": "### Lesson 0\nOptional HTML/Javascript crash course\n\n### Lesson 1\nIntroduction to Canvas rendering\n\n### Lesson 2\nAtlases\n\n### Lesson 3\nMap rendering\n\n### Lesson 4\nBasic Input, handling events\n\n### Lesson 5\nThe entity hierarchy\n\n### Lesson 6\nBox2D, and using external libraries\n\n### Lesson 7\nAdding sound\n\n### Lesson 8\nAsynchronous Loading\n\n### Supplementary Materials\n![Alt text](https://s3.amazonaws.com/udacity-hosted-downloads/A9781430266976-3d.png)\n\n\n[Link to download free chapters](http://bit.ly/1i3rk63)",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/cs255?utm_medium=referral&utm_campaign=api",
      "project_name": "",
      "full_course_available": false,
      "faq": "### When does the course begin?\n \nThis class is self paced. You can begin whenever you like and then follow your own pace. It\u2019s a good idea to set goals for yourself to make sure you stick with the course.\n\n### How long will the course be available?\n\n This class will always be available! \n\n### How do I know if this course is for me?\n\n Take a look at the \u201cClass Summary,\u201d \u201cWhat Should I Know,\u201d and \u201cWhat Will I Learn\u201d sections above. If you want to know more, just enroll in the course and start exploring.\n\n### Can I skip individual videos? What about entire lessons?\n\n Yes! The point is for you to learn what YOU need (or want) to learn. If you already know something, feel free to skip ahead. If you ever find that you\u2019re confused, you can always go back and watch something that you skipped.\n\n### How much does this cost?\n\n It\u2019s completely free! If you\u2019re feeling generous, we would love to have you contribute your thoughts, questions, and answers to the course discussion forum.\n\n### What are the rules on collaboration?\n\n Collaboration is a great way to learn. You should do it! The key is to use collaboration as a way to enhance learning, not as a way of sharing answers without understanding them. \n\n### Why are there so many questions?\n\n Udacity classes are a little different from traditional courses. We intersperse our video segments with interactive questions. There are many reasons for including these questions: to get you thinking, to check your understanding, for fun, etc... But really, they are there to help you learn. They are NOT there to evaluate your intelligence, so try not to let them stress you out.\n\n### What should I do while I\u2019m watching the videos?\n\n Learn actively! You will retain more of what you learn if you take notes, draw diagrams, make notecards, and actively try to make sense of the material.",
      "affiliates": [
        {
          "image": "https://lh3.ggpht.com/Wx1OdscqyJkXh3vYLx6ZTxngP542hK_P2Mew1MvItbCs-GF4a0lyBfFSOfebDt9CX4Fv-omaDshdYX_obLI9=s0#w=130&h=60",
          "name": "Google"
        }
      ],
      "tracks": ["Web Development"],
      "banner_image": "https://lh4.ggpht.com/WJVBXaHIXBSp3RECYt66FI3LHOgxll6b9b-7tCs2roVYTrAQr2qNgiWrODfs__ZydPfCGX_-xNptuPS3FUZ-=s0#w=4680&h=968",
      "short_summary": "Learn how to build high-performance web games with HTML5. We'll port industry-standard development techniques to the web and use them to create a game.",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "months",
      "summary": "This course will walk you through the major components of building GRITS, an HTML5 game. We'll talk about how to take standard game development techniques, and use them to create high performance HTML5 applications.",
      "expected_duration": 2
    },
    {
      "instructors": [
        {
          "bio": "David Evans is a Professor of Computer Science at the University of Virginia where he teaches computer science and leads <a href=\"http://www.jeffersonswheel.org/\" target=\"_blank\">research in computer security</a>. He is the author of an <a href=\"http://www.computingbook.org/\" target=\"_blank\">introductory computer science textbook</a> and has won Virginia's highest award for university faculty. He has PhD, SM, and SB degrees from MIT.",
          "image": "https://lh6.ggpht.com/1x-8cXA7JU8bNOy4xf1TyroDZlbI1aWDpeq2fjUcjEhEhfGyF5RBoS4yRjop22RBOfWNmtoyf67trTmcQg-6=s0#w=137&h=137",
          "name": "Dave Evans"
        }
      ],
      "subtitle": "Science of Secrets",
      "key": "cs387",
      "image": "https://lh4.ggpht.com/5VkY7VUpL3oGc1MTj01krvUZfEXbR_OGt07C_WQAq84m-q8aAMcFWgmmyeotMR0IfCordz07ffCA1T6YXgbp=s0#w=436&h=268",
      "expected_learning": "Explore how secrets are written and shared, as well as what can go wrong when cryptography is misused or implemented badly.",
      "featured": false,
      "teaser_video": {"youtube_url": "https://www.youtube.com/watch?v=HlNDXiVnhqI"},
      "title": "Applied Cryptography",
      "required_knowledge": "This course assumes previous programming experience, comparable to what is covered by the Udacity CS101 course, as well as some understanding of probability and theory of computation and algorithm analysis.",
      "syllabus": "### Lesson 1: Perfect Ciphers\n\nWhat makes certain ciphers perfect, how the Lorenz Cipher was broken\n\n### Lesson 2: Symmetric Encryption\n\nSending messages when two people share a secret\n\n### Lesson 3: Key Exchange\n\nTechniques to establish a shared secret\n\n### Lesson 4: Asymmetric Encryption\n\nExchanging information using public key cryptosystems\n\n### Lesson 5: Public Key Protocols\n\nEncrypted key exchange, certificates, secure commerce\n\n### Lesson 6: Using Cryptographic Primitives\n\nHow cryptography can be useful for anonymizing communication, voting, and digital cash\n\n### Lesson 7: Secure Computation\n\nComputing without exposing data",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/cs387?utm_medium=referral&utm_campaign=api",
      "project_name": "",
      "full_course_available": true,
      "faq": "### When does the course begin?\n \nThis class is self paced. You can begin whenever you like and then follow your own pace. It\u2019s a good idea to set goals for yourself to make sure you stick with the course.\n\n### How long will the course be available?\n\n This class will always be available! \n\n### How do I know if this course is for me?\n\n Take a look at the \u201cClass Summary,\u201d \u201cWhat Should I Know,\u201d and \u201cWhat Will I Learn\u201d sections above. If you want to know more, just enroll in the course and start exploring.\n\n### Can I skip individual videos? What about entire lessons?\n\n Yes! The point is for you to learn what YOU need (or want) to learn. If you already know something, feel free to skip ahead. If you ever find that you\u2019re confused, you can always go back and watch something that you skipped.\n\n### How much does this cost?\n\n It\u2019s completely free! If you\u2019re feeling generous, we would love to have you contribute your thoughts, questions, and answers to the course discussion forum.\n\n### What are the rules on collaboration?\n\n Collaboration is a great way to learn. You should do it! The key is to use collaboration as a way to enhance learning, not as a way of sharing answers without understanding them. \n\n### Why are there so many questions?\n\n Udacity classes are a little different from traditional courses. We intersperse our video segments with interactive questions. There are many reasons for including these questions: to get you thinking, to check your understanding, for fun, etc... But really, they are there to help you learn. They are NOT there to evaluate your intelligence, so try not to let them stress you out.\n\n### What should I do while I\u2019m watching the videos?\n\n Learn actively! You will retain more of what you learn if you take notes, draw diagrams, make notecards, and actively try to make sense of the material.",
      "affiliates": [],
      "tracks": ["Software Engineering"],
      "banner_image": "https://lh6.ggpht.com/174Pycf1xsgQw8LFqOJs0t4wMcUSZ_KYbQpL1hhtsVIRRMJqC9K3biUSFjjGpz-qyhRhK8yotUGLeJdYIWY=s0#w=4680&h=968",
      "short_summary": "Cryptography is present in everyday life, from paying with a credit card to using the telephone.  Learn all about making and breaking puzzles in computing.",
      "starter": false,
      "level": "advanced",
      "expected_duration_unit": "months",
      "summary": "Cryptography is present in everyday life, from paying with a credit card to using the telephone. Learn all about making and breaking puzzles in computing.",
      "expected_duration": 2
    },
    {
      "instructors": [
        {
          "bio": "Sebastian Thrun is a Research Professor of Computer Science at Stanford University, a Google Fellow, a member of the National Academy of Engineering and the German Academy of Sciences. Thrun is best known for his research in robotics and machine learning, specifically his work with self-driving cars.",
          "image": "https://lh4.ggpht.com/DG-7wffxjR7WqOHdXavbgsNlJ7ZKL2nuhY7hDiSijK7xISk3mCTgdM-9_JUGRjI-qfTk1iJCL5axjZEZDQ=s0#w=200&h=200",
          "name": "Sebastian Thrun"
        }
      ],
      "subtitle": "Making Decisions Based on Data",
      "key": "st101",
      "image": "https://lh5.ggpht.com/TeJwuxZIGGaiuAVtTI69tdHKrrs9DOBNgvBHe487ISVN38fGJ-TMDlffwmQd_ObDe4f_FQeLatO3tziADw=s0#w=436&h=268",
      "expected_learning": "<p>This course will cover visualization, probability, regression and other topics that will help you learn the basic methods of understanding data with statistics. </p>",
      "featured": false,
      "teaser_video": {"youtube_url": "https://www.youtube.com/watch?v=bAkFZtE6XVQ"},
      "title": "Intro to Statistics",
      "required_knowledge": "<p>This course does not require any previous knowledge of statistics. Basic familiarity with algebra such as knowing how to compute the mean, median and mode of a set of numbers will be helpful. </p>",
      "syllabus": "### Lesson 1: Visualizing relationships in data\n\nSeeing relationships in data and predicting based on them; Simpson's paradox\n\n### Lesson 2: Probability \n\nProbability; Bayes Rule; Correlation vs. Causation\n\n### Lesson 3: Estimation \n\nMaximum Likelihood Estimation; Mean, Median, Mode; Standard Deviation, Variance\n\n### Lesson 4: Outliers and Normal Distribution \n\nOutliers, Quartiles; Binomial Distribution; Central Limit Theorem; Manipulating Normal Distribution\n\n### Lesson 5: Inference\n\nConfidence intervals; Hypothesis Testing\n\n### Lesson 6: Regression\n\nLinear regression; correlation\n\n### Lesson 7: Final Exam",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/st101?utm_medium=referral&utm_campaign=api",
      "project_name": "",
      "full_course_available": false,
      "faq": "### When does the course begin?\n \nThis class is self paced. You can begin whenever you like and then follow your own pace. It\u2019s a good idea to set goals for yourself to make sure you stick with the course.\n\n### How long will the course be available?\n\n This class will always be available! \n\n### How do I know if this course is for me?\n\n Take a look at the \u201cClass Summary,\u201d \u201cWhat Should I Know,\u201d and \u201cWhat Will I Learn\u201d sections above. If you want to know more, just enroll in the course and start exploring.\n\n### Can I skip individual videos? What about entire lessons?\n\n Yes! The point is for you to learn what YOU need (or want) to learn. If you already know something, feel free to skip ahead. If you ever find that you\u2019re confused, you can always go back and watch something that you skipped.\n\n### How much does this cost?\n\n It\u2019s completely free! If you\u2019re feeling generous, we would love to have you contribute your thoughts, questions, and answers to the course discussion forum.\n\n### What are the rules on collaboration?\n\n Collaboration is a great way to learn. You should do it! The key is to use collaboration as a way to enhance learning, not as a way of sharing answers without understanding them. \n\n### Why are there so many questions?\n\n Udacity classes are a little different from traditional courses. We intersperse our video segments with interactive questions. There are many reasons for including these questions: to get you thinking, to check your understanding, for fun, etc... But really, they are there to help you learn. They are NOT there to evaluate your intelligence, so try not to let them stress you out.\n\n### What should I do while I\u2019m watching the videos?\n\n Learn actively! You will retain more of what you learn if you take notes, draw diagrams, make notecards, and actively try to make sense of the material.",
      "affiliates": [],
      "tracks": ["Data Science"],
      "banner_image": "https://lh4.ggpht.com/aX2xeWRHOrh_ligARa1eTHKaGU_EXqAYPRalgH_m43lSeIwKp-cBMeDJIzAtH0aVrBfCjlRPwAGIF15Dg0A=s0#w=4680&h=968",
      "short_summary": "Get ready to analyze, visualize, and interpret data! Thought-provoking examples and chances to combine statistics and programming will keep you engaged and challenged.",
      "starter": false,
      "level": "beginner",
      "expected_duration_unit": "months",
      "summary": "Statistics is about extracting meaning from data. In this class, we will introduce techniques for visualizing relationships in data and systematic techniques for understanding the relationships using mathematics.",
      "expected_duration": 2
    },
    {
      "instructors": [
        {
          "bio": "Kelly Vetter is an instructor at Wake Technical Community College.  She has a B.S. in Mathematics Education and a Certificate in E-Learning from North Carolina State University. She has taught math for a total of 17 years and has been teaching developmental math for 12 of those years.  She has taught in various formats including the classroom, online, and hybrid courses.",
          "image": "https://lh4.ggpht.com/iQmu1sGxFH1190MjG7wYJR_xHKzRbhhYr8IuXo5hAlhtWx8kz7tRGtgYmKn3nZTie5i1VtIgA0NmK5lNosiZ=s0#w=3000&h=3000",
          "name": "Kelly Vetter"
        },
        {
          "bio": "Sue Ann Austin is an instructor at Wake Technical Community College.  She has taught developmental math for 4 years and prior to that was a high school math teacher.  She has a B.S. in Applied Mathematics from Carnegie-Mellon University and completed the NC Teach program at North Carolina State University.  She was a software engineer for 15 years prior to entering the field of education.",
          "image": "https://lh5.ggpht.com/Unz9qs6gK0epvDZ0aVnIZJfGhxEWvMoD60bnJ_9S0AnPsGLPU56SyUITGqka2dNHGwVd1G5Osip9Otb43mE=s0#w=3000&h=3000",
          "name": "Sue Ann Austin"
        }
      ],
      "subtitle": "A Quick Refresher",
      "key": "ma004",
      "image": "https://lh6.ggpht.com/6x6Voubq_rHHA3etDwFYP_44ZvSrY-gEb3V6iYmLoF2YDGAH18vm-anCt_UrYH-PCer0OCQKIC8w6_mVuLo=s0#w=436&h=268",
      "expected_learning": "At the end of this course students will have reviewed the core topics of introductory algebra. Students will be comfortable with the concepts and procedures of introductory algebra, and be able to apply their knowledge to other coursework and real-world problems.\n\nDuring this course, you will review \n\nInteger operations including addition, subtraction, multiplication, division, and absolute value.\nEvaluating using order of operations.\nAssociative and Commutative properties.\nPerimeter and area of rectangles, triangles, squares, and circles.\nFraction operations including simplifying, adding, subtracting, multiplying, and dividing.\nConverting between fractions, decimals, and percents.\nRounding decimals to appropriate place value.\nConverting between standard notation and scientific notation.\nRates and ratios.\nUnit conversions.\nSimplifying and evaluating algebraic expressions.\nUsing the Pythagorean Theorem.\nSolving and graphing linear equations.\nWriting linear equations.",
      "featured": false,
      "teaser_video": {"youtube_url": "https://www.youtube.com/watch?v=FmoieXyYaVE"},
      "title": "Intro Algebra Review",
      "required_knowledge": "This is a review course, it is expected that students will have some previous knowledge of most topics covered in the course.\n\n<br>\n<br>\nMade possible through a grant from the Bill and Melinda Gates Foundation.",
      "syllabus": "Topic 1: Integer Operations\n\n- Properties of Integers\n- Absolute Value\n- Adding, Subtracting, Multiplying & Dividing\n- Order of Operations\n- Perimeter and Area of Rectangles, Squares & Triangles\n\nTopic 2: Fractions and Decimals\n\n- Simplifying Fractions\n- Mathematical Operations with Fractions\n- Rounding Decimals\n- Decimals and Applications\n- Fraction to Decimal Conversion\n- Scientific Notation\n\nTopic 3: Rates, Ratios, and Conversions\n\n- Ratios\n- Rates\n- Unit Conversions\n- Percents\n\nTopic 4: Algebraic Expressions and Equations\n\n- Algebraic Expressions\n- Solving a Linear Equation\n- Pythagorean Theorem\n\nTopic 5: Graphing Linear Equations\n\n- Graphing a Linear Equation\n- Slope of a Line\n- Writing a Linear Equation\n- Slope and Slope-Intercept Form",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/ma004?utm_medium=referral&utm_campaign=api",
      "project_name": "",
      "full_course_available": false,
      "faq": "",
      "affiliates": [],
      "tracks": ["Non-Tech Classes"],
      "banner_image": "https://lh6.ggpht.com/2GvPe2yH9IeLTB0r73J5qPjXl2Ik_vuh3ywuMKSkRQf8IfI2LNAZRHg4B-sbGKxHGwsIHexYZ7nNpDxUL_4=s0#w=4680&h=968",
      "short_summary": "A brief review of introductory algebra topics including integer operations, scientific notation, algebraic expressions, linear equations, and graphing.",
      "starter": false,
      "level": "beginner",
      "expected_duration_unit": "months",
      "summary": "This course provides a brief review of introductory algebra topics. Topics to be covered include integer operations, order of operations, perimeter and area, fractions and decimals, scientific notation, ratios and rates, conversions, percents, algebraic expressions, linear equations, the Pythagorean theorem, and graphing.",
      "expected_duration": 2
    },
    {
      "instructors": [
        {
          "bio": "Julie Sliva Spitzer is a Professor of Mathematics Education in the Mathematics Department at San Jose State University, where she primarily works with prospective mathematics teachers on pedagogy. Her primary area of interest is in teaching mathematics to special education students. She is excited to help increase access to further education through this course.",
          "image": "https://lh5.ggpht.com/1E5wcpVXsRLK4mCYa4bNqvSBddJH1a9onde7ap3199AyXk5qwsyll__X6-hbegomkKorYoRYdOI_O1wrhg=s0#w=200&h=200",
          "name": "Julie Sliva Spitzer"
        }
      ],
      "subtitle": "Bringing Symbols to Life",
      "key": "ma008",
      "image": "https://lh5.ggpht.com/HAd0NKxmFBEQUW4ZtRbw3uKUyrt5-NGYTwF7-2QoZjAK0wOOA8iKp-_Pjsyh9z7h210KsLewhtfLV5VGfQ=s0#w=436&h=268",
      "expected_learning": "In this course, you will learn...  \n\n  - To translate word problems into mathematical expressions or equations\n  - To manipulate algebraic expressions and solve equations\n  - To graph different types of functions and to understand the relationship between a function\u2019s graph and its equation\n  - To model growth and decay",
      "featured": false,
      "teaser_video": {"youtube_url": "https://www.youtube.com/watch?v=tOETs-1ml60"},
      "title": "College Algebra",
      "required_knowledge": "Basic arithmetic - addition, subtraction, multiplication and division of positive and negative numbers.  \n<br>",
      "syllabus": "The following topics will be covered. There will be two midterms and one  final exam. There are no deadlines unless you are in the SJSU Plus-Udacity for-credit program. \n\nLesson 1: Number    \nLesson 2: Expressions    \nLesson 3: Polynomials    \nLesson 4: Equations    \nLesson 5-1: Coordinates    \nLesson 5-2: Distance    \nLesson 5-3: Midpoints And Slope    \nLesson 6-1: Slope And Equations    \nLesson 6-2: Points    \nLesson 7: Forms of the Equation of a Line    \nLesson 8: Inequalities And Absolute Value    \nLesson 9: More Inequalities And Equations    \nLesson 10: Parabolas    \nLesson 11: Factoring    \nLesson 12: Quadratic and Rational Inequalities    \nLesson 13: More Parabolas    \nLesson 14: Completing the Square    \nLesson 15: Quadratic Formula    \nLesson 16: Complex Numbers    \nLesson 17: Functions    \nLesson 18: Domain and Range    \nLesson 19: Behavior of Functions    \nLesson 20: Factor Theorem    \nLesson 21: Rational Zero Test    \nLesson 22: Intermediate Value Theorem    \nLesson 24: Asymptotes    \nLesson 25: Slant Asymptotes    \nLesson 26: Transformations    \nLesson 29: Exponential Functions    \nLesson 30: Scientific Notation    \nLesson 31: Logarithmic Functions    \nLesson 32: Log Properties    \nLesson 33: Solving Exponential and Logarithmic Equations    \nLesson 34: Population, Scrolls and Sound",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/ma008?utm_medium=referral&utm_campaign=api",
      "project_name": "",
      "full_course_available": false,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh3.ggpht.com/MpxH41jmm6mn0XOaVq6daHTknCMoI_ccrmrbjtyvWJ3ukfUQsumG_Wn50WWm-WH4499D25Vg4BR96Oq-F-M=s0#w=130&h=60",
          "name": "San Jose State University"
        }
      ],
      "tracks": ["Non-Tech Classes"],
      "banner_image": "https://lh3.ggpht.com/K40yfj5_gcmalKkWS3Tw8El--JfeEuug-JxuZSPtQ2tSKTJ1_MlvSei1cq14oexgCi9HBpXofhuv1bToZg=s0#w=4680&h=968",
      "short_summary": "Gain an in-depth understanding of algebraic principles and learn how to use them to solve problems you may meet in everyday life.",
      "starter": false,
      "level": "beginner",
      "expected_duration_unit": "months",
      "summary": "Math is everywhere. In this class, you\u2019ll gain an in-depth understanding of algebraic principles, many of which you may have seen before, and learn how to use them to solve problems that we encounter in everyday life.  The online version of College Algebra will cover all of the topics that you would see in more traditional class formats, but it will present the material in a way that we hope you\u2019ll find fresh and interesting. You will learn about functions, polynomials, graphing, complex numbers, exponential and logarithmic equations, and much more, all through exploring real-world scenarios.",
      "expected_duration": 4
    },
    {
      "instructors": [
        {
          "bio": "Sandra DeSousa is an Adjunct Instructor of Mathematics at San Jose State University and San Jose City College. She has been teaching developmental math for the last 6 years (in both small classrooms and large lecture halls). Teaching algebra to her struggling students is her favorite because she loves when they \u201cget it.\u201d She is always trying new and different teaching methods to help her students succeed and is very excited to work with Udacity.",
          "image": "https://lh6.ggpht.com/G332gaFzAQSyBwA9aIrzj25PQKH2NfcGpwbL5aAb9Hx9JHdSqA7s0ymbp5jJKnSM9ZGgIQ42abiWAuusGFU=s0#w=300&h=300",
          "name": "Sandra DeSousa"
        }
      ],
      "subtitle": "Patterns and Problems",
      "key": "ma006",
      "image": "https://lh3.ggpht.com/rn3G8eo7AcAany1s2pLJZLZhwzoPGRocmxcMxMaT-nng8SA2-Md544lS0aVNeGFYmDbQbVEXWF-I9fAfevM=s0#w=436&h=268",
      "expected_learning": "<p>Understand and develop the language, models, and tools for math reasoning.\n</p>\n<p>\nReason with numbers and units to solve problems.\n</p>\n<p>\nIdentify, analyze, extend, and create patterns and functions.\n</p>\n<p>\nMake connections about relations and functions through multiple representations: graphs, charts, tables, equations.\n</p>\n<p>\nApply mathematical reasoning and logic to solve equations and write equivalent forms.\n</p>",
      "featured": false,
      "teaser_video": {"youtube_url": "https://www.youtube.com/watch?v=JDlu4CM9bDg"},
      "title": "Visualizing Algebra",
      "required_knowledge": "<p>\nAlmost nothing! Students should know their multiplication tables (1-12) and be proficient with adding and subtracting integers (for example, -7 - 16). A pencil and paper will be a student\u2019s best aid rather than a calculator. \n</p>",
      "syllabus": "Unit 1 - Review of Foundations \n\nUnit 2 - Equations and Inequalities \n\nUnit 3 - Graphs of Linear Equations \n\nUnit 4 - Systems of Equations \n\nUnit 5 - Exponents and Polynomials \n\nUnit 6 - Factoring \n\nUnit 7 - Rational Expressions \n\nUnit 8 - Rational Exponents and Radicals \n\nUnit 9 - Solving Quadratic Equations \n\nUnit 10 - Quadratic Equations and Applications \n\nUnit 11 - Conic Sections \n\nUnit 12 - Inverses, Exponentials, and Logarithms",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/ma006?utm_medium=referral&utm_campaign=api",
      "project_name": "",
      "full_course_available": false,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh3.ggpht.com/MpxH41jmm6mn0XOaVq6daHTknCMoI_ccrmrbjtyvWJ3ukfUQsumG_Wn50WWm-WH4499D25Vg4BR96Oq-F-M=s0#w=130&h=60",
          "name": "San Jose State University"
        }
      ],
      "tracks": ["Non-Tech Classes"],
      "banner_image": "https://lh5.ggpht.com/xwnm0fDCJAr08hEZ2n-dd-Tbs0ixP4DNQZ7qgT_1xoYbdm1JsIs_BfBPfwgJ2NvG_yyDsY56_OKrxch6gqo=s0#w=4680&h=968",
      "short_summary": "Learn the basics of Algebra through intuition and problem solving! From fractions to factors to functions, we\u2019ll cover a breadth of topics.",
      "starter": false,
      "level": "beginner",
      "expected_duration_unit": "months",
      "summary": "Throughout this course, we will use algebra to quantify and describe the world around us. Have you ever wondered how many songs can fit onto your flash drive? By the end of the course, you\u2019ll have stronger skills for modeling problems, analyzing patterns, and using algebra to arrive at conclusions.",
      "expected_duration": 4
    },
    {
      "instructors": [
        {
          "bio": "John Regehr is a computer science professor at the University of Utah. His research is on making software fail and on making software that fails less often. Lately, he is obsessed with compiler bugs and integer overflow problems.",
          "image": "https://lh3.ggpht.com/DOKbjucHqG_s9dQAcjI5_ezmtyjgo4wUxt_j5a9hIFMgB_Bl3oYEmfYDn3WEM1O_ji1qaSfNgXroxEA4NsfE=s0#w=137&h=137",
          "name": "John Regehr"
        }
      ],
      "subtitle": "How to Make Software Fail",
      "key": "cs258",
      "image": "https://lh4.ggpht.com/5ikgV5XANy8ChkjUqGy4YG-4MCiREXo-SZ7p7YEFqCqIpmJ34TqTofWjG8Nz6RlxzNmgtDQxAeLeLsbE-8Kh=s0#w=436&h=268",
      "expected_learning": "<p>This course will teach you how to think like a software tester, how to find bugs in code earlier, and write better code.</p>",
      "featured": false,
      "teaser_video": {"youtube_url": "https://www.youtube.com/watch?v=e06Vo9rba3k"},
      "title": "Software Testing",
      "required_knowledge": "<p>Programming experience is required.</p>",
      "syllabus": "### Lesson 1: Domains, Ranges, Oracles, and Kinds of Testing\n\nHow to think about the different elements of software testing\n\n### Lesson 2: Code Coverage\n\nHow to find parts of a program that need more testing\n\n### Lesson 3: Random Testing\n\nHow to automatically generate test cases that break code in unexpected ways\n\n### Lesson 4: Advanced Random Testing\n\nHow to engineer a sophisticated random test case generator\n\n### Lesson 5: Consequences\n\nHow to deal with lots of bugs, how to take a big input that triggers a bug and make it smaller, how to report a bug, and more!\n\n### Lesson 6: Conclusion",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/cs258?utm_medium=referral&utm_campaign=api",
      "project_name": "",
      "full_course_available": false,
      "faq": "",
      "affiliates": [],
      "tracks": ["Software Engineering"],
      "banner_image": "https://lh5.ggpht.com/VOURMePQYZaZ8SG6g6Wp9WqiiWcLGFcaHT4Q7DGjcnEI0ArMb726RzbkZ7jvUwNzNsW2_0QiaqpQep9fYd4=s0#w=4680&h=968",
      "short_summary": "Learn how to catch bugs and break software as you discover different testing methods that will help you build better software.",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "months",
      "summary": "When writing software, destruction can be just as valuable as creation. Learn how to catch bugs and break software as you discover different testing methods that will help you build better software.",
      "expected_duration": 1
    },
    {
      "instructors": [
        {
          "bio": "Michael Littman is a Professor of Computer Science at Brown University. He also teaches Udacity\u2019s Machine Learning courses: Supervised Learning, Unsupervised Learning and Reinforcement Learning. \n\nPrior to joining Brown in 2012, he led the Rutgers Laboratory for Real-Life Reinforcement Learning (RL3) at Rutgers, where he served as the Computer Science Department Chair from 2009-2012. He is a Fellow of the Association for the Advancement of Artificial Intelligence (AAAI), served as program chair for AAAI's 2013 conference and the International Conference on Machine Learning in 2009. \n\nMichael has received university-level teaching awards at both Duke and Rutgers.",
          "image": "https://lh3.ggpht.com/Pi1wwxLjjxX8MrILL4oWe-R8elf1Lbi6ASu_PIl1s2kQGnAUkv74LqCpiKm3uhoVQV07YzFlsRR3PMCFc-4=s0#w=137&h=137",
          "name": "Michael Littman"
        }
      ],
      "subtitle": "Social Network Analysis",
      "key": "cs215",
      "image": "https://lh4.ggpht.com/XYlScEjY8t3gmrnlodRerH8kpnQAxnG8ofy9aj8hJHm44-HvyISIs32YY2rQKNTA3sYN4yXuegk7nNjtPg=s0#w=436&h=268",
      "expected_learning": "By the end of this class you will understand key concepts needed to devise new algorithms for graphs and other important data structures and to evaluate the efficiency of these algorithms.",
      "featured": false,
      "teaser_video": {"youtube_url": "https://www.youtube.com/watch?v=-jTyn7xuyvE"},
      "title": "Intro to Algorithms",
      "required_knowledge": "This class assumes an understanding of programming at the level of CS101, including the ability to read and write short programs in Python; it also assumes a comfort level with mathematical notation at the level of high school Algebra II or the SATs.",
      "syllabus": "### Lesson 1: A Social Network Magic Trick\n\nObjective: Become familiar with Algorithm Analysis. \n\n- Eulerian Path\n- Correctness of Na\u00efve\n- Russian Peasants Algorithm\n- Measuring Time\n- Steps for Naive, Steps for Russian\n- Divide and Conquer\n\n### Lesson 2: Growth Rates in Social Networks\n\nObjective: Use mathematical tools to analyze how things are connected.\n\n- Chain, Ring and Grid Networks\n- Big Theta \n- Planar Graphs\n- Nodes, Edges, Regions\n- Growth Rate of Edges in Planar Graph\n- Hypercube\n- Randomly Generated Graphs\n- N Squared\n- Tangled Hypercube\n\n### Lesson 3: Basic Graph Algorithms\n\nObjective: Find the quickest route to Kevin Bacon. \n\n- Properties of Social Networks\n- Clustering Coefficient\n- Connected Components\n- Running Time of Connected Components\n- Checking Pairwise Connectivity\n- Pairwise Shortest Path\n- Depth vs. Breadth First Search\n- Recursion Replacement\n- Marvel \u201cSocial\u201d Network\n- Finding Bridge Edges\n\n### Lesson 4: It\u2019s Who You Know\n\nObjective: Learn to keep track of your Best Friends using heaps.\n\n- Degree Centrality\n- Top K Via Partitioning\n- Three Partitioning Cases\n- Properties of a Heap \n- Patch Up a Heap\n- Down Heapify\n- Heap Sort\n\n### Lesson 5: Strong and Weak Bonds\n\nObjective: Work with Social Networks that have edge weights.\n\n- Make a Tree\n- Strength of Connections\n- Weighted Social Networks\n- How to Find the Shortest Path\n- Dijkstra\u2019s Shortest Path Algorithm\n- Floyd-Warshall Intro\n- Randomizing Clustering Coefficient \n- Bounds on the Estimate\n\n### Lesson 6: Hardness of Network Problems\n\nObjective: Explore what it means for a Social Network problem to be \n\"harder\" than other.\n\n- Tetristan\n- Exponential Running Time \n- Degrees of Hardness\n- Reduction: Long and Simple Path\n- Polynomial Time Decidable Problems\n- Non-deterministic Polynomial Time Decidable Problem\n- Clique Problem in NP\n- Find the Strangers\n- Graph Coloring is NP-Complete\n\n\n### Lesson 7: Review and Application\n\n- Interview with Peter Winker (Professor, Dartmouth College) on Names and Boxes Problem && Puzzles and Algorithms\n\n- Interview with Tina Eliassi-Rad (Professor, Rutgers University) on \nStatistical Measures in Network && Social Networks in Security and Protests\n\n- Interview with Andrew Goldberg (Principal Researcher, Microsoft Research) on Practical Algorithms\n\n- Interview with Vukosi Marivate (Graduate Student, Rutgers University) on Social Algorithms\n\t\n- Interview with Duncan Watts (Principal Researcher, Microsoft) on Pathway That Can Use Two Nodes\t\n\n- Intro to Graph Search Animation",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/cs215?utm_medium=referral&utm_campaign=api",
      "project_name": "",
      "full_course_available": true,
      "faq": "### When does the course begin?\n \nThis class is self paced. You can begin whenever you like and then follow your own pace. It\u2019s a good idea to set goals for yourself to make sure you stick with the course.\n\n### How long will the course be available?\n\n This class will always be available! \n\n### Can I skip individual videos? What about entire lessons?\n\n Yes! The point is for you to learn what YOU need (or want) to learn. If you already know something, feel free to skip ahead. If you ever find that you\u2019re confused, you can always go back and watch something that you skipped.\n\n### What are the rules on collaboration?\n\n Collaboration is a great way to learn. You should do it! The key is to use collaboration as a way to enhance learning, not as a way of sharing answers without understanding them. \n\n### Why are there so many questions?\n\n Udacity classes are a little different from traditional courses. We intersperse our video segments with interactive questions. There are many reasons for including these questions: to get you thinking, to check your understanding, for fun, etc... But really, they are there to help you learn. They are NOT there to evaluate your intelligence, so try not to let them stress you out.\n\n### What should I do while I\u2019m watching the videos?\n\n Learn actively! You will retain more of what you learn if you take notes, draw diagrams, make notecards, and actively try to make sense of the material.",
      "affiliates": [],
      "tracks": ["Software Engineering"],
      "banner_image": "https://lh4.ggpht.com/drkbdrNDT-HUpCwIYPPoRov88_HMk5t3UUi9bqUs0PrVKcYkgRZa-C23gkEpck7nvqxdHWAf01iLsO6GXbs=s0#w=4680&h=968",
      "short_summary": "This class will give you an introduction to the design and analysis of algorithms, enabling you to analyze networks and discover how individuals are connected.",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "months",
      "summary": "Ever played the Kevin Bacon game? This class will show you how it works by giving you an introduction to the design and analysis of algorithms, enabling you to discover how individuals are connected. ",
      "expected_duration": 4
    },
    {
      "instructors": [
        {
          "bio": "Eric Haines is a Senior Principal Engineer at Autodesk, Inc., working on a next-generation interactive rendering system for computer-aided design applications. He is a coauthor of the book <a href=\"http://www.amazon.com/gp/product/1568814240/ref=as_li_ss_tl?ie=UTF8&camp=1789&creative=390957&creativeASIN=1568814240&linkCode=as2&tag=udacity-20\" target=\"_blank\">\u201cReal-Time Rendering\u201d</a>, a founder and editor of the Journal of Computer Graphics Techniques, and maintainer of the Graphics Gems code repository, among other activities. He received an MS from the Program of Computer Graphics at Cornell in 1985.",
          "image": "https://lh3.ggpht.com/vq-7WUaFW9-vMnLSyRR2PxX6XFPKKRNztmtSpT7MKT3zRYsVDIjbiipkgUN3lKMxd5ExJMvFYC7pK04GKwc=s0#w=339&h=339",
          "name": "Eric Haines"
        }
      ],
      "subtitle": "Creating Virtual Worlds",
      "key": "cs291",
      "image": "https://lh6.ggpht.com/bhgSqT5HG44uWr9Yiz7dD8OKlAKPBuKIAhOCNP5Er0O3bBQrWVaiFQycsILakHPQ3XLltvqVDcN3FOSVkdk=s0#w=436&h=268",
      "expected_learning": "By the end of this class you will know enough to make an animated 3D demo program that runs in a web browser, while also understanding the basic principles of how realistic computer images are generated.\n\nYou will also have a portfolio of small interactive programs that run in any web browser that supports WebGL.",
      "featured": false,
      "teaser_video": {"youtube_url": "https://www.youtube.com/watch?v=Vl0hmKg1pVw"},
      "title": "Interactive 3D Graphics",
      "required_knowledge": "**Knowing how to program in some language is all you\u2019ll need to get started**. Some knowledge of JavaScript is useful later on if you wish to make your projects more interactive and engaging. Familiarity with vectors and matrices will ease your way but is not critical.\n\nTo be able to see the interactive demos and do programming assignments you need a browser that supports **WebGL** technology. An up to date version of Chrome or Firefox will work (see our [FAQ](https://www.udacity.com/tech-requirements) for more information). You can test if your browser supports this technology by visiting the [WebGL project homepage](http://get.webgl.org). \n\nAlmost all programming will be done in JavaScript using [three.js library/API](http://en.wikipedia.org/wiki/Threejs).\n\n\n<br>\n**About Autodesk**\n\n*This course is developed in conjunction with Autodesk, a worldwide leader in 3D design, engineering, and entertainment software.  <a href=\"http://www.autodesk.com\" target=\"_blank\">http://www.autodesk.com</a>*",
      "syllabus": "### Lesson 1: Introduction\n\nMotivation and a trip down the graphics pipeline, laying out the fundamental processes\n\n### Lesson 2: Points, Vectors, and Meshes\n\nThe basics of 3D geometry definition\n\n### Lesson 3: Colors and Materials\n\nColor representation, material computations, transparency\n\n### Lesson 4: Transforms\n\nTranslation, scale, rotate and how to properly combine all these\n\n### Lesson 5: Matrices\n\nTransform representation and how to fully control these\n\n### Lesson 6: Lights\n\nDirectional and point light sources\n\n### Lesson 7: Cameras\n\nHow the camera is defined\n\n### Lesson 8: Textures and Reflections\n\nColor and opacity textures, along with reflection and normal mapping\n\n### Lesson 9: Shader Programming\n\nAn introduction to programming vertex and pixel shaders\n\n### Lesson 10: Interaction and Animation\n\nHow to select and make objects move",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/cs291?utm_medium=referral&utm_campaign=api",
      "project_name": "Create Your Own 3D Scene with WebGL",
      "full_course_available": true,
      "faq": "### When does the course begin?\n \nThis class is self paced. You can begin whenever you like and then follow your own pace. It\u2019s a good idea to set goals for yourself to make sure you stick with the course.\n\n### How long will the course be available?\n\n This class will always be available! \n\n### How do I know if this course is for me?\n\n Take a look at the \u201cClass Summary,\u201d \u201cWhat Should I Know,\u201d and \u201cWhat Will I Learn\u201d sections above. If you want to know more, just enroll in the course and start exploring.\n\n### Can I skip individual videos? What about entire lessons?\n\n Yes! The point is for you to learn what YOU need (or want) to learn. If you already know something, feel free to skip ahead. If you ever find that you\u2019re confused, you can always go back and watch something that you skipped.\n\n### How much does this cost?\n\n It\u2019s completely free! If you\u2019re feeling generous, we would love to have you contribute your thoughts, questions, and answers to the course discussion forum.\n\n### What are the rules on collaboration?\n\n Collaboration is a great way to learn. You should do it! The key is to use collaboration as a way to enhance learning, not as a way of sharing answers without understanding them. \n\n### Why are there so many questions?\n\n Udacity classes are a little different from traditional courses. We intersperse our video segments with interactive questions. There are many reasons for including these questions: to get you thinking, to check your understanding, for fun, etc... But really, they are there to help you learn. They are NOT there to evaluate your intelligence, so try not to let them stress you out.\n\n### What should I do while I\u2019m watching the videos?\n\n Learn actively! You will retain more of what you learn if you take notes, draw diagrams, make notecards, and actively try to make sense of the material.",
      "affiliates": [
        {
          "image": "https://lh3.ggpht.com/pESJJJY8LlYcxVwoIywCYt4tv7PnZqiPQRAfbjg8nPV59QFvfRwUdf5nCdyk6-wIRAz0TpEOFfjGLW1bnxrO=s0#w=130&h=60",
          "name": "Autodesk"
        }
      ],
      "tracks": ["Software Engineering"],
      "banner_image": "https://lh4.ggpht.com/XKw2aUbKzNpO1pN_zRaSEnZi0DY8SrDCfqN__N78cUZnIWaUzGKEUNteLORfoYhjJffxJC_o7QzWyzDAug=s0#w=4680&h=968",
      "short_summary": "This course will teach you the principles of 3D computer graphics: meshes, transforms, lighting, animation, and making interactive 3D applications run in a browser.",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "months",
      "summary": "This class will teach you about the basic principles of 3D computer graphics: meshes, transforms, cameras, materials, lighting, and animation.",
      "expected_duration": 2
    },
    {
      "instructors": [
        {
          "bio": "Westley Weimer is a Professor of Computer Science at the University of Virginia where he teaches computer science and leads research in <a href=\"http://www.cs.virginia.edu/~weimer/\" target=\"_blank\">programming languages and software engineering</a>. He has won three awards for teaching and over half a dozen \"best paper\" awards for research. He has MS and PhD degrees from the University of California at Berkeley.",
          "image": "https://lh3.ggpht.com/CcJtdHWmyIwp58LdhkZHSurAPYBYZyk2iAM4LCsXyFnKCD96o37pTa7IRpOLjyWaDSeLqH4IteA8FlOU5kfq=s0#w=200&h=200",
          "name": "Westley Weimer"
        }
      ],
      "subtitle": "Building a Web Browser",
      "key": "cs262",
      "image": "https://lh4.ggpht.com/TPffw_nig2w-w-ibEys-6iIZqJUXv3ceWraNtZAEY-kFz8XMUh_jqi7sOiuJLeJ0N-NCyFTMjwpLOUIQOwk=s0#w=436&h=268",
      "expected_learning": "Take this class and learn how to build your own simple web browser complete with the ability to parse and understand HTML and JavaScript.",
      "featured": false,
      "teaser_video": {"youtube_url": "https://www.youtube.com/watch?v=cn83Tm1jNSo"},
      "title": "Programming Languages",
      "required_knowledge": "This course assumes previous programming experience, comparable to what is covered by the Udacity CS101 course.",
      "syllabus": "### String Patterns\n\nFinding and specifying classes of strings using regular expressions\n    \n### Lexical Analysis\n\nBreaking strings down into important words\n    \n### Grammars\n\nSpecifying and deconstructing valid sentences\n    \n### Parsing\n\nTurning sentences into trees\n    \n### Interpreting\n\nSimulating programs\n    \n### Building a Web Browser\n\nInterpreting HTML and JavaScript\n    \n### Wrap-up\n\nExam testing your knowledge",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/cs262?utm_medium=referral&utm_campaign=api",
      "project_name": "",
      "full_course_available": true,
      "faq": "### When does the course begin?\n \nThis class is self paced. You can begin whenever you like and then follow your own pace. It\u2019s a good idea to set goals for yourself to make sure you stick with the course.\n\n### How long will the course be available?\n\n This class will always be available! \n\n### How do I know if this course is for me?\n\n Take a look at the \u201cClass Summary,\u201d \u201cWhat Should I Know,\u201d and \u201cWhat Will I Learn\u201d sections above. If you want to know more, just enroll in the course and start exploring.\n\n### Can I skip individual videos? What about entire lessons?\n\n Yes! The point is for you to learn what YOU need (or want) to learn. If you already know something, feel free to skip ahead. If you ever find that you\u2019re confused, you can always go back and watch something that you skipped.\n\n### How much does this cost?\n\n It\u2019s completely free! If you\u2019re feeling generous, we would love to have you contribute your thoughts, questions, and answers to the course discussion forum.\n\n### What are the rules on collaboration?\n\n Collaboration is a great way to learn. You should do it! The key is to use collaboration as a way to enhance learning, not as a way of sharing answers without understanding them. \n\n### Why are there so many questions?\n\n Udacity classes are a little different from traditional courses. We intersperse our video segments with interactive questions. There are many reasons for including these questions: to get you thinking, to check your understanding, for fun, etc... But really, they are there to help you learn. They are NOT there to evaluate your intelligence, so try not to let them stress you out.\n\n### What should I do while I\u2019m watching the videos?\n\n Learn actively! You will retain more of what you learn if you take notes, draw diagrams, make notecards, and actively try to make sense of the material.",
      "affiliates": [],
      "tracks": ["Software Engineering"],
      "banner_image": "https://lh3.ggpht.com/3RmrqNzJD_BW6P5Z5MolpaZ7TvkdDMT5AcOXe3WucBuz3RZKStiQeZcnjDs0oWSvcqAb9zDBGydEz1BwJOZ4=s0#w=4680&h=968",
      "short_summary": "This course is an introduction to the fundamentals of programming languages. Concepts include how to specify and process valid strings, sentences and program structures.",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "months",
      "summary": "This class will give you an introduction to the fundamentals of programming languages. Key concepts include how to specify and process valid strings, sentences and program structures. ",
      "expected_duration": 2
    },
    {
      "instructors": [
        {
          "bio": "Peter Norvig is Director of Research at Google Inc. He is also a Fellow of the American Association for Artificial Intelligence and the Association for Computing Machinery. Norvig is co-author of the popular textbook Artificial Intelligence: A Modern Approach. Prior to joining Google he was the head of the Computation Sciences Division at NASA Ames Research Center.",
          "image": "https://lh3.ggpht.com/Zvo2V0Xfae4jg2m3kMd221NocS56nliQwvXD38f9RredHSaS7QcoaOXL4wDQIcYeI32ISsIPZwur2JY_=s0#w=266&h=266",
          "name": "Peter Norvig"
        }
      ],
      "subtitle": "Programming Principles",
      "key": "cs212",
      "image": "https://lh3.ggpht.com/M8Ws2Jr9z9HYIcvev27ZNt1Fb2XsFNkD6qtQnYHzVyUPu-oqAU7Da2YD1vzxbLu302cg_77xmqaX0VCvNAk=s0#w=436&h=268",
      "expected_learning": "Move along the path towards becoming an expert programmer! In this class you will practice going from a problem description to a solution, using a series of assignments. During office hours segments, Peter will also share his own personal tips and tricks for approaching programming problems - and his techniques may surprise you!",
      "featured": false,
      "teaser_video": {"youtube_url": ""},
      "title": "Design of Computer Programs",
      "required_knowledge": "This course is intended for experienced Python programmers; students should be familiar with the Python syntax, as well as familiar with the following programming concepts: data structures, basic algorithms, and lambda functions.\n\nThis course is intended to challenge you. Be ready to struggle (and learn)!",
      "syllabus": "### Lesson 1: Winning Poker Hands\n\nSteps of the design process; Developing for clarity and generality; \nArguments for program correctness; Experimentation and simulation.; \nDesign tradeoffs; Simplicity and Clarity. Decomposition and composability.\n                \n### Lesson 2: Back of the Envelope\n\n\nBack of envelope calculations; When to use brute force and when to be \nclever; The Zebra puzzle; Generator expressions; Permutations and \ncombinations. Cryptarithmetic; Recursive and wishful thinking; Longest palindrome \nsubstring algorithm.\n                \n### Lesson 3: Regular Expressions, other languages and interpreters                \n\nDefining the language of regular expressions; Interpreting the language; \nDefining the set of strings matched by a regular expression;  \nOther languages.\n                \n### Lesson 4: Dealing with complexity through search\n                \n\nSearch: finding your way with a flashlight or boat; pouring water. \nAnalyzing the efficiency of an algorithm; Recurrence relations; Matching \ndata types with algorithms.\n### Lesson 5: Dealing with uncertainty through probability\n                \n\nProbability: the game of Pig; Maximizing expected utility to optimize strategy. \n  \n### Lesson 6: Word Games                \n\nManaging complexity; Large sets of words; Appropriate data structures; Word games. \n                \n### Lesson 7: Conclusion\n\nInterviews and Practice Exam",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/cs212?utm_medium=referral&utm_campaign=api",
      "project_name": "",
      "full_course_available": true,
      "faq": "### When does the course begin?\n \nThis class is self paced. You can begin whenever you like and then follow your own pace. It\u2019s a good idea to set goals for yourself to make sure you stick with the course.\n\n### How long will the course be available?\n\n This class will always be available! \n\n### How do I know if this course is for me?\n\n Take a look at the \u201cClass Summary,\u201d \u201cWhat Should I Know,\u201d and \u201cWhat Will I Learn\u201d sections above. If you want to know more, just enroll in the course and start exploring.\n\n### Can I skip individual videos? What about entire lessons?\n\n Yes! The point is for you to learn what YOU need (or want) to learn. If you already know something, feel free to skip ahead. If you ever find that you\u2019re confused, you can always go back and watch something that you skipped.\n\n### How much does this cost?\n\n It\u2019s completely free! If you\u2019re feeling generous, we would love to have you contribute your thoughts, questions, and answers to the course discussion forum.\n\n### What are the rules on collaboration?\n\n Collaboration is a great way to learn. You should do it! The key is to use collaboration as a way to enhance learning, not as a way of sharing answers without understanding them. \n\n### Why are there so many questions?\n\n Udacity classes are a little different from traditional courses. We intersperse our video segments with interactive questions. There are many reasons for including these questions: to get you thinking, to check your understanding, for fun, etc... But really, they are there to help you learn. They are NOT there to evaluate your intelligence, so try not to let them stress you out.\n\n### What should I do while I\u2019m watching the videos?\n\n Learn actively! You will retain more of what you learn if you take notes, draw diagrams, make notecards, and actively try to make sense of the material.",
      "affiliates": [],
      "tracks": ["Software Engineering"],
      "banner_image": "https://lh3.ggpht.com/_XeMzzYyjih_n8agpgbabjUiqjDKzZMloD7liBjzjO82ZkRYSAG6UY_qaCQYh0iu2QnUyvfYjXT_Pf-8fQ=s0#w=1170&h=422",
      "short_summary": "Learn how to model problems, and how to optimize performance by using some of the advanced features of Python.",
      "starter": false,
      "level": "advanced",
      "expected_duration_unit": "months",
      "summary": "Understanding how to approach programming problems and devise a solution is an essential skill for any Python developer. In this course, you\u2019ll learn new concepts, patterns, and methods that will expand your coding abilities from programming expert, Peter Norvig.",
      "expected_duration": 2
    },
    {
      "instructors": [
        {
          "bio": "J\u00f6rn Loviscach is a professor of technical mathematics and computer engineering. In a former life, he was a professor of computer graphics, animation, and simulation, worked as editor and senior editor for several computer magazines. For three years he also served as deputy editor-in-chief of <a href=\"http://www.heise.de/ct/\" target=\"_blank\">c\u2019t Magazin f\u00fcr Computertechnik</a>, a renowned German biweekly. His research integrates human-computer interaction, visual computing, and audio and music computing. Both as a researcher and as a practitioner he is interested in applying digital media to education. He has published over 1800 video lectures on his YouTube channel on mathematics and computer science, and his channel is one of the most popular of its kind in Germany.",
          "image": "https://lh3.ggpht.com/pbUJo1ZU6smV90AX4TTxh-1h9h_DEkJbicC-Z9TIfz1ezLHC8w_VxJLqueipJKIb2pwZR1NyBJClKrd8vH4=s0#w=133&h=133",
          "name": "J\u00f6rn Loviscach"
        }
      ],
      "subtitle": "Making Math Matter",
      "key": "cs222",
      "image": "https://lh6.ggpht.com/ECYZkX-7ISq3MJdRY-vsyvz7OZTz7GwmpX_CFb8Z2MiI6PAFHWm12xyh_hegFepPRK8L7XK_2rRaiA-s7A=s0#w=436&h=268",
      "expected_learning": "<p>By the end of this course, you'll develop an intuition for the use of differential equations in the applied sciences. You'll also learn how to build mathematical models for systems of differential equations using a variety of techniques. Along the way, you'll learn how to translate mathematical expressions into Python code and solve some really cool problems!</p>",
      "featured": false,
      "teaser_video": {"youtube_url": "https://www.youtube.com/watch?v=CWyJDfkP8T4"},
      "title": "Differential Equations in Action",
      "required_knowledge": "<p>You'll need a basic knowledge of programming in Python for this course, around the level of <a href=\"http://www.udacity.com/overview/Course/cs101/CourseRev/apr2012\">Intro to Computer Science</a>. An understanding of Python packages, as discussed in <a href=\"https://www.udacity.com/course/ud036\" target=\"_blank\">Programming Foundations with Python</a>, will also be helpful.</p>\n \n<p>In addition, you'll need to feel comfortable with trigonometry at the high school level, as well as basic vector algebra. This class will primarily involve solving differential equations numerically rather than analytically, but some exposure to <a href=\"http://www.khanacademy.org/math/calculus/\" target=\"_blank\">calculus</a> and physics at the level of <a href=\"https://www.udacity.com/course/ph100\" target=\"_blank\">Intro to Physics</a> wouldn't hurt.</p> \n\n<p>Most of all, bring with you a love of learning and problem solving!</p>",
      "syllabus": "### Lesson 1: Rescuing Apollo 13, Part 1\n\nIntroduction to the Forward Euler Method\n\n### Lesson 2: Rescuing Apollo 13, Part 2\n\nComparing solvers, Heun\u2019s Method, and the Symplectic Euler Method\n\n### Lesson 3: Analyzing the Spread of Diseases\n\nImplicit methods and stiffness\n\n### Lesson 4: There\u2019s Plenty of Fish in the Sea?\n\nStability, sensitivity, and optimization\n\n### Lesson 5: Antilock Brake Systems\n\nFriction, equilibria, and control theory\n\n### Lesson 6: The Path of a Forest Fire\n\nPartial differential equations and heat conduction\n\n### Lesson 7: Advanced Applications of Numerical Methods\n\nChaos, software, and predictive capability",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/cs222?utm_medium=referral&utm_campaign=api",
      "project_name": "",
      "full_course_available": true,
      "faq": "### When does the course begin?\n \nThis class is self paced. You can begin whenever you like and then follow your own pace. It\u2019s a good idea to set goals for yourself to make sure you stick with the course.\n\n### How long will the course be available?\n\n This class will always be available! \n\n### How do I know if this course is for me?\n\n Take a look at the \u201cClass Summary,\u201d \u201cWhat Should I Know,\u201d and \u201cWhat Will I Learn\u201d sections above. If you want to know more, just enroll in the course and start exploring.\n\n### Can I skip individual videos? What about entire lessons?\n\n Yes! The point is for you to learn what YOU need (or want) to learn. If you already know something, feel free to skip ahead. If you ever find that you\u2019re confused, you can always go back and watch something that you skipped.\n\n### How much does this cost?\n\n It\u2019s completely free! If you\u2019re feeling generous, we would love to have you contribute your thoughts, questions, and answers to the course discussion forum.\n\n### What are the rules on collaboration?\n\n Collaboration is a great way to learn. You should do it! The key is to use collaboration as a way to enhance learning, not as a way of sharing answers without understanding them. \n\n### Why are there so many questions?\n\n Udacity classes are a little different from traditional courses. We intersperse our video segments with interactive questions. There are many reasons for including these questions: to get you thinking, to check your understanding, for fun, etc... But really, they are there to help you learn. They are NOT there to evaluate your intelligence, so try not to let them stress you out.\n\n### What should I do while I\u2019m watching the videos?\n\n Learn actively! You will retain more of what you learn if you take notes, draw diagrams, make notecards, and actively try to make sense of the material.",
      "affiliates": [],
      "tracks": ["Non-Tech Classes"],
      "banner_image": "https://lh5.ggpht.com/FYlBDA8_eRTCMuc-ZlG55qHjR9IYH-t1y1z06h3NPyfiRrCtK4Cg-RRY5yydzvg49ko-eCJ6lVzSPO8wVWG-=s0#w=1170&h=422",
      "short_summary": "Write Python code to find numerical solutions to systems of differential equations. The models you create will fight wildfires, bring spaceships back to earth, and more!",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "months",
      "summary": "In this course, you'll hone your problem-solving skills through learning to find numerical solutions to systems of differential equations. You'll write code in Python to fight forest fires, rescue the Apollo 13 astronauts, stop the spread of epidemics, and resolve other real-world dilemmas.",
      "expected_duration": 2
    },
    {
      "instructors": [
        {
          "bio": "Andreas Zeller is a computer science professor at Saarland University, Germany. His research centers on programmer productivity: What can be done to ease the life and work of programmers? Among Linux and Unix programmers, he is best known for GNU DDD, a debugger front-end with built-in data visualization. Among academics and advanced professionals, Zeller is best known for Delta Debugging, a technique that automatically isolates failure causes for computer programs.",
          "image": "https://lh4.ggpht.com/M6OI-M4c9-y1GAfqwDYmmCb1W3QYPt7mx2s7uOTHY8sx7HJFqfcWcF-70xGSK05PVdLIdVK5gmJlVlftaY_5=s0#w=150&h=150",
          "name": "Andreas Zeller"
        }
      ],
      "subtitle": "Automating the Boring Tasks",
      "key": "cs259",
      "image": "https://lh5.ggpht.com/K8Fm7x8PB9bmLOscL4Mt-wTyFU0y2NF1B06wGOrgXDkEfcoNb4KXPJp9IXaB06MctgT06VOn7d1Y6_EyUxs=s0#w=436&h=268",
      "expected_learning": "At the end of this course you will have a solid understanding about systematic debugging, will know how to automate debugging and will have built several functional debugging tools in Python.",
      "featured": false,
      "teaser_video": {"youtube_url": "https://www.youtube.com/watch?v=pklED4UfODg"},
      "title": "Software Debugging",
      "required_knowledge": "Basic knowledge of programming and Python at the level of Udacity CS101 or better is required. Basic understanding of Object-oriented programming is helpful.",
      "syllabus": "### Lesson 1: How Debuggers work\n\nTheory: Scientific method and its application to debugging.  \nFun fact: First bug in the history of computer science.  \nPractice: Building a simple tracer.\n\n### Lesson 2: Asserting Expectations\n\nTheory: Assertions in testing and in debugging.  \nFun fact: The most expensive bug in history.  \nPractice: Improving the tracer.\n\n### Lesson 3: Simplifying Failures\n\nTheory: Strategy of simplifying failures. Binary search. Delta debugging principle.  \nFun fact: Mozilla bugathon.  \nPractice: Building a delta debugger.\n\n### Lesson 4: Tracking Origins\n\nTheory: Cause-effect chain. Deduction. Dependencies. Slices.  \nFun fact: Sherlock Holmes and Doctor Watson.  \nPractice: Improving the delta debugger.\n\n### Lesson 5: Reproducing Failures\n\nTheory: Types of bugs (Bohr bug, Heisenbug, Mandelbug, Schrodinbug). Systematic reproduction process.  \nFun fact: Mad laptop bug.  \nPractice: Building a statistic debugging tool.\n\n### Lesson 6: Learning from Mistakes\n\nTheory: Bug database management. Classifying bugs. Bug maps. Learning from mistakes.   \nFun fact: Programmer with the most buggy code.  \nPractice: Improving your tools and practicing on a real world bug database.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/cs259?utm_medium=referral&utm_campaign=api",
      "project_name": "Build Your Own Debugger",
      "full_course_available": true,
      "faq": "### When does the course begin?\n \nThis class is self paced. You can begin whenever you like and then follow your own pace. It\u2019s a good idea to set goals for yourself to make sure you stick with the course.\n\n### How long will the course be available?\n\n This class will always be available! \n\n### How do I know if this course is for me?\n\n Take a look at the \u201cClass Summary,\u201d \u201cWhat Should I Know,\u201d and \u201cWhat Will I Learn\u201d sections above. If you want to know more, just enroll in the course and start exploring.\n\n### Can I skip individual videos? What about entire lessons?\n\n Yes! The point is for you to learn what YOU need (or want) to learn. If you already know something, feel free to skip ahead. If you ever find that you\u2019re confused, you can always go back and watch something that you skipped.\n\n### How much does this cost?\n\n It\u2019s completely free! If you\u2019re feeling generous, we would love to have you contribute your thoughts, questions, and answers to the course discussion forum.\n\n### What are the rules on collaboration?\n\n Collaboration is a great way to learn. You should do it! The key is to use collaboration as a way to enhance learning, not as a way of sharing answers without understanding them. \n\n### Why are there so many questions?\n\n Udacity classes are a little different from traditional courses. We intersperse our video segments with interactive questions. There are many reasons for including these questions: to get you thinking, to check your understanding, for fun, etc... But really, they are there to help you learn. They are NOT there to evaluate your intelligence, so try not to let them stress you out.\n\n### What should I do while I\u2019m watching the videos?\n\n Learn actively! You will retain more of what you learn if you take notes, draw diagrams, make notecards, and actively try to make sense of the material.",
      "affiliates": [],
      "tracks": ["Software Engineering"],
      "banner_image": "https://lh6.ggpht.com/nMdcBp-dUbKYNytkhi9yl1OApp6Ig4zDjC1pjPAyIw_PVegaXF9-9kHIvE_qGQULE4ZKg3N77viBmvhJqKk=s0#w=1170&h=422",
      "short_summary": "In this course you will learn how to debug programs systematically using scientific methods and build several automated debugging tools in Python.",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "months",
      "summary": "In this class you will learn how to debug programs systematically, how to automate the debugging process and build several automated debugging tools in Python.",
      "expected_duration": 2
    },
    {
      "instructors": [
        {
          "bio": "Sebastian studied Bioinformatics at Universit\u00e4t T\u00fcbingen and holds a Ph.D. from Universit\u00e4t Jena in Germany, where his research focused on finding efficient algorithms for computationally hard problems on biological networks. After several years of strategic consulting for pharma companies and financial services, he's currently working with Seven Bridges Genomics, a big data bioinformatics startup. He is also well-known for his TED Talks, especially the one on the statistics of TED Talks..",
          "image": "https://lh3.ggpht.com/Md1Kx40zWMm6K8WtVcjH-1mbISwfQownUN-Lz-DpKMZH3hjgEHlZa0MVc44ct_ZyjxZvVir_siiJF1-f514=s0#w=800&h=800",
          "name": "Sebastian Wernicke"
        }
      ],
      "subtitle": "Dealing with Challenging Problems",
      "key": "cs313",
      "image": "https://lh5.ggpht.com/vb0Pb3pzliCuiVgmwpE0JI9Ktgzmf4x-7AY4t6N7Uqvdw720eadz8Vwhx_47L8ZQet_rE9Ghce8Z-aOGLGU=s0#w=436&h=268",
      "expected_learning": "<p>At the end of this course, you will have a solid understanding of theoretical computer science. This will not only allow you to recognize some of the most challenging algorithmic problems out there, but also give you powerful tools to deal with them in practice.</p>",
      "featured": false,
      "teaser_video": {"youtube_url": "https://www.youtube.com/watch?v=AZ9B1kTW5FA"},
      "title": "Intro to Theoretical Computer Science",
      "required_knowledge": "<p>You should have a basic understanding of algorithms (such as <a href=\"https://www.udacity.com/course/cs215\">CS215</a>) and programming (such as <a href=\"https://www.udacity.com/course/cs101\">CS101</a>). No prior knowledge about theoretical computer science required!</p>",
      "syllabus": "### Lesson 1: Challenging Problems\n\nAn introduction to tough problems and their analysis\n\n### Lesson 2: Understanding Hardness\n\nWhat we mean when a problem is \u201chard\u201d and the concept of NP-completeness\n\n### Lesson 3: Showing Hardness\n\nTools to let you recognize and prove that a problem is hard\n\n### Lesson 4: Intelligent Force\n\nSmart techniques to solve problems that should \u2013 theoretically \u2013 be impossible to solve\n\n### Lesson 5: Sloppy Solutions\n\nGaining speed by accepting approximate solutions\n\n### Lesson 6: Poking Around\n\nWhy randomness can be of help \u2013 sometimes. An introduction to complexity classes.\n\n### Lesson 7: Ultimate Limits\n\nProblems that no computer can ever solve. In theory.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/cs313?utm_medium=referral&utm_campaign=api",
      "project_name": "",
      "full_course_available": false,
      "faq": "### When does the course begin?\n \nThis class is self paced. You can begin whenever you like and then follow your own pace. It\u2019s a good idea to set goals for yourself to make sure you stick with the course.\n\n### How long will the course be available?\n\n This class will always be available! \n\n### How do I know if this course is for me?\n\n Take a look at the \u201cClass Summary,\u201d \u201cWhat Should I Know,\u201d and \u201cWhat Will I Learn\u201d sections above. If you want to know more, just enroll in the course and start exploring.\n\n### Can I skip individual videos? What about entire lessons?\n\n Yes! The point is for you to learn what YOU need (or want) to learn. If you already know something, feel free to skip ahead. If you ever find that you\u2019re confused, you can always go back and watch something that you skipped.\n\n### How much does this cost?\n\n It\u2019s completely free! If you\u2019re feeling generous, we would love to have you contribute your thoughts, questions, and answers to the course discussion forum.\n\n### What are the rules on collaboration?\n\n Collaboration is a great way to learn. You should do it! The key is to use collaboration as a way to enhance learning, not as a way of sharing answers without understanding them. \n\n### Why are there so many questions?\n\n Udacity classes are a little different from traditional courses. We intersperse our video segments with interactive questions. There are many reasons for including these questions: to get you thinking, to check your understanding, for fun, etc... But really, they are there to help you learn. They are NOT there to evaluate your intelligence, so try not to let them stress you out.\n\n### What should I do while I\u2019m watching the videos?\n\n Learn actively! You will retain more of what you learn if you take notes, draw diagrams, make notecards, and actively try to make sense of the material.",
      "affiliates": [],
      "tracks": ["Software Engineering"],
      "banner_image": "https://lh3.ggpht.com/Y68B-xZgBJ02ciLVeNVPR_fsUYYuUaQY7-0cA6T3r2Ecx-Yd--14Hdh5728YroN2cozZfbWRczOXOJgJk3g=s0#w=1170&h=422",
      "short_summary": "Learn the basic concepts in theoretical computer science. Discover what they imply for solving tough computational challenges.",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "months",
      "summary": "This class teaches you about basic concepts in theoretical computer science -- such as NP-completeness -- and what they imply for solving tough algorithmic problems.",
      "expected_duration": 2
    },
    {
      "instructors": [
        {
          "bio": "Member of the Product Expert Team in the Functional Verification R&D group of Cadence Design Systems, a leading global Electronic Design Automation company. My primary focus area is the Specman/e and UVM Multi-language solution. I have 10 years of verification experience spanning from an AE to AE Manager to Solutions Architect.",
          "image": "https://lh6.ggpht.com/KRkHTouDSrcQUQt3dWyEaPEgPm8B2zJQ9HqHjcfCXATZkUTzdjZBGFbpm23dSR07nYcuTJbG-Upl1K2dhQ=s0#w=230&h=230",
          "name": "Hannes Fr\u00f6hlich"
        },
        {
          "bio": "Axel Scherer is a senior engineer and manager with over 10 years of experience building new markets and innovating technical products. Currently, Axel is leading a team for Testbenches and Verification Methodologies in the Functional Verification R&D group at Cadence Design Systems, a leading global Electronic Design Automation company. Axel's work centers on advanced verification on various technologies spanning formal equivalence checking, model checking, assertion-based verification and test bench simulation. He is a passionate and innovative leader with a proven track record of motivating and enabling global teams to succeed.",
          "image": "https://lh5.ggpht.com/2eu_Cs0nVdpZrALE1w6tErvjEZSnyPTQn7FTK3w59V2hjCJG-lD9SKtyKlynI0axDtMikSX1u-_nyUZuuFs=s0#w=369&h=369",
          "name": "Axel Scherer"
        }
      ],
      "subtitle": "How to Verify Chips and Eliminate Bugs",
      "key": "cs348",
      "image": "https://lh5.ggpht.com/e6C1jWCrIiUpwbGRWgu9s_bdsh65-LulChZIwW-Bgdu7dYfA4o2tmJ_z-E8cS12runmY8YbteCFpw8A0sw=s0#w=436&h=268",
      "expected_learning": "<p>This course will teach you how to think like a verification engineer.\nIt will show the software development aspects you need to know to \nensure chips are working as expected. You will learn how to implement verification environments.</p>\n",
      "featured": false,
      "teaser_video": {"youtube_url": "https://www.youtube.com/watch?v=PZHh2O6iqj8"},
      "title": "Functional Hardware Verification",
      "required_knowledge": "<p>Programming experience including object-oriented programming. Data & Control structure. \n<br>\n<br>\n<br>\n<b>This course is developed by Cadence Design Systems,\na global leader in electronic design automation. <a href=\"http://www.cadence.com/solutions/ev/Pages/default.aspx\" target=\"_blank\">Cadence\u00ae software</a>, \nhardware, IP, and services help customers around the world to\novercome a range of technical and economic hurdles. </b> \n</p>",
      "syllabus": "**Lesson 1:**  Introduction to Hardware Verification\n\n**Lesson 2:**  Basic stimulus modeling and generation\n\n**Lesson 3:**  Interfacing to the Hardware Model\n\n**Lesson 4:**  Monitoring and Functional Coverage\n\n**Lesson 5:**  Checking\n\n**Lesson 6:**  Aspect Oriented Programming\n\n**Lesson 7:**  Reuse Methodology\n\n**Lesson 8:**  Debugging\n\n**Lesson 9:** Conclusion and Exam",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/cs348?utm_medium=referral&utm_campaign=api",
      "project_name": "",
      "full_course_available": false,
      "faq": "### When does the course begin?\n \nThis class is self paced. You can begin whenever you like and then follow your own pace. It\u2019s a good idea to set goals for yourself to make sure you stick with the course.\n\n### How long will the course be available?\n\n This class will always be available! \n\n### How do I know if this course is for me?\n\n Take a look at the \u201cClass Summary,\u201d \u201cWhat Should I Know,\u201d and \u201cWhat Will I Learn\u201d sections above. If you want to know more, just enroll in the course and start exploring.\n\n### Can I skip individual videos? What about entire lessons?\n\n Yes! The point is for you to learn what YOU need (or want) to learn. If you already know something, feel free to skip ahead. If you ever find that you\u2019re confused, you can always go back and watch something that you skipped.\n\n### How much does this cost?\n\n It\u2019s completely free! If you\u2019re feeling generous, we would love to have you contribute your thoughts, questions, and answers to the course discussion forum.\n\n### What are the rules on collaboration?\n\n Collaboration is a great way to learn. You should do it! The key is to use collaboration as a way to enhance learning, not as a way of sharing answers without understanding them. \n\n### Why are there so many questions?\n\n Udacity classes are a little different from traditional courses. We intersperse our video segments with interactive questions. There are many reasons for including these questions: to get you thinking, to check your understanding, for fun, etc... But really, they are there to help you learn. They are NOT there to evaluate your intelligence, so try not to let them stress you out.\n\n### What should I do while I\u2019m watching the videos?\n\n Learn actively! You will retain more of what you learn if you take notes, draw diagrams, make notecards, and actively try to make sense of the material.",
      "affiliates": [
        {
          "image": "https://lh3.ggpht.com/dYLV1B1p3gmCPH2iq7tfeEPzE3uaDwnkf-077wwAains-KdWJnsT9NziHcpHUxN763MUhVAFhwPUA2rT0r0=s0#w=130&h=60",
          "name": "Cadence"
        }
      ],
      "tracks": [],
      "banner_image": "https://lh4.ggpht.com/xNbM6LyHJvfc8cSHQBCHGD1sO1R61S1hpKlBCBTHjpCLJO5mT9rR2UgBhPNJm5l8uU2RrtUWtz7IAhXm44HU=s0#w=1170&h=422",
      "short_summary": "This course will teach you how to efficiently verify chip functionality, learn about automated test generation, and learn to improve code reuse.",
      "starter": false,
      "level": "advanced",
      "expected_duration_unit": "months",
      "summary": "When developing chips it is essential that they get verified thoroughly because it is very hard or impossible to fix them once they have been manufactured.  In this class, you will learn how to program verification environments that verify chip functionality efficiently, as well as understand and leverage automation such as constrained random test generation and improve code reuse leveraging a standardized methodology.",
      "expected_duration": 2
    },
    {
      "instructors": [
        {
          "bio": "Andy Brown is a Lead Instructor at Udacity. He has a degree in physics from MIT, and has devoted his time after graduating to teaching and learning. Since joining Udacity in 2012, Andy has helped design dozens of classes. He loves exploring this new educational medium by creating innovative and engaging courses. When he\u2019s not figuring out the best ways to transform minds, you can find Andy on his bike or in his car, exploring the amazing experiences that his new California home has to offer.",
          "image": "https://lh6.ggpht.com/gzcZTQuXefPLSSaKithiGKzP5vcc_Gs-CbJjmuCTIn-YLsjzjvyWyBwnDXa-dVOf9EbOX03va4jFTdD4_w=s0#w=1800&h=1800",
          "name": "Andy Brown"
        }
      ],
      "subtitle": "Landmarks in Physics",
      "key": "ph100",
      "image": "https://lh6.ggpht.com/9xDuLEr_4CuXcBZVbMQPagaUOvdUOH_T8V4I9Nm9XvDogvR4_yudI60v5_0tWedKx2LInYQiV6KOGqNPXuo=s0#w=436&h=268",
      "expected_learning": "<p>This unique class gives you the chance to see the sites where physics history was made and learn some of the subject's most captivating concepts.</p>",
      "featured": false,
      "teaser_video": {"youtube_url": "https://www.youtube.com/watch?v=cuKmcq6pu9s"},
      "title": "Intro to Physics",
      "required_knowledge": "<p>This course is suitable for anyone; a basic understanding of algebra is suggested.</p>",
      "syllabus": "### Lesson 1: How can we measure the circumference of the Earth?\n\nBasics of geometry and trigonometry\n\n### Lesson 2: How do objects move?\n\nData analysis and kinematics\n\n### Lesson 3: What causes motion?\n\nForces, acceleration, and Newton\u2019s Laws\n\n### Lesson 4: How can we use motion?\n\nWork, energy, and simple machines\n\n### Lesson 5: How can we determine our longitude at sea?\n\nSimple harmonic motion\n\n### Lesson 6: What is electricity?\n\nCharge and electric fields\n\n### Lesson 7: What is left to discover?\n\nModern physics and open questions",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/ph100?utm_medium=referral&utm_campaign=api",
      "project_name": "",
      "full_course_available": false,
      "faq": "### When does the course begin?\n \nThis class is self paced. You can begin whenever you like and then follow your own pace. It\u2019s a good idea to set goals for yourself to make sure you stick with the course.\n\n### How long will the course be available?\n\n This class will always be available! \n\n### How do I know if this course is for me?\n\n Take a look at the \u201cClass Summary,\u201d \u201cWhat Should I Know,\u201d and \u201cWhat Will I Learn\u201d sections above. If you want to know more, just enroll in the course and start exploring.\n\n### Can I skip individual videos? What about entire lessons?\n\n Yes! The point is for you to learn what YOU need (or want) to learn. If you already know something, feel free to skip ahead. If you ever find that you\u2019re confused, you can always go back and watch something that you skipped.\n\n### How much does this cost?\n\n It\u2019s completely free! If you\u2019re feeling generous, we would love to have you contribute your thoughts, questions, and answers to the course discussion forum.\n\n### What are the rules on collaboration?\n\n Collaboration is a great way to learn. You should do it! The key is to use collaboration as a way to enhance learning, not as a way of sharing answers without understanding them. \n\n### Why are there so many questions?\n\n Udacity classes are a little different from traditional courses. We intersperse our video segments with interactive questions. There are many reasons for including these questions: to get you thinking, to check your understanding, for fun, etc... But really, they are there to help you learn. They are NOT there to evaluate your intelligence, so try not to let them stress you out.\n\n### What should I do while I\u2019m watching the videos?\n\n Learn actively! You will retain more of what you learn if you take notes, draw diagrams, make notecards, and actively try to make sense of the material.",
      "affiliates": [],
      "tracks": ["Non-Tech Classes"],
      "banner_image": "https://lh4.ggpht.com/oBjt3byeKLwq96h0G-xq1FVbAKSDznwNmAW5bD-VQ-2JKnwfZBP3lBg53-3zE2TH_tZtKx3tdpgrAd3SKs8=s0#w=1170&h=422",
      "short_summary": "Go to the places where big physics discoveries were made in the past and make them yourself. You\u2019ll visit Italy, the Netherlands, and the UK as you learn basic physics.",
      "starter": false,
      "level": "beginner",
      "expected_duration_unit": "months",
      "summary": "Study physics abroad in Europe -- virtually! Learn the basics of physics on location in Italy, the Netherlands and the UK, by answering some of the discipline's major questions from over the last 2000 years. ",
      "expected_duration": 2
    },
    {
      "instructors": [
        {
          "bio": "Originally from North Carolina, Matt is a science lover and strong supporter of scientific skepticism. He plays the piano, studies philosophy, and is still waiting for a virtual reality version of the Legend of Zelda. Matt has been involved extensively in biomedical research and teaching at all levels, from elementary to college. After receiving an International Baccalaureate diploma in high school, Matt studied biology and Hispanic studies at East Carolina University. He then earned his PhD in cell and molecular biology from Duke University before accepting a postdoctoral fellowship at the University of California San Francisco.",
          "image": "https://lh5.ggpht.com/yzCy7kjQM-yNOuRQd-gvbhak_38Jev_qOj8qeY0g2ZAH3KjGVMOBxGRpNx3HzzcR-3MXeziHfuSO-iQ70TQ=s0#w=1924&h=1924",
          "name": "Matthew Cook"
        },
        {
          "bio": "Lauren Castellano earned her MA in Experimental Psychology from San Jose State University and her BA in Psychology from the University of Nevada Las Vegas. She has been a teaching assistant for three years. She is passionate about teaching psychology because she believes it applies to everything we do and anyone can benefit from learning about psychology. Lauren is also passionate about traveling and scuba diving; she is a certified rescue diver and a dive master candidate.",
          "image": "https://lh3.ggpht.com/IR8KdVyBES5rdmFgWddMqnCeSNG6IsTIkbJv-ninVoV_4A6uJbahOyN5rei4dKDElY8rbzw7QcjejOoz0GM=s0#w=477&h=477",
          "name": "Lauren Castellano"
        },
        {
          "bio": "Joanna Mountain is a human geneticist who studies the connections between genetics and a broad range of diseases, the prehistory underlying human genetic diversity, and the nature of the relationship between genetic diversity and categories of race and ethnicity. Joanna earned her PhD in Genetics from Stanford University. Currently she is Senior Director of Research at 23andMe, a personal genetics company.",
          "image": "https://lh6.ggpht.com/WEfpVZXaEfw31yeg8GWdIcp8fl6Inu22SyCkDauEhFhoEmhtXDwE7g2B9kZUIR9Bt3e3cZQ5jNPYd40vgJY=s0#w=300&h=300",
          "name": "Joanna Mountain"
        },
        {
          "bio": "Originally from Germany, Uta Francke received her MD from the University of Munich and then specialized in medical genetics, diagnosing and treating people with genetic disorders. She has carried out laboratory research in both humans and mice, and she has taught clinical and molecular genetics at UCSD, Yale and Stanford University. She currently is Senior Medical Director at 23andMe, a personal genetics company.",
          "image": "https://lh6.ggpht.com/ArcSOlVgZwfQHIWI0ig5LeQef6vNhgXJPUEZ_iChDEdkGYQRcZNkyPEtCTeoAp7GDxWbOUlUa2kWdWyabm8=s0#w=126&h=126",
          "name": "Uta Francke"
        },
        {
          "bio": "The scientists at 23andMe are experts in population, medical and computational genetics, biomedical informatics, reproductive biology, personalized medicine, and pharmacology.  They share a passion for helping people understand their genetic information and gain deeper insights into their health, ancestry, and traits.  On any given day, they can be found furthering genetic research, making scientific discoveries relevant to individuals, and promoting genomic medicine.",
          "image": "https://lh4.ggpht.com/GRuG6dEwTAnvurhirmvxLoXq2EjtXZgOylT5pRKN_sJd_NIDfwoqh2LmfOa2rayeDwwoQSGnMPj7AAToMErK=s0#w=402&h=402",
          "name": "23andMe Team"
        }
      ],
      "subtitle": "Introduction to Genetics for Beginners",
      "key": "bio110",
      "image": "https://lh5.ggpht.com/Fh07_XbT61CGDWsQoOMQaIeHlgoR2tVogD0nnkmUsd7OaM_l5YIJeT1AJD55oQcSCTpjwIK4b7a8vL9DWw=s0#w=436&h=268",
      "expected_learning": "You will learn about fundamental principles of inheritance, gene expression, mutation and variation, development of simple and complex biological traits, human ancestry and evolution, and the acquisition of personal genetic information. By the end of this course, you will be able to read and understand genetic information available from personal genetics services such as [23andMe](https://www.23andme.com/).",
      "featured": false,
      "teaser_video": {"youtube_url": "https://www.youtube.com/watch?v=sEXrjh-tme8"},
      "title": "Tales from the Genome",
      "required_knowledge": "No previous experience in genetics is necessary. However, familiarity with basic biological concepts, like the cell, is beneficial.",
      "syllabus": "## Lesson 1: Introduction to traits and heredity\nTrait variation and categorization, basic models of inheritance, and the connection via DNA. Check out the [concept map](http://content.udacity-data.com/course/bio110/Lesson_1_Concept_Map.pdf) for this lesson.\n\n## Lesson 2: Defining the genome\nDNA structure, chromosomes, and genome organization. Check out the [concept map](http://content.udacity-data.com/course/bio110/Lesson_2_Concept_Map.pdf) for this lesson.\n\n## Lesson 3: How a genome works\nProtein coding genes, transcription, translation, discerning the genetic code, and alleles. Check out the [concept map](http://content.udacity-data.com/course/bio110/Lesson_3_Concept_Map.pdf) for this lesson.\n\n## Lesson 4: Gene regulation\nNon-coding DNA, regulatory regions of genes, and transcription factors. Check out the [concept map](http://content.udacity-data.com/course/bio110/Lesson_4_Concept_Map.pdf) for this lesson.\n\n## Lesson 5: Transmission of genes and traits\nFamily relationships and pedigrees, inheritance patterns, allele dominance, and chromosome dynamics. Check out the [concept map](http://content.udacity-data.com/course/bio110/Lesson_5_Concept_Map.pdf) for this lesson.\n\n## Lesson 6: Origin of mutation/variation\nTypes of mutations, various causes of mutation, allelic frequency, and the spread of alleles in a population. Check out the [concept map](http://content.udacity-data.com/course/bio110/Lesson_6_Concept_Map.pdf) for this lesson.\n\n## Lesson 7: How to obtain and interpret personal genetic information\nPersonalized genetics: sample acquisition, DNA extraction and processing, and interpretation of results. Check out the [concept map](http://content.udacity-data.com/course/bio110/Lesson_7_Concept_Map.pdf) for this lesson.\n\n## Lesson 8: Simple genetic traits\nMolecular causes of monogenic traits, loss-of-function vs. gain-of-function alleles, and dominance. Check out the [concept map](http://content.udacity-data.com/course/bio110/Lesson_8_Concept_Map.pdf) for this lesson.\n\n## Lesson 9: Multifactorial traits\nPolygenic traits, complex traits with an environmental effect, qualitative and quantitative measures, twin studies, relative risk, and genome-wide association studies (GWAS). Check out the [concept map](http://content.udacity-data.com/course/bio110/Lesson_9_Concept_Map.pdf) for this lesson.\n\n## Lesson 10: Pharmacogenetics: genes and drugs\nPharmacokinetics and pharmacodynamics, alleles affecting drug metabolism, and personalized medicine. Check out the [concept map](http://content.udacity-data.com/course/bio110/Lesson_10_Concept_Map.pdf) for this lesson.\n\n## Lesson 11: Human ancestry and evolution\nIdentity by state (IBS), Identity by descent (IBD), relative finder, maternal and paternal lineages, neanderthal interbreeding, and human/chimp evolution. Check out the [concept map](http://content.udacity-data.com/course/bio110/Lesson_11_Concept_Map.pdf) for this lesson.\n\n## Lesson 12: The immortal genome (putting genetics to work)\nPersonal decisions, legal questions, professional options, and the future of genetics. Check out the [concept map](http://content.udacity-data.com/course/bio110/Lesson_12_Concept_Map.pdf) for this lesson.\n\n## Bonus Lesson: Discovering DNA in your Kitchen\nUsing only normal household items, even YOU can extract DNA and see it live and in person. At the end of this lesson you'll have the best new party trick EVER. (just remember to bring strawberries) [Here](http://content.udacity-data.com/course/bio110/Kitchen_DNA_Extraction_from_Strawberries.pdf) is the protocol/procedure to make it happen.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/bio110?utm_medium=referral&utm_campaign=api",
      "project_name": "",
      "full_course_available": false,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh4.ggpht.com/nIrIWSgb_T8yKX-PKyxmfiPBqWUQ473SFik-eP_N0VxQtBl0QFljozPDuwj8obRAqMmW__XADI7RyKUw0UZ-=s0#w=130&h=60",
          "name": "23andMe"
        }
      ],
      "tracks": ["Non-Tech Classes"],
      "banner_image": "https://lh4.ggpht.com/_AHqr0EXcLBzF0rrwtBagE0tw86qcitFjUF21mCh2h_mReMEZ-hsYdNFvKQXz0zY9yUX9ufCiQk09m6oGBU=s0#w=2340&h=484",
      "short_summary": "Learn the basics of genetics, with a personal twist. This class is all about DNA and how it shapes who we are.",
      "starter": false,
      "level": "beginner",
      "expected_duration_unit": "months",
      "summary": "This course is a journey into the biology of the human genome and will highlight the scientific, social, and personal perspectives of people living with a variety of traits.",
      "expected_duration": 3
    },
    {
      "instructors": [
        {
          "bio": "Susan Snycerski has been teaching Introductory Psychology for 15 years. It's one of her favorite subjects to teach as she feels students can learn so much about themselves and others in this course. She completed her BS in Psychology at Central Michigan University and her Master's and Ph.D. at Western Michigan University. She was awarded a two-year postdoctoral fellowship from the National Institute on Drug Abuse and holds a graduate certificate in Clinical Trials Administration. She has been teaching at San Jose State for 8 years. Susan enjoys hiking, gourmet cooking, and cheering for the Detroit Red Wings, her favorite NHL hockey team.",
          "image": "https://lh3.ggpht.com/4GPqrXPP3Eu84YgSHsWtT7Do7IYb62XF9iLNxTmbkxQDRFJArCaqcHxQWzcLuKb47P9RnDXtcPQaIcVcJqs=s0#w=400&h=400",
          "name": "Susan Snycerski"
        },
        {
          "bio": "Gregory J. Feist is Associate Professor of Psychology in Personality at San Jose State University and Director of the MA Program in Research and Experimental Psychology. He teaches Introduction to Psychology, Test and Measures, and The Psychology of Science. He is co-author of the introductory text, Psychology: Perspectives and Connections (McGraw-Hill). He received his PhD in 1991 from the University of California at Berkeley.",
          "image": "https://lh4.ggpht.com/NZDaUHeGOoStnHILY22A46Fm_b17a0kI7C8oMbPKKcn0gIpE6gf4Uw3dAuD2e3Lpb_Zgvk1ohgLrqlOBYpY=s0#w=400&h=400",
          "name": "Greg Feist"
        }
      ],
      "subtitle": "The Science of Thought and Behavior",
      "key": "ps001",
      "image": "https://lh3.ggpht.com/W5BzbDFitZydf3rAqTsZ3RuFm4HS2ZBoGOPwjSZSqTkD0ZUC6DhURuAa0fIHr6D8LSQk9r73QFqnJtSTXzY=s0#w=436&h=268",
      "expected_learning": "Students will be able to:\n\n- identify and analyze the social dimension of society as a context for human life, the processes of social change and social continuity, the role of human agency in those processes, and the forces that engender social cohesion and fragmentation.\n\n- place contemporary developments in cultural, historical, environmental, and spatial contexts.\n\n- identify the dynamics of ethnic, cultural, gender/sexual, age-based, class, regional, national, transnational, and global identities and the similarities, differences, linkages, and interactions between them.\n\n- evaluate social science information, draw on different points of view, and formulate applications appropriate to contemporary social issues.\n\n- recognize the interactions of social institutions, culture, and environment with the behavior of individuals.",
      "featured": false,
      "teaser_video": {"youtube_url": "https://www.youtube.com/watch?v=Xb6N53WXfQ0"},
      "title": "Intro to Psychology",
      "required_knowledge": "There are no prerequisites, but we encourage curiosity about human nature.",
      "syllabus": "Lesson 1:  Introduction to Psychology\n\nLesson 2: Research Methods in Psychology\n\nLesson 3: The Biology of Behavior\n\nLesson 4: Sensation and Perception\n\nLesson 5: Human Development\n\nLesson 6: Consciousness\n\nLesson 7: Learning\n\nLesson 8: Memory\n\nLesson 9: Language and Thought\n\nLesson 10: Intelligence\n\nLesson 11: Motivation and Emotion\n\nLesson 12: Stress and Health\n\nLesson 13: Personality\n\nLesson 14: Social Behavior\n\nLesson 15: Psychological Disorders\n\nLesson 16: Treatments for Psychological Disorders",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/ps001?utm_medium=referral&utm_campaign=api",
      "project_name": "",
      "full_course_available": false,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh3.ggpht.com/MpxH41jmm6mn0XOaVq6daHTknCMoI_ccrmrbjtyvWJ3ukfUQsumG_Wn50WWm-WH4499D25Vg4BR96Oq-F-M=s0#w=130&h=60",
          "name": "San Jose State University"
        }
      ],
      "tracks": ["Non-Tech Classes"],
      "banner_image": "https://lh4.ggpht.com/wXqP0nUt0oN8yt4sm9hSz5Nk1fKzHopMWeeWtiTZGl3pK5EU3UJOMzExyHa1zjT-sqN-G1dFUVYcEA9pTgQ=s0#w=1170&h=422",
      "short_summary": "Go on a journey through psychological concepts and principles to enable you to gain a more in-depth understanding of human thought and behavior.",
      "starter": false,
      "level": "beginner",
      "expected_duration_unit": "months",
      "summary": "Introduction to Psychology is a journey through all of the major psychological concepts and principles. The knowledge gained from this course will allow students to critically evaluate psychological research and have a more in-depth understanding of human thought and behavior.",
      "expected_duration": 4
    },
    {
      "instructors": [
        {
          "bio": "Michael Littman is a Professor of Computer Science at Brown University.  He also teaches Udacity\u2019s Algorithms course (CS215) on crunching social networks.  Prior to joining Brown in 2012, he led the Rutgers Laboratory for Real-Life Reinforcement Learning (RL3) at Rutgers, where he served as the Computer Science Department Chair from 2009-2012.  He is a Fellow of the Association for the Advancement of Artificial Intelligence (AAAI), served as program chair for AAAI's 2013 conference and the International Conference on Machine Learning in 2009, and received university-level teaching awards at both Duke and Rutgers. Charles Isbell taught him about racquetball, weight-lifting and Ultimate Frisbee, but he's not that great at any of them. He's pretty good at singing and juggling, though.",
          "image": "https://lh6.ggpht.com/_tRBHjrD523dV4IEQqR6DVDtzofvJqw7iYeLaG-U1HhgB8w1nsmBENnGPh4GkFuNvM0frkYcCHJWK-8MDV61=s0#w=321&h=321",
          "name": "Michael Littman"
        },
        {
          "bio": "Charles Isbell is a Professor and Senior Associate Dean at the School of Interactive Computing at Georgia Tech. His research passion is artificial intelligence, particularly on building autonomous agents that must live and interact with large numbers of other intelligent agents, some of whom may be human. Lately, he has turned his energies toward adaptive modeling, especially activity discovery (as distinct from activity recognition), scalable coordination, and development environments that support the rapid prototyping of adaptive agents. He is developing adaptive programming languages, and trying to understand what it means to bring machine learning tools to non-expert authors, designers and developers. He sometimes interacts with the physical world through racquetball, weight-lifting and Ultimate Frisbee.",
          "image": "https://lh4.ggpht.com/BWYEYDvfZfN8Rg_BvReeoHnor_vbN9MCGWCWHMal7cCE8XoK9iq8a4C-KQxn-LeK-S5rpAlCuRTTMPp2B-jL=s0#w=425&h=425",
          "name": "Charles Isbell"
        }
      ],
      "subtitle": "Supervised, Unsupervised & Reinforcement",
      "key": "ud262",
      "image": "https://lh3.ggpht.com/qYa_klGgwhsrYg9HIo6U7ln4B10p1zJvNy5i_0iyowC8RiRMJ8c2mfJToAqOA8SRS36ziDkGmluycIj-GQ=s0#w=1150&h=706",
      "expected_learning": "You will learn about and practice a variety of Supervised, Unsupervised and Reinforcement Learning approaches. \n\nSupervised Learning is an important component of all kinds of technologies, from stopping credit card fraud, to finding faces in camera images, to recognizing spoken language. Our goal is to give you the skills that you need to understand these technologies and interpret their output, which is important for solving a range of data science problems. And for surviving a robot uprising.\n\nClosely related to pattern recognition, Unsupervised Learning is about analyzing data and looking for patterns. It is an extremely powerful tool for identifying structure in data. This section focuses on how you can use Unsupervised Learning approaches -- including randomized optimization, clustering, and feature selection and transformation -- to find structure in unlabeled data.\n\nReinforcement Learning is the area of Machine Learning concerned with the actions that software agents ought to take in a particular environment in order to maximize rewards. You can apply Reinforcement Learning to robot control, chess, backgammon, checkers, and other activities that a software agent can learn. Reinforcement Learning uses behaviorist psychology in order to achieve reward maximization. This section also includes important Reinforcement Learning approaches like Markov Decision Processes and Game Theory.",
      "featured": false,
      "teaser_video": {"youtube_url": ""},
      "title": "Machine Learning",
      "required_knowledge": "A strong familiarity with Probability Theory, Linear Algebra and Statistics is required. An understanding of [Intro to Statistics](https://www.udacity.com/course/st101), especially [Lessons 8, 9 and 10](https://www.udacity.com/course/viewer#!/c-st101/l-48738235/m-48688822), would be helpful.\n\nStudents should also have some experience in programming (perhaps through [Introduction to CS](https://www.udacity.com/course/cs101)) and a familiarity with Neural Networks (as covered in [Introduction to Artificial Intelligence](https://www.udacity.com/course/cs271)).",
      "syllabus": "###Supervised Learning\n- Lesson 0: Machine Learning is the ROX\n- Lesson 1: Decision Trees\n- Lesson 2: Regression and Classification\n- Lesson 3: Neural Networks\n- Lesson 4: Instance-Based Learning\n- Lesson 5: Ensemble B&B\n- Lesson 6: Kernel Methods and Support Vector Machines (SVM)s\n- Lesson 7: Computational Learning Theory\n- Lesson 8: VC Dimensions\n- Lesson 9: Bayesian Learning\n- Lesson 10: Bayesian Inference\n\n###Unsupervised Learning\n- Lesson 1: Randomized optimization\n- Lesson 2: Clustering\n- Lesson 3: Feature Selection\n- Lesson 4: Feature Transformation\n- Lesson 5: Information Theory\n\n###Reinforcement Learning\n- Lesson 1: Markov Decision Processes\n- Lesson 2: Reinforcement Learning\n- Lesson 3: Game Theory\n- Lesson 4: Game Theory, Continued",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/ud262?utm_medium=referral&utm_campaign=api",
      "project_name": "",
      "full_course_available": false,
      "faq": "",
      "affiliates": [
        {
          "image": "https://lh4.ggpht.com/nGlPuZaZ6BbR23QfhSVNT_Sd_U45RnUECVGhx-cKIlo3D_Onofn-nWpV3sEYEQsczb7tC4JhggdGYyhAAQ4I=s0#w=130&h=60",
          "name": "Georgia Institute of Technology"
        }
      ],
      "tracks": ["Georgia Tech Masters in CS"],
      "banner_image": "https://lh3.ggpht.com/dwxey9JbdCOxTqrLCwfmHEKWLHM6Y54cyqsiAMMlEcmx7hhnlE-7B31_fzxggqmLD0QEI5FtNteIHiZEmuUW=s0#w=4680&h=968",
      "short_summary": "In this course, you'll learn how to apply Supervised, Unsupervised and Reinforcement Learning techniques for solving a range of data science problems.",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "months",
      "summary": "<i>This class is offered as CS7641 at Georgia Tech where it is a part of the [Online Masters Degree (OMS)](http://www.omscs.gatech.edu/). Taking this course here will not earn credit towards the OMS degree.</i>\n\nMachine Learning is a graduate-level course covering the area of Artificial Intelligence concerned with computer programs that modify and improve their performance through experiences. \n\nThe first part of the course covers Supervised Learning, a machine learning task that makes it possible for your phone to recognize your voice, your email to filter spam, and for computers to learn a bunch of other cool stuff.\n\nIn part two, you will learn about Unsupervised Learning. Ever wonder how Netflix can predict what movies you'll like? Or how Amazon knows what you want to buy before you do? Such answers can be found in this section!\n\nFinally, can we program machines to learn like humans? This Reinforcement Learning section will teach you the algorithms for designing self-learning agents like us!",
      "expected_duration": 4
    }
  ],
  "tracks": [
    {
      "courses": [
        "cs101",
        "ud359",
        "ud120",
        "ud507",
        "ud617",
        "ud381",
        "ud651",
        "ud827",
        "ud201",
        "ud032",
        "ud919",
        "st101"
      ],
      "name": "Data Science",
      "description": "Learn data science from industry experts at Facebook, Cloudera, MongoDB, Georgia Tech, and more. We offer courses in data science where you\u2019ll learn to solve data-rich problems and apply this knowledge to your big data needs. Whether you\u2019re new to the field or looking for additional training, we have introductory, advanced, and industry-specific courses to meet your learning goals."
    },
    {
      "courses": [
        "ud304",
        "ud804",
        "ud893",
        "ud882",
        "ud015",
        "ud197",
        "ud088",
        "ud775",
        "cs101",
        "ud989",
        "ud549",
        "ud859",
        "ud036",
        "cs253",
        "ud110",
        "ud292",
        "ud245",
        "ud162",
        "ud436",
        "ud884",
        "cs256",
        "cs255"
      ],
      "name": "Web Development",
      "description": "Udacity web development courses are built with industry tech leaders such as Google, Salesforce, and others. These classes are designed to help you gain skills through web application development. You\u2019ll learn the skills required to become a Front-End Engineer, Back-End Engineer, or a Full-Stack Engineer. Whether you\u2019re trying to build your first website or you're trying to advance your skills we\u2019ll teach you what you need to become a web developer."
    },
    {
      "courses": [
        "ud775",
        "cs101",
        "cs046",
        "ud036",
        "ud617",
        "ud805",
        "cs373",
        "ud032",
        "cs344",
        "cs271",
        "cs291",
        "cs258",
        "cs212",
        "cs215",
        "cs262",
        "cs387",
        "cs259",
        "cs313"
      ],
      "name": "Software Engineering",
      "description": "Learn the skills you need to become or advance your skills as a Software Engineer. We offer a range of online courses that teach you the fundamentals of programming to advanced topics in computing such as parallel programming and software debugging. Start learning from industry experts from NVIDIA, Cadence, Autodesk and more!"
    },
    {
      "courses": [
        "ud853",
        "ud849",
        "cs046"
      ],
      "name": "Android",
      "description": "Learn how to design and develop great Android apps through courses built by industry experts at Google."
    },
    {
      "courses": [
        "ud585",
        "ud788",
        "ud421"
      ],
      "name": "iOS",
      "description": "In Udacity's iOS courses, you'll bridge the gap between the physical and the virtual. You'll learn to leverage common hardware features on iPhone and iPad, including the camera, microphone, GPS, gyroscope, and accelerometer to create engaging and interactive user experiences. Whether you want to build the app of your dreams or land a job as an iOS developer, you'll be developing for platforms used by hundreds of millions of people every day. And that's pretty rad."
    },
    {
      "courses": [
        "ud189",
        "ud061",
        "ud409",
        "ud809",
        "ud007",
        "ud262",
        "ud805",
        "cs373",
        "ud436"
      ],
      "name": "Georgia Tech Masters in CS",
      "description": "In partnership with Georgia Tech and AT&T, Udacity offers access to individual Georgia Tech Online Masters in Computer Science courses. These advanced courses are taught in the full degree program from Georgia Tech and cover topics such as Artificial Intelligence and Machine Learning."
    },
    {
      "courses": [
        "ep245",
        "design101",
        "ma004",
        "ma008",
        "ma006",
        "cs222",
        "ph100",
        "bio110",
        "ps001"
      ],
      "name": "Non-Tech Classes",
      "description": "Udacity offers a range of online courses from Entrepreneurship, Design and Math to Physics and Genomics. These online courses are taught by subject matter experts in an engaging and interactive online experience. Check out the range of courses we have to offer."
    }
  ],
  "degrees": [
    {
      "instructors": [],
      "subtitle": "Build your programming foundation",
      "key": "nd000",
      "image": "https://lh3.ggpht.com/XveIj0_7TsPpL4cEizGSfJXGWcNt_cFM8eucLRcsecmgO92a1La8Vj8zgV-aZoP5l_D3V3k4nDpSwFXPQZqX=s0#w=1090&h=670",
      "expected_learning": "The world of programming can be a hard one to enter.\n\nThe jargon is intimidating. There are countless ways to start. And as a novice, it's hard to even know what you actually need to learn. This barrier to entry prevents many people from learning the life-changing skill of programming. \n\nThis Nanodegree is meant to remove that barrier by providing a simple path to the knowledge, skills, and ways of thinking that programmers in any field use all the time. \n\nAfter completing this Nanodegree you will not be an an expert programmer. But you will know enough to be dangerous and you'll have the power to make an informed choice about what you want to do next. You may decide to pursue a career in tech or you may be satisfied with the technical literacy, programming skills and mindsets you've developed. \n\nRegardless of your choice, you will be changed in three important ways.\n\n1. **You will have new knowledge**. This new knowledge will let you communicate effectively with professional programmers, teach your friends and family how the internet works, and understand the most important concepts in programming.\n2. **You will have new skills**. These skills will let you build web pages that others can use, automate repetitive tasks in your life, and quickly find the appropriate educational resources for whatever programming skills you choose to learn in the future.\n3. **You will have new ways of thinking**. This Nanodegree will focus on five thinking styles that programmers use all the time. Once you've acquired them, you'll find that \"thinking like a programmer\" gives you a new set of tools for thinking about areas of your life that may have nothing to do with programming at all.",
      "featured": false,
      "teaser_video": {"youtube_url": ""},
      "title": "Introduction to Programming Nanodegree",
      "required_knowledge": "This Nanodegree is meant for someone with no technical background.",
      "syllabus": "## What You Will Build\n\nAs you progress through this Nanodegree you will document what you're learning in a web page that you'll build as you go. By the end you will have a fully-functioning web page to share with your friends and family. This web page will:\n\n### Look Professional\nBy using a \"styling\" language called CSS, you will be able to quickly and easily change the look and feel of your web page. While learning CSS, you'll also gain experience with one of the most important concepts in computer science: avoiding repetition through something called *abstraction*. \n\n### Display Videos\nIn addition to your own notes about what you're learning, you'll learn to write computer code in a language called Python that will embed your favorite videos (from Udacity or anywhere else) directly onto your web page. While learning  Python, you'll be developing a skill that's required for every programming project regardless of language: using procedural thinking to tell a computer exactly what you want it to do.\n\n\n### Be User-Friendly\nEven though *you* will have the skills to modify your web page by changing the code it's made from, the people you show it to may not. You'll add a form that allows visitors to add their own content to your page (if you let them of course). While you're learning what to do with information that someone submits to your web page, you'll also gain a deeper understanding for how the internet works and how computer programmers assemble complex programs by combining pieces of computer code that others have written before them. \n\n## How You Will Learn to Build it\n\nThis Nanodegree consists of a series of 5 courses. In each one, you will learn new broadly-applicable technical skills. After each course, you will complete a project checkpoint, where you apply your new skills by adding functionality to your web page, then submit your work for valuable feedback on your progress.  \n\n### Course 1: A Web of Structured Documents\nYou will learn the basics of how the internet works and how documents written in a language called HTML form the backbone of the Web. In the **project checkpoint** at the end you'll *write HTML and CSS (another language) to make your web page look professional.*\n\n### Course 2: Telling Computers What to Do\nThis is the course where you'll learn how to program. You'll learn a programming language called Python and you'll use it to write instructions that the computer can understand and execute. After this course you will have incredible power: you will be able to automate almost any repetitive task that can be done on a computer. In the **project checkpoint** you will *write a program that automatically makes web pages.*\n\n### Course 3: The Power of Reusing Code\nIn this course you will learn an entirely new approach to programming (and thinking) called Object Oriented Programming and how to use this approach to build impressive programs by simply reusing or modifying computer code that others have already written. In the **project checkpoint**, you will *embed YouTube videos directly into your web site.*\n\n### Course 4: Working with the Full Stack\nUp to this point, you still haven't put your web page online: you've only seen it on your own computer. In this course, you will gain a deeper understanding for how the internet works and will write code which tells computers called \"servers\" how to display web pages. In the **project checkpoint** you will *put your web page online and build what's called a \"back end\" which will allow people anywhere in the world to view and--if you let them--modify your site.*\n\n### Course 5: The Rest of the Programming World\nAt this point, you will already have a solid understanding of most of the essential concepts and skills that programming requires. This course will be a rapid sampling of some of the ideas that you haven't seen. You'll be introduced to ideas around topics like:\n\n* algorithms\n* efficiency\n* what makes code \"good\"\n* what it's like to work as a programmer\n* programming for mobile devices\n\nAnd more. In the **project checkpoint** you will *pursue one of these ideas even deeper by adding new functionality (you get to choose what) to your web page.*",
      "new_release": true,
      "homepage": "https://www.udacity.com/course/nd000?utm_medium=referral&utm_campaign=api",
      "project_name": "",
      "full_course_available": true,
      "faq": "",
      "affiliates": [],
      "tracks": [],
      "banner_image": "https://lh6.ggpht.com/Fnv18TpBOzfB9_tRdymjvTY4pwwiiYlgcC86vaZrIVNbHcqR6FAtypjbZlRsL2CijQE5VuF-Y8ehmi8vJA=s0#w=4680&h=968",
      "short_summary": "Welcome to the world of programming. Learn to code and how to \"think like a programmer.\" Show off your own website when you're done.",
      "starter": true,
      "level": "beginner",
      "expected_duration_unit": "months",
      "summary": "If you have zero programming knowledge, completing this Nanodegree will give you enough to be an effective programmer. You won\u2019t just learn to code, you will learn what it means to \u201cthink like a programmer\u201d and you'll have your own web page and a portfolio of programs you've built to prove it. \n\nThis Nanodegree equips you with the foundational programming knowledge and skills that all programmers use whether they program mobile apps, create web pages, or analyze data.\n\n**Note**: Unlike other Nanodegree programs, this one does **not** prepare you for a specific role (e.g. Web Developer or Data Analyst). However, it will set you apart in your current job, open new opportunities in technology and will give you the foundations to continue learning.",
      "expected_duration": 4
    },
    {
      "instructors": [],
      "subtitle": "Creating Stunning User Experiences",
      "key": "nd001",
      "image": "https://lh5.ggpht.com/84T-9kTa8F0DM3yZTuk9Xp5LRxgfDwTEGDLUs2-agd2ATb3aDDXAmeM8cU-m0e6eTFuzYFmNsMm_Q-QfAA=s0#w=1090&h=671",
      "expected_learning": "This Nanodegree program will teach you the skills required to become a Front-End Web Developer. We\u2019ve designed this curriculum with expert web developers and hiring managers, allowing you to demonstrate your skills by completing a series of projects approved by leading employers as the critical indicators of job-readiness. Specifically, you\u2019ll:\n\n* create a professional portfolio using HTML and the Bootstrap CSS framework\n* use the power of jQuery\u2019s DOM manipulation to dynamically populate a resume with your own information\n* develop your very own arcade game in JavaScript with the HTML5 Canvas API\n* discover how to optimize your application\u2019s perceived load time by taking the Critical Rendering Path into account\n* learn that frames per second isn\u2019t just important for games and how to ensure a silky smooth experience in your applications by optimizing for 60 frames per second\n* explore best practices in application architecture and design patterns\n* build a complex mapping application using the Knockout framework and a variety of third-party API services\n* develop and maintain applications with the confidence test-driven development promotes, using the Jasmine testing framework",
      "featured": false,
      "teaser_video": {"youtube_url": ""},
      "title": "Front-End Web Developer Nanodegree",
      "required_knowledge": "In order to determine if the Front-End Web Developer Nanodegree is a good fit for you, please take the [Readiness Assessment](https://www.udacity.com/course/viewer#!/c-none/l-3054868886). It will ask you a series of technical and time management questions to help you determine if now is the right time to start the program. General prerequisites are summarized below.\n\nGeneral Requirements:\n\n* You are self-driven and motivated to learn. Participation in this program requires consistently meeting the deadlines set for your cohort and devoting at least 10 hours per week to your work.\n* You can communicate fluently and professionally in written and spoken English.\n* You are willing to contribute to the success of the program, including collaborating with fellow students and giving us feedback on how we can improve.\n\nFront-End Developer Nanodegree Specific Requirements:\n\n* You have access to a computer with a broadband connection, on which you\u2019ll install a professional code/text editor (ie. <a href=\"http://www.sublimetext.com/\" target=\"_blank\">Sublime Text</a> or <a href=\"https://atom.io/\" target=\"_blank\">Atom</a>).\n* You can independently solve and describe your solution to a math or programming problem and \n* You are familiar with [basic programming concepts](https://docs.webplatform.org/wiki/tutorials/Programming_-_the_real_basics) such as variables, conditions and loops.",
      "syllabus": "In the Nanodegree program, you\u2019ll build six portfolio-worthy projects. Depending on your knowledge and skill level, you can either learn the necessary skills through our supporting courses, or jump into the projects directly. A summary of each of these projects, as well as links to their supporting courses are included in the sections below.\n\n### PROJECT Build a Portfolio Site\nYou will be provided with a design mockup as a PDF-file and must replicate that design in HTML and CSS. You will develop a responsive website that will display images, descriptions and links to each of the portfolio projects you will complete throughout the course of the Front-End Web Developer Nanodegree.\n\nPrepare for this project with: [Intro to HTML and CSS](https://www.udacity.com/course/ud304), [Responsive Web Design Fundamentals](https://www.udacity.com/course/ud893), and [Responsive Images](https://www.udacity.com/course/ud882)\n\n### PROJECT Interactive Resume\nYou will develop an interactive resume application that reads your resume content from a JSON file and dynamically displays that content within a provided template. You will use objects, functions, conditionals, and control structures to compose the content that will display on the resume.\n\nPrepare for this project with: [JavaScript Basics](https://www.udacity.com/course/ud804) and [Intro to jQuery](https://www.udacity.com/course/ud245)\n\n### PROJECT Classic Arcade Game Clone\nYou will be provided with visual assets and a game loop engine; using these tools you must add a number of entities to the game including the player characters and enemies to recreate the classic arcade game *Frogger*.\n\nPrepare for this project with: [Object-Oriented JavaScript](https://www.udacity.com/course/ud015) and [HTML5 Canvas](https://www.udacity.com/course/ud292)\n\n### PROJECT Website Optimization \nYou will optimize a provided website with a number of optimization- and performance-related issues so that it achieves a target PageSpeed score and runs at 60 frames per second.\n\nPrepare for this project with: [Website Performance Optimization](https://www.udacity.com/course/ud884)\n\n### PROJECT Neighborhood Map\nYou will develop a single-page application featuring a map of your neighborhood or a neighborhood you would like to visit. You will then add additional functionality to this application, including: map markers to identify popular locations or places you\u2019d like to visit, a search function to easily discover these locations, and a listview to support simple browsing of all locations. You will then research and implement third-party APIs that provide additional information about each of these locations (such as StreetView images, Wikipedia articles, Yelp reviews, etc).\n\nPrepare for this project with:  [Intro to AJAX](https://www.udacity.com/course/ud110) and [JavaScript Design Patterns](https://www.udacity.com/course/ud989)\n\n### PROJECT Feed Reader Testing\nIn this project you are given a web-based application that reads RSS feeds. The original developer of this application clearly saw the value in testing, they've already included Jasmine and even started writing their first test suite! Unfortunately, they decided to move on to start their own company and we're now left with an application with an incomplete test suite. That's where you come in.\n\nPrepare for this project with: [JavaScript Testing](https://www.udacity.com/course/ud549)\n\n### Additional Projects\n\nYou\u2019ll host all your projects on GitHub and make regular commits. If you haven\u2019t learned version control yet, use our latest course on the topic: [How to Use Git and GitHub](https://www.udacity.com/course/ud775)\n\n<br>\nWe will be periodically reviewing the Front-End Nanodegree curriculum - both courses and projects - and making adjustments based on student and industry feedback. We will notify active students working toward the Nanodegree about effects this may have on the degree requirements.",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/nd001?utm_medium=referral&utm_campaign=api",
      "project_name": "",
      "full_course_available": true,
      "faq": "",
      "affiliates": [],
      "tracks": ["Web Development"],
      "banner_image": "https://lh3.ggpht.com/WBJdFIscHSIhGiAu6KWNHRMkfYvI13sjRvvxiQ5z6W1W1lGfknbDPuC21i2el5QR2wHq5snHohyyCsr90eHh=s0#w=1170&h=422",
      "short_summary": "Become a Front-End Web Developer by completing a variety of projects for your portfolio - become an HTML, CSS and JavaScript pro!",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "months",
      "summary": "In this Nanodegree you\u2019ll learn the fundamentals of how the web works and gain a working knowledge of the three foundational languages that power each and every website: HTML, CSS and JavaScript. You\u2019ll learn to build beautiful, responsive websites optimized for security and performance, and see the efforts of your work with each click of the browser\u2019s refresh button! In addition to building six portfolio-worthy projects for which you\u2019ll receive expert feedback on your code, you\u2019ll advance your career prospects by learning how to ace a technical job interview.",
      "expected_duration": 6
    },
    {
      "instructors": [],
      "subtitle": "Discover Insights from Data",
      "key": "nd002",
      "image": "https://lh4.ggpht.com/p3YcVrknIelOAFSPdcBfeutJvlZf5PAdwxA2QsgOz6RZ61qXmKgbsMzEuu6p7o_krEG0i853Rmzuq7VMFA=s0#w=1090&h=670",
      "expected_learning": "The Data Analyst nanodegree is designed to prepare you for a career in data science. As a Data Analyst, you will be responsible for obtaining, analyzing, and effectively reporting on data insights ranging from business metrics to user behavior and product performance. \n\nWorking with our leading industry partners, we\u2019ve carefully designed the most efficient set of projects to train you on the fundamental skills of data science and help you become a Data Analyst.",
      "featured": false,
      "teaser_video": {"youtube_url": ""},
      "title": "Data Analyst Nanodegree",
      "required_knowledge": "Data Analyst nanodegree students...\n\n* are interested in data science.\n* have a strong grasp of descriptive and inferential statistics.\n* have python programming experience.\n* have a strong understanding of programming concepts such as variables, functions, loops, and basic data structures like lists and dictionaries.\n\nPrerequisite:\n\nThe first thing you should do is take the [Readiness Assessment](https://www.udacity.com/course/viewer#!/c-none/l-2364518584/m-2782888549), which will help you determine if you have the right background to participate.  \n\nGeneral Requirements:\n\n* You are self-driven and motivated to learn. Participation in this program requires consistently meeting the deadlines for your cohort and devoting at least 10 hours per week to your work.\n* You can communicate fluently and professionally in written and spoken English.\n* You have access to a computer with a broadband connection, on which you\u2019ll install a professional code/text editor (ie. Sublime Text or Atom) and programming languages like Python and R and associating data science libraries.\n* You are willing to contribute to the success of the program, including collaborating with fellow students and giving us feedback on how we can improve.",
      "syllabus": "These are the projects you'll build and the classes that will prepare you to build each of the projects. You'll have access to all these in the Nanodegree:\n\n**Predict the New York City Subway Ridership**\n\nIn this project, you will be exposed to and learn fundamental data science skills like data wrangling, applied statistics and machine learning, effective visualization, and working with big data using MapReduce. Specifically, you will pose a question about the New York City Subway and work with the subway ridership dataset to draw an interesting conclusion about the dataset itself.\n\nPrepare for this project with: [Intro to Data Science](https://www.udacity.com/course/ud359)\n\n**Wrangle OpenStreetMaps Data**  \nYou will choose any area of the world in <a href=\"https://www.openstreetmap.org\" target=\"_blank\">Open Street Map </a> and use data munging techniques, such as assessing the quality of the data for validity, accuracy, completeness, consistency and uniformity, \nto clean the OpenStreetMap data for a part of the world that you care about.\n\nPrepare for this project with:  [Data Wrangling with MongoDB](https://www.udacity.com/course/ud032)\n\n**Explore, Summarize, and Discover Interesting Insights from Datasets**  \nYou will use R to apply exploratory data analysis techniques that you have learned to the project. You will practice understanding a single variable and relationships between multiple variables, and explore a selected data set for distributions, outliers, and anomalies.\n\nPrepare for this project with: [Data Analysis with R](https://www.udacity.com/course/ud651)\n\n\n**Identify Fraud from the Enron Email Dataset**  \nIn this project, you will play detective, and put your machine learning skills to use by building an algorithm to identify Enron Employees who may have committed fraud based on the public Enron financial and email dataset. \n\nPrepare for this project with:  [Intro to Machine Learning](https://www.udacity.com/course/ud120)\n\n**Tell Stories with Data Visualization**  \nFor this project, you will create a data visualization from a data set that tells a story or allows a reader to explore trends or patterns. Your work will be a reflection of the theory and best practices of data visualization.\n\nPrepare for this project with:  [Data Visualization](https://www.udacity.com/course/ud507)",
      "new_release": false,
      "homepage": "https://www.udacity.com/course/nd002?utm_medium=referral&utm_campaign=api",
      "project_name": "",
      "full_course_available": true,
      "faq": "",
      "affiliates": [],
      "tracks": ["Data Science"],
      "banner_image": "https://lh3.ggpht.com/QR1qKszE9uRVNuwafZgQOghcoZQ3VbcN89UAN3QE6HE1QULt2gkC47n1OAlYmQMyyxRSjJfrNxIeo3uaY-g=s0#w=4672&h=968",
      "short_summary": "Learn how to find insights from data and prepare for a career in data science.",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "months",
      "summary": "This Nanodegree program is the most efficient curriculum to prepare you for a job as a Data Analyst. You will learn to:  \n\n* Wrangle, extract, transform, and load data from various databases, formats, and data sources  \n* Use exploratory data analysis techniques to identify meaningful relationships, patterns, or trends from complex data sets\n* Classify unlabeled data or predict into the future with applied statistics and machine learning algorithms   \n* Communicate data analysis and findings well through effective data visualizations  \n\nYou will work with your peers and advisors on projects approved by leading employers as the critical indicators of job-readiness. We designed these projects with expert Data Analysts, Data Scientists, and hiring managers.",
      "expected_duration": 9
    },
    {
      "instructors": [],
      "subtitle": "Programming Apps for the iPhone and iPad",
      "key": "nd003",
      "image": "https://lh3.ggpht.com/mgyUnDEyRP_1SWyCqRVLV7YyxXQFIalWcMNHX0n3iL1ohlIfjI_BGnYttbZphiOPK3rbVUy2HJ5Q4SiNeeE=s0#w=1090&h=670",
      "expected_learning": "Today about half the adult population owns a smartphone; by 2020, 80% will.<sup>1</sup> And while the increase in volume is impressive in and of itself, it\u2019s perhaps more impressive that these devices have become staples in our everyday lives. The average American smartphone user spends <a href=\"http://www.flurry.com/bid/109749/Apps-Solidify-Leadership-Six-Years-into-the-Mobile-Revolution#.VPYAJVPF8id\" target=\"_blank\">162 minutes per day</a> on their device. This ubiquity of smartphones and their usage provides a huge opportunity for companies, as they attempt to ingrain their product into the daily habits of their users. As the smartphone market grows, the number of iOS Developer jobs proportionately increases to meet this demand. It\u2019s not an occupation that will disappear any time soon.\n\nBy working with leaders in the industry, we've carefully cultivated a comprehensive set of projects and skills training to prepare you for a career as an entry-level iOS Developer. Specifically, you\u2019ll learn:\n\n* MVC architecture and why it's important when developing apps\n* How to build sophisticated and polished user interfaces with UIKit components\n* How to implement common frameworks used by iOS developers\n* How to implement Core Data for local persistence of an object structure\n* Use of external APIs to make use of data from other companies\n\n***\n<sup>1</sup> \u201cPlanet of Phones\u201d, *The Economist*, http://www.economist.com/news/leaders/21645180-smartphone-ubiquitous-addictive-and-transformative-planet-phones",
      "featured": false,
      "teaser_video": {"youtube_url": ""},
      "title": "iOS Developer Nanodegree",
      "required_knowledge": "In order to determine whether or not the iOS Developer Nanodegree is right for you, please take this <a href=\"https://www.udacity.com/course/viewer#!/c-none/l-3098108743\" target=\"_blank\">readiness assessment</a>. It will ask you a series of technical and time management questions to help you determine if now is the right time to start the program. General prerequisites are summarized below.\n\nGeneral Requirements:\n\n* You are self-driven and motivated to learn. Participation in this program requires consistently meeting the deadlines set for your cohort and devoting at least 10 hours per week to your work.\n* You can communicate fluently and professionally in written and spoken English.\n* You are willing to contribute to the success of the program, including collaborating with fellow students and giving us feedback on how we can improve.\n\niOS Developer Nanodegree Specific Requirements:\n\n* Prior object-oriented programming experience, in any object-oriented language \n* Strong understanding of programming concepts like variables, if statements, and loops, as well as object-oriented programming concepts like functions and classes\n* Access to a Mac computer running OS X 10.9 or later",
      "syllabus": "In the Nanodegree program, you\u2019ll build five portfolio-worthy apps. Depending on your knowledge and skill level, you can either learn the necessary skills through our supporting courses, or jump into building the apps directly. A summary of each of these apps, as well as a link to their supporting course are included in the sections below.\n\n### Pitch Perfect\nBuild an app that records a message and plays the audio back through user-selected filters.\n\nPrepare for this project with: <a href=\"https://www.udacity.com/course/ud585\" target=\"_blank\">Intro to iOS App Development with Swift</a>\n\n### MemeMe\nTake a photo, and overlay text to meme-ify your friends. Then share on your favorite social channels!\n\nPrepare for this project with: <a href=\"https://www.udacity.com/course/ud788\" target=\"_blank\">UIKit Fundamentals</a>\n\n### On the Map\nAdd your current location to a map of locations for other nanodegree students. Also, post a link to your own blog post, project, or portfolio for others to see.\n\nPrepare for this project with: <a href=\"https://www.udacity.com/course/ud421\" target=\"_blank\">iOS Networking with Swift</a>\n\n### Virtual Tourist\nTour the world without leaving the comforts of your couch! This app allows you to drop pins on a map and pull up Flickr images associated with that location. You will store the locations and images using Core Data. \n\nPrepare for this project with: <a href=\"https://www.udacity.com/course/ud325\" target=\"_blank\">iOS Persistence and Core Data</a>\n\n### You Decide!\nLanding a job as an iOS Developer requires more than technical chops; it also requires a certain amount of creativity and innovation. Drawing from all of the skills you've developed so far in the Nanodegree, you'll dream up, design, and code your own custom app.\n\nPrepare for this project with: *Coming soon!*",
      "new_release": true,
      "homepage": "https://www.udacity.com/course/nd003?utm_medium=referral&utm_campaign=api",
      "project_name": "",
      "full_course_available": true,
      "faq": "",
      "affiliates": [],
      "tracks": ["iOS"],
      "banner_image": "https://lh5.ggpht.com/RssNhhuFLl8FNeRwpNOSsK5ron6RNdi459PtAT5QFQiqQWqwsICsy9bcq043-3eqL7P7nngnkFnEt0CuiTo=s0#w=1170&h=422",
      "short_summary": "Learn how to build advanced, modern iOS applications with polished user interfaces on top of industry-standard frameworks.",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "months",
      "summary": "This Nanodegree program will teach you the skills required to become an iOS Developer. It\u2019s an exciting occupation, as writing apps for the iPhone and iPad opens a world of opportunity. Developing for iOS (the operating system used for iPhones & iPads) allows you to connect users around the world in interesting and innovative ways.\n\nOf course, it doesn\u2019t hurt that iOS Developers are in-demand and lucratively paid, either.\n\nIn this Nanodegree program, you\u2019ll build five portfolio-worthy iOS apps that demonstrate your expertise as an iOS Developer. You\u2019ll write all of these apps in Swift, Apple\u2019s custom programming language developed specifically for building iOS and OS X apps.\n\n**Enrollment Now Open for our Inaugural Cohort!**\n\nEnrolling this month gives you:\n\n* \u201cInaugural Cohort\u201d  bragging rights\n* A chance to deeply influence the program: we're constantly improving and rely on your active feedback to make it better. Don\u2019t be shy and speak up!\n* More support from coaches & instructors: they spend extra time with first-cohort students to get extra feedback\n\nWe\u2019re also still building the supporting course content for the later project. We will release them incrementally by the end of April, so that the material you need will be live when you need it.",
      "expected_duration": 6
    },
    {
      "instructors": [],
      "subtitle": "Building Complex Web Applications",
      "key": "nd004",
      "image": "https://lh5.ggpht.com/DEqyoxq-D5FJ76mD32m8oQDYAlJWSCgKPPpckoD6uSDTKzUKhA23N7qqesTZbuFPcbgkxB8t-zDf55G0sA=s0#w=1090&h=670",
      "expected_learning": "The Full Stack Web Developer Nanodegree is designed to prepare you for a career in web development. As a Full Stack Web Developer, you are the \"jack of all trades\" who companies rely on to build, support and maintain their web applications. With our industry partners, we've carefully crafted the most efficient set of projects and skills training to guide you along the way.\n\nIn this Nanodegree you will hone your understanding of how the web works, you'll develop complex relational databases used to store your applications' data, you'll secure and configure your own Linux-based servers, and you'll build complete web applications using HTML, CSS, JavaScript and Python.",
      "featured": false,
      "teaser_video": {"youtube_url": ""},
      "title": "Full Stack Web Developer Nanodegree",
      "required_knowledge": "Prerequisites:\n\nIn order to determine if the Full Stack Web Developer Nanodegree is a good fit for you, please take the <a href=\"https://www.udacity.com/course/viewer#!/c-none/l-3486749853\" target=\"_blank\">Readiness Assessment</a>. This will help you determine if you are ready to start.\n\nMinimum Requirements:\n\n1. Experience using HTML, CSS and JavaScript to build complex client-side applications. If you do not have experience in these languages, we encourage you to enroll in our [Front-End Web Developer Nanodegree](https://www.udacity.com/course/nd001).\n2. Beginner-level experience in Python. If you do not have this experience, check out our [Intro to Programming Nanodegree](https://www.udacity.com/course/nd000) or the first three lessons of [Intro to Computer Science](https://www.udacity.com/course/cs101).\n3. Experience using Git for version control. If you do not have this experience, check out our [How to Use Git and GitHub](https://www.udacity.com/course/ud775) course.\n4. You are self-driven and motivated to learn. Participation in this program requires consistently meeting the deadlines set for your cohort and devoting at least 10 hours per week to your work.\n5. You can communicate fluently and professionally in written and spoken English.\n6. You have access to a computer with a broadband connection, on which you'll install a professional code/text editor (ie. [Sublime Text](http://www.sublimetext.com/) or [Atom](https://atom.io/)) as well as virtual machines (using [VirtualBox](https://www.virtualbox.org/) and [Vagrant](https://www.vagrantup.com/)).\n7. You are willing to contribute to the success of the program, including collaborating with fellow students and giving us feedback on how we can improve.\n\nDesirable Prior Experience:\n\n1. You've completed an online programming course.\n2. You've tried to build server-side applications in the past and want to learn how to do it like a pro.",
      "syllabus": "These are the projects you'll build and the classes that will prepare you to build each of the projects. You'll have access to all these in the Nanodegree:\n\n### PROJECT Movie Trailer Website\nYou will write server-side code to store a list of your favorite movies, including box art imagery and a movie trailer URL. You will then serve this data as a web page allowing visitors to review their movies and watch the trailers.\n\nPrepare for this project with: <a href=\"/course/ud036\" target=\"_blank\">Programming Foundations with Python</a>\n\n### PROJECT Tournament Results\nYou will develop a database schema to store the game matches between players. You will then write code to query this data and determine the winners of various games.\n\nPrepare for this project with: <a href=\"/course/ud197\" target=\"_blank\">Intro to Relational Databases</a>\n\n### PROJECT Item Catalog\nYou will develop an application that provides a list of items within a variety of categories as well as provide a user registration and authentication system. Registered users will have the ability to post, edit and delete their own items.\n\nPrepare for this project with:\n\n*  <a href=\"/course/ud088\" target=\"_blank\">Full Stack Foundations</a> <br>\n*  Authentication and Authorization *coming soon!*\n\n### PROJECT Conference Organization App\nYou will develop a cloud-based API server to support a provided conference organization application that exists on the web as well as a native Android application. The API supports the following functionality found within the app: user authentication, user profiles, conference information and various manners in which to query the data.\n\nPrepare for this project with: Developing Scalable Apps with Python *coming soon!*\n\n### PROJECT Linux-based Server Configuration\nYou will take a baseline installation of a Linux distribution on a virtual machine and prepare it to host your web applications, to include installing updates, securing it from a number of attack vectors and installing/configuring web and database servers.\n\nPrepare for this project with: Linux Basics for Web Developers *coming soon!*\n\n### Additional Information\n\nWe will be periodically reviewing the Full Stack Nanodegree curriculum - both classes and projects - and making adjustments based on student and industry feedback. We will notify active students working toward the Nanodegree about effects this may have on the degree requirements.",
      "new_release": true,
      "homepage": "https://www.udacity.com/course/nd004?utm_medium=referral&utm_campaign=api",
      "project_name": "",
      "full_course_available": true,
      "faq": "",
      "affiliates": [],
      "tracks": ["Web Development"],
      "banner_image": "https://lh6.ggpht.com/rAMZ_i12gHuhfTpWC_Q4WLiTYMbHXhKmbIY88l0G_C8Y8sZJ5DAEwSon3DGOrsc4eGhXvm6dt1ODDXuwzF0=s0#w=4680&h=968",
      "short_summary": "Learn how to create server-side, data-driven web applications that support any front-end and can scale to support hundreds of thousands of users.",
      "starter": false,
      "level": "intermediate",
      "expected_duration_unit": "months",
      "summary": "This Nanodegree program is the most efficient curriculum to prepare you for a job as a Full Stack Web Developer. Participants in the program will learn to build complex server-side web applications that make use of powerful relational databases to persistently store data. You'll then learn how to secure and configure your very own Linux-based server to host your applications. Finally, you'll explore the challenges in horizontally scaling an application to support thousands of users with a cloud-based application hosting provider.",
      "expected_duration": 6
    }
  ]
}